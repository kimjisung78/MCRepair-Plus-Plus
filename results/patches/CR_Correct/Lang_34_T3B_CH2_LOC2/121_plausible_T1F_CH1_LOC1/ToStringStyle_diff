--- "/home/selab/\353\260\224\355\203\225\355\231\224\353\251\264/MCRepair2/APR_Resources/repair/combination_patches2/Lang_34/121/ToStringStyle_Origin.java"	2023-04-27 16:34:30.399569846 +0900
+++ "/home/selab/\353\260\224\355\203\225\355\231\224\353\251\264/MCRepair2/APR_Resources/repair/combination_patches2/Lang_34/121/ToStringStyle.java"	2023-04-27 16:34:30.403569939 +0900
@@ -144,10 +144,7 @@
      *
      * @return Set the registry of objects being traversed
      */
-    static Map<Object, Object> getRegistry() {
-        return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();
-    }
-
+static Map < Object , Object > getRegistry ( ) { return REGISTRY != null ? REGISTRY . get ( ) : Collections . < Object , Object > emptyMap ( ) ; }
     /**
      * <p>
      * Returns <code>true</code> if the registry contains the given object.
@@ -159,11 +156,7 @@
      * @return boolean <code>true</code> if the registry contains the given
      *             object.
      */
-    static boolean isRegistered(Object value) {
-        Map<Object, Object> m = getRegistry();
-        return m.containsKey(value);
-    }
-
+static boolean isRegistered ( Object value ) { Map < Object , Object > m = getRegistry ( ) ; return m != null && m . containsKey ( value ) ; }
     /**
      * <p>
      * Registers the given object. Used by the reflection methods to avoid
