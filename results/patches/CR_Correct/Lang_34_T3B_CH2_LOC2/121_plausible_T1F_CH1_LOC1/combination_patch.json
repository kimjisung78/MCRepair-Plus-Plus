{
    "ToStringStyle": {
        "0": {
            "action_judgements": null,
            "action_score": 1.0,
            "buggy_code": "static Map < Object , Object > getRegistry ( ) {  return REGISTRY . get ( ) != null ? REGISTRY . get ( ) : Collections . < Object , Object > emptyMap ( ) ;  }",
            "buggy_dir": "",
            "criteria_token_length": 57,
            "criteria_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#static",
                "{#static#Map",
                "static#Map#<",
                "Map#<#Object",
                "<#Object#,",
                "Object#,#Object",
                ",#Object#>",
                "Object#>#get",
                ">#get#registry",
                "get#registry#(",
                "registry#(#)",
                "(#)#{",
                ")#{#return",
                "{#return#r",
                "return#r#e",
                "r#e#g",
                "e#g#i",
                "g#i#s",
                "i#s#t",
                "s#t#r",
                "t#r#y",
                "r#y#.",
                "y#.#get",
                ".#get#(",
                "get#(#)",
                "(#)#!=",
                ")#!=#null",
                "!=#null#?",
                "null#?#r",
                "?#r#e",
                "r#e#g",
                "e#g#i",
                "g#i#s",
                "i#s#t",
                "s#t#r",
                "t#r#y",
                "r#y#.",
                "y#.#get",
                ".#get#(",
                "get#(#)",
                "(#)#:",
                ")#:#Collections",
                ":#Collections#.",
                "Collections#.#<",
                ".#<#Object",
                "<#Object#,",
                "Object#,#Object",
                ",#Object#>",
                "Object#>#empty",
                ">#empty#map",
                "empty#map#(",
                "map#(#)",
                "(#)#;",
                ")#;#}",
                ";#}#}"
            ],
            "diffs": {
                "3": {
                    "action": "CHANGE",
                    "buggy_end_line": 3,
                    "buggy_size": 1,
                    "buggy_start_line": 3,
                    "fixed_end_line": 3,
                    "fixed_size": 1,
                    "fixed_start_line": 3
                }
            },
            "end_line": 149,
            "exp_ins": 0,
            "exp_other": 1,
            "file_ext": ".java",
            "file_key": "Lang_34_src_main_java_org_apache_commons_lang3_builder_ToStringStyle",
            "file_name": "ToStringStyle",
            "module_dir": "src/main/java/org/apache/commons/lang3/builder",
            "module_id": "Lang_34",
            "module_name": "Lang",
            "module_num": "34",
            "multi_chunk_key": "Lang_34_src_main_java_org_apache_commons_lang3_builder_ToStringStyle_method1_getRegistry",
            "ngram_score": 0.7368421052631579,
            "patch": "static Map < Object , Object > getRegistry ( ) { return REGISTRY != null ? REGISTRY . get ( ) : Collections . < Object , Object > emptyMap ( ) ; }",
            "patch_index": 100,
            "per_ins": 0,
            "per_other": 1,
            "score_total": 0.868,
            "set_index": null,
            "start_line": 147,
            "tf_token_length": 53,
            "tf_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#static",
                "{#static#Map",
                "static#Map#<",
                "Map#<#Object",
                "<#Object#,",
                "Object#,#Object",
                ",#Object#>",
                "Object#>#get",
                ">#get#registry",
                "get#registry#(",
                "registry#(#)",
                "(#)#{",
                ")#{#return",
                "{#return#r",
                "return#r#e",
                "r#e#g",
                "e#g#i",
                "g#i#s",
                "i#s#t",
                "s#t#r",
                "t#r#y",
                "r#y#!=",
                "y#!=#null",
                "!=#null#?",
                "null#?#r",
                "?#r#e",
                "r#e#g",
                "e#g#i",
                "g#i#s",
                "i#s#t",
                "s#t#r",
                "t#r#y",
                "r#y#.",
                "y#.#get",
                ".#get#(",
                "get#(#)",
                "(#)#:",
                ")#:#Collections",
                ":#Collections#.",
                "Collections#.#<",
                ".#<#Object",
                "<#Object#,",
                "Object#,#Object",
                ",#Object#>",
                "Object#>#empty",
                ">#empty#map",
                "empty#map#(",
                "map#(#)",
                "(#)#;",
                ")#;#}",
                ";#}#}"
            ]
        },
        "1": {
            "action_judgements": null,
            "action_score": 1.0,
            "buggy_code": "static boolean isRegistered ( Object value ) { Map < Object , Object > m = getRegistry ( ) ;  return m . containsKey ( value ) ;  }",
            "buggy_dir": "",
            "criteria_token_length": 35,
            "criteria_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#static",
                "{#static#boolean",
                "static#boolean#is",
                "boolean#is#registered",
                "is#registered#(",
                "registered#(#Object",
                "(#Object#value",
                "Object#value#)",
                "value#)#{",
                ")#{#Map",
                "{#Map#<",
                "Map#<#Object",
                "<#Object#,",
                "Object#,#Object",
                ",#Object#>",
                "Object#>#m",
                ">#m#=",
                "m#=#get",
                "=#get#registry",
                "get#registry#(",
                "registry#(#)",
                "(#)#;",
                ")#;#return",
                ";#return#m",
                "return#m#.",
                "m#.#contains",
                ".#contains#key",
                "contains#key#(",
                "key#(#value",
                "(#value#)",
                "value#)#;",
                ")#;#}",
                ";#}#}"
            ],
            "diffs": {
                "4": {
                    "action": "CHANGE",
                    "buggy_end_line": 4,
                    "buggy_size": 1,
                    "buggy_start_line": 4,
                    "fixed_end_line": 4,
                    "fixed_size": 1,
                    "fixed_start_line": 4
                }
            },
            "end_line": 165,
            "exp_ins": 0,
            "exp_other": 1,
            "file_ext": ".java",
            "file_key": "Lang_34_src_main_java_org_apache_commons_lang3_builder_ToStringStyle",
            "file_name": "ToStringStyle",
            "module_dir": "src/main/java/org/apache/commons/lang3/builder",
            "module_id": "Lang_34",
            "module_name": "Lang",
            "module_num": "34",
            "multi_chunk_key": "Lang_34_src_main_java_org_apache_commons_lang3_builder_ToStringStyle_method1_isRegistered_Object",
            "ngram_score": 0.8717948717948718,
            "patch": "static boolean isRegistered ( Object value ) { Map < Object , Object > m = getRegistry ( ) ; return m != null && m . containsKey ( value ) ; }",
            "patch_index": 459,
            "per_ins": 0,
            "per_other": 1,
            "score_total": 0.936,
            "set_index": null,
            "start_line": 162,
            "tf_token_length": 39,
            "tf_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#static",
                "{#static#boolean",
                "static#boolean#is",
                "boolean#is#registered",
                "is#registered#(",
                "registered#(#Object",
                "(#Object#value",
                "Object#value#)",
                "value#)#{",
                ")#{#Map",
                "{#Map#<",
                "Map#<#Object",
                "<#Object#,",
                "Object#,#Object",
                ",#Object#>",
                "Object#>#m",
                ">#m#=",
                "m#=#get",
                "=#get#registry",
                "get#registry#(",
                "registry#(#)",
                "(#)#;",
                ")#;#return",
                ";#return#m",
                "return#m#!=",
                "m#!=#null",
                "!=#null#&&",
                "null#&&#m",
                "&&#m#.",
                "m#.#contains",
                ".#contains#key",
                "contains#key#(",
                "key#(#value",
                "(#value#)",
                "value#)#;",
                ")#;#}",
                ";#}#}"
            ]
        }
    }
}