{
    "DateTimeFormatter": {
        "0": {
            "action_judgements": null,
            "action_score": 1.0,
            "buggy_code": "public int parseInto ( ReadWritableInstant instant , String text , int position ) { DateTimeParser parser = requireParser ( ) ; if ( instant == null ) { throw new IllegalArgumentException ( \"Instant must not be null\" ) ; } long instantMillis = instant . getMillis ( ) ; Chronology chrono = instant . getChronology ( ) ;  long instantLocal = instantMillis + chrono . getZone ( ) . getOffset ( instantMillis ) ;  chrono = selectChronology ( chrono ) ;  int defaultYear = chrono . year ( ) . get ( instantLocal ) ;  DateTimeParserBucket bucket = new DateTimeParserBucket ( instantLocal , chrono , iLocale , iPivotYear , defaultYear ) ; int newPos = parser . parseInto ( bucket , text , position ) ; instant . setMillis ( bucket . computeMillis ( false , text ) ) ; if ( iOffsetParsed && bucket . getOffsetInteger ( ) != null ) { int parsedOffset = bucket . getOffsetInteger ( ) ; DateTimeZone parsedZone = DateTimeZone . forOffsetMillis ( parsedOffset ) ; chrono = chrono . withZone ( parsedZone ) ; } else if ( bucket . getZone ( ) != null ) { chrono = chrono . withZone ( bucket . getZone ( ) ) ; } instant . setChronology ( chrono ) ; if ( iZone != null ) { instant . setZone ( iZone ) ; } return newPos ; }",
            "buggy_dir": "",
            "criteria_token_length": 288,
            "criteria_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#public",
                "{#public#int",
                "public#int#parse",
                "int#parse#into",
                "parse#into#(",
                "into#(#read",
                "(#read#writable",
                "read#writable#instant",
                "writable#instant#instant",
                "instant#instant#,",
                "instant#,#String",
                ",#String#text",
                "String#text#,",
                "text#,#int",
                ",#int#position",
                "int#position#)",
                "position#)#{",
                ")#{#date",
                "{#date#time",
                "date#time#parser",
                "time#parser#parser",
                "parser#parser#=",
                "parser#=#require",
                "=#require#parser",
                "require#parser#(",
                "parser#(#)",
                "(#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#instant",
                "(#instant#==",
                "instant#==#null",
                "==#null#)",
                "null#)#{",
                ")#{#throw",
                "{#throw#new",
                "throw#new#illegal",
                "new#illegal#argument",
                "illegal#argument#exception",
                "argument#exception#(",
                "exception#(#\"",
                "(#\"#instant must not be null\"",
                "\"#instant must not be null\"#)",
                "instant must not be null\"#)#;",
                ")#;#}",
                ";#}#long",
                "}#long#instant",
                "long#instant#millis",
                "instant#millis#=",
                "millis#=#instant",
                "=#instant#.",
                "instant#.#get",
                ".#get#millis",
                "get#millis#(",
                "millis#(#)",
                "(#)#;",
                ")#;#Chronology",
                ";#Chronology#chrono",
                "Chronology#chrono#=",
                "chrono#=#instant",
                "=#instant#.",
                "instant#.#get",
                ".#get#chronology",
                "get#chronology#(",
                "chronology#(#)",
                "(#)#;",
                ")#;#long",
                ";#long#instant",
                "long#instant#local",
                "instant#local#=",
                "local#=#instant",
                "=#instant#millis",
                "instant#millis#+",
                "millis#+#chrono",
                "+#chrono#.",
                "chrono#.#get",
                ".#get#zone",
                "get#zone#(",
                "zone#(#)",
                "(#)#.",
                ")#.#get",
                ".#get#offset",
                "get#offset#(",
                "offset#(#instant",
                "(#instant#millis",
                "instant#millis#)",
                "millis#)#;",
                ")#;#chrono",
                ";#chrono#=",
                "chrono#=#select",
                "=#select#chronology",
                "select#chronology#(",
                "chronology#(#chrono",
                "(#chrono#)",
                "chrono#)#;",
                ")#;#int",
                ";#int#default",
                "int#default#year",
                "default#year#=",
                "year#=#chrono",
                "=#chrono#.",
                "chrono#.#year",
                ".#year#(",
                "year#(#)",
                "(#)#.",
                ")#.#get",
                ".#get#(",
                "get#(#instant",
                "(#instant#local",
                "instant#local#)",
                "local#)#;",
                ")#;#date",
                ";#date#time",
                "date#time#parser",
                "time#parser#bucket",
                "parser#bucket#bucket",
                "bucket#bucket#=",
                "bucket#=#new",
                "=#new#date",
                "new#date#time",
                "date#time#parser",
                "time#parser#bucket",
                "parser#bucket#(",
                "bucket#(#instant",
                "(#instant#local",
                "instant#local#,",
                "local#,#chrono",
                ",#chrono#,",
                "chrono#,#i",
                ",#i#locale",
                "i#locale#,",
                "locale#,#pivot",
                ",#pivot#year",
                "pivot#year#,",
                "year#,#default",
                ",#default#year",
                "default#year#)",
                "year#)#;",
                ")#;#int",
                ";#int#new",
                "int#new#pos",
                "new#pos#=",
                "pos#=#parser",
                "=#parser#.",
                "parser#.#parse",
                ".#parse#into",
                "parse#into#(",
                "into#(#bucket",
                "(#bucket#,",
                "bucket#,#text",
                ",#text#,",
                "text#,#position",
                ",#position#)",
                "position#)#;",
                ")#;#instant",
                ";#instant#.",
                "instant#.#set",
                ".#set#millis",
                "set#millis#(",
                "millis#(#bucket",
                "(#bucket#.",
                "bucket#.#compute",
                ".#compute#millis",
                "compute#millis#(",
                "millis#(#false",
                "(#false#,",
                "false#,#text",
                ",#text#)",
                "text#)#)",
                ")#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#offset",
                "(#offset#parsed",
                "offset#parsed#&&",
                "parsed#&&#bucket",
                "&&#bucket#.",
                "bucket#.#offset",
                ".#offset#integer",
                "offset#integer#(",
                "integer#(#)",
                "(#)#!=",
                ")#!=#null",
                "!=#null#)",
                "null#)#{",
                ")#{#int",
                "{#int#parsed",
                "int#parsed#offset",
                "parsed#offset#=",
                "offset#=#bucket",
                "=#bucket#.",
                "bucket#.#offset",
                ".#offset#integer",
                "offset#integer#(",
                "integer#(#)",
                "(#)#;",
                ")#;#date",
                ";#date#time",
                "date#time#zone",
                "time#zone#parsed",
                "zone#parsed#zone",
                "parsed#zone#=",
                "zone#=#date",
                "=#date#time",
                "date#time#zone",
                "time#zone#.",
                "zone#.#offset",
                ".#offset#millis",
                "offset#millis#(",
                "millis#(#parsed",
                "(#parsed#offset",
                "parsed#offset#)",
                "offset#)#;",
                ")#;#chrono",
                ";#chrono#=",
                "chrono#=#chrono",
                "=#chrono#.",
                "chrono#.#with",
                ".#with#zone",
                "with#zone#(",
                "zone#(#parsed",
                "(#parsed#zone",
                "parsed#zone#)",
                "zone#)#;",
                ")#;#}",
                ";#}#else",
                "}#else#if",
                "else#if#(",
                "if#(#bucket",
                "(#bucket#.",
                "bucket#.#get",
                ".#get#zone",
                "get#zone#(",
                "zone#(#)",
                "(#)#!=",
                ")#!=#null",
                "!=#null#)",
                "null#)#{",
                ")#{#chrono",
                "{#chrono#=",
                "chrono#=#chrono",
                "=#chrono#.",
                "chrono#.#with",
                ".#with#zone",
                "with#zone#(",
                "zone#(#bucket",
                "(#bucket#.",
                "bucket#.#get",
                ".#get#zone",
                "get#zone#(",
                "zone#(#)",
                "(#)#)",
                ")#)#;",
                ")#;#}",
                ";#}#instant",
                "}#instant#.",
                "instant#.#set",
                ".#set#chronology",
                "set#chronology#(",
                "chronology#(#chrono",
                "(#chrono#)",
                "chrono#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#i",
                "(#i#zone",
                "i#zone#!=",
                "zone#!=#null",
                "!=#null#)",
                "null#)#{",
                ")#{#instant",
                "{#instant#.",
                "instant#.#set",
                ".#set#zone",
                "set#zone#(",
                "zone#(#i",
                "(#i#zone",
                "i#zone#)",
                "zone#)#;",
                ")#;#}",
                ";#}#return",
                "}#return#new",
                "return#new#pos",
                "new#pos#;",
                "pos#;#}",
                ";#}#}"
            ],
            "diffs": {
                "11": {
                    "action": "DELETE",
                    "buggy_end_line": 11,
                    "buggy_size": 1,
                    "buggy_start_line": 11,
                    "fixed_end_line": 12,
                    "fixed_size": 0,
                    "fixed_start_line": 12
                },
                "9": {
                    "action": "INSERT",
                    "buggy_end_line": 9,
                    "buggy_size": 0,
                    "buggy_start_line": 9,
                    "fixed_end_line": 9,
                    "fixed_size": 1,
                    "fixed_start_line": 9
                }
            },
            "end_line": 728,
            "exp_ins": 1,
            "exp_other": 1,
            "file_ext": ".java",
            "file_key": "Time_7_src_main_java_org_joda_time_format_DateTimeFormatter",
            "file_name": "DateTimeFormatter",
            "module_dir": "src/main/java/org/joda/time/format",
            "module_id": "Time_7",
            "module_name": "Time",
            "module_num": "7",
            "multi_chunk_key": "Time_7_src_main_java_org_joda_time_format_DateTimeFormatter_method1_parseInto_ReadWritableInstant_String_int",
            "ngram_score": 0.7881944444444444,
            "patch": "public int parseInto ( ReadWritableInstant instant , String text , int position ) { DateTimeParser parser = requireParser ( ) ; if ( instant == null ) { throw new IllegalArgumentException ( \"Instant must not be null\" ) ; } long instantMillis = instant . getMillis ( ) ; Chronology chrono = instant . getChronology ( ) ; int defaultYear = chrono . year ( ) . get ( instantMillis ) ; long instantLocal = instantMillis + chrono . getZone ( ) . getOffset ( instantMillis ) ; chrono = selectChronology ( chrono ) ; DateTimeParserBucket bucket = new DateTimeParserBucket ( instantLocal , chrono , iLocale , iPivotYear , defaultYear ) ; int newPos = parser . parseInto ( bucket , text , position ) ; instant . setMillis ( bucket . computeMillis ( false , text ) ) ; if ( iOffsetParsed && bucket . getOffsetInteger ( ) != null ) { int parsedOffset = bucket . getOffsetInteger ( ) ; DateTimeZone parsedZone = DateTimeZone . forOffsetMillis ( parsedOffset ) ; chrono = chrono . withZone ( parsedZone ) ; } else if ( bucket . getZone ( ) != null ) { chrono = chrono . withZone ( bucket . getZone ( ) ) ; } instant . setChronology ( chrono ) ; if ( iZone != null ) { instant . setZone ( iZone ) ; } return newPos ; }",
            "patch_index": 7,
            "per_ins": 1,
            "per_other": 1,
            "score_total": 0.894,
            "set_index": null,
            "start_line": 700,
            "tf_token_length": 288,
            "tf_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#public",
                "{#public#int",
                "public#int#parse",
                "int#parse#into",
                "parse#into#(",
                "into#(#read",
                "(#read#writable",
                "read#writable#instant",
                "writable#instant#instant",
                "instant#instant#,",
                "instant#,#String",
                ",#String#text",
                "String#text#,",
                "text#,#int",
                ",#int#position",
                "int#position#)",
                "position#)#{",
                ")#{#date",
                "{#date#time",
                "date#time#parser",
                "time#parser#parser",
                "parser#parser#=",
                "parser#=#require",
                "=#require#parser",
                "require#parser#(",
                "parser#(#)",
                "(#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#instant",
                "(#instant#==",
                "instant#==#null",
                "==#null#)",
                "null#)#{",
                ")#{#throw",
                "{#throw#new",
                "throw#new#illegal",
                "new#illegal#argument",
                "illegal#argument#exception",
                "argument#exception#(",
                "exception#(#\"",
                "(#\"#instant must not be null\"",
                "\"#instant must not be null\"#)",
                "instant must not be null\"#)#;",
                ")#;#}",
                ";#}#long",
                "}#long#instant",
                "long#instant#millis",
                "instant#millis#=",
                "millis#=#instant",
                "=#instant#.",
                "instant#.#get",
                ".#get#millis",
                "get#millis#(",
                "millis#(#)",
                "(#)#;",
                ")#;#Chronology",
                ";#Chronology#chrono",
                "Chronology#chrono#=",
                "chrono#=#instant",
                "=#instant#.",
                "instant#.#get",
                ".#get#chronology",
                "get#chronology#(",
                "chronology#(#)",
                "(#)#;",
                ")#;#int",
                ";#int#default",
                "int#default#year",
                "default#year#=",
                "year#=#chrono",
                "=#chrono#.",
                "chrono#.#year",
                ".#year#(",
                "year#(#)",
                "(#)#.",
                ")#.#get",
                ".#get#(",
                "get#(#instant",
                "(#instant#millis",
                "instant#millis#)",
                "millis#)#;",
                ")#;#long",
                ";#long#instant",
                "long#instant#local",
                "instant#local#=",
                "local#=#instant",
                "=#instant#millis",
                "instant#millis#+",
                "millis#+#chrono",
                "+#chrono#.",
                "chrono#.#get",
                ".#get#zone",
                "get#zone#(",
                "zone#(#)",
                "(#)#.",
                ")#.#get",
                ".#get#offset",
                "get#offset#(",
                "offset#(#instant",
                "(#instant#millis",
                "instant#millis#)",
                "millis#)#;",
                ")#;#chrono",
                ";#chrono#=",
                "chrono#=#select",
                "=#select#chronology",
                "select#chronology#(",
                "chronology#(#chrono",
                "(#chrono#)",
                "chrono#)#;",
                ")#;#date",
                ";#date#time",
                "date#time#parser",
                "time#parser#bucket",
                "parser#bucket#bucket",
                "bucket#bucket#=",
                "bucket#=#new",
                "=#new#date",
                "new#date#time",
                "date#time#parser",
                "time#parser#bucket",
                "parser#bucket#(",
                "bucket#(#instant",
                "(#instant#local",
                "instant#local#,",
                "local#,#chrono",
                ",#chrono#,",
                "chrono#,#i",
                ",#i#locale",
                "i#locale#,",
                "locale#,#pivot",
                ",#pivot#year",
                "pivot#year#,",
                "year#,#default",
                ",#default#year",
                "default#year#)",
                "year#)#;",
                ")#;#int",
                ";#int#new",
                "int#new#pos",
                "new#pos#=",
                "pos#=#parser",
                "=#parser#.",
                "parser#.#parse",
                ".#parse#into",
                "parse#into#(",
                "into#(#bucket",
                "(#bucket#,",
                "bucket#,#text",
                ",#text#,",
                "text#,#position",
                ",#position#)",
                "position#)#;",
                ")#;#instant",
                ";#instant#.",
                "instant#.#set",
                ".#set#millis",
                "set#millis#(",
                "millis#(#bucket",
                "(#bucket#.",
                "bucket#.#compute",
                ".#compute#millis",
                "compute#millis#(",
                "millis#(#false",
                "(#false#,",
                "false#,#text",
                ",#text#)",
                "text#)#)",
                ")#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#offset",
                "(#offset#parsed",
                "offset#parsed#&&",
                "parsed#&&#bucket",
                "&&#bucket#.",
                "bucket#.#offset",
                ".#offset#integer",
                "offset#integer#(",
                "integer#(#)",
                "(#)#!=",
                ")#!=#null",
                "!=#null#)",
                "null#)#{",
                ")#{#int",
                "{#int#parsed",
                "int#parsed#offset",
                "parsed#offset#=",
                "offset#=#bucket",
                "=#bucket#.",
                "bucket#.#offset",
                ".#offset#integer",
                "offset#integer#(",
                "integer#(#)",
                "(#)#;",
                ")#;#date",
                ";#date#time",
                "date#time#zone",
                "time#zone#parsed",
                "zone#parsed#zone",
                "parsed#zone#=",
                "zone#=#date",
                "=#date#time",
                "date#time#zone",
                "time#zone#.",
                "zone#.#offset",
                ".#offset#millis",
                "offset#millis#(",
                "millis#(#parsed",
                "(#parsed#offset",
                "parsed#offset#)",
                "offset#)#;",
                ")#;#chrono",
                ";#chrono#=",
                "chrono#=#chrono",
                "=#chrono#.",
                "chrono#.#with",
                ".#with#zone",
                "with#zone#(",
                "zone#(#parsed",
                "(#parsed#zone",
                "parsed#zone#)",
                "zone#)#;",
                ")#;#}",
                ";#}#else",
                "}#else#if",
                "else#if#(",
                "if#(#bucket",
                "(#bucket#.",
                "bucket#.#get",
                ".#get#zone",
                "get#zone#(",
                "zone#(#)",
                "(#)#!=",
                ")#!=#null",
                "!=#null#)",
                "null#)#{",
                ")#{#chrono",
                "{#chrono#=",
                "chrono#=#chrono",
                "=#chrono#.",
                "chrono#.#with",
                ".#with#zone",
                "with#zone#(",
                "zone#(#bucket",
                "(#bucket#.",
                "bucket#.#get",
                ".#get#zone",
                "get#zone#(",
                "zone#(#)",
                "(#)#)",
                ")#)#;",
                ")#;#}",
                ";#}#instant",
                "}#instant#.",
                "instant#.#set",
                ".#set#chronology",
                "set#chronology#(",
                "chronology#(#chrono",
                "(#chrono#)",
                "chrono#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#i",
                "(#i#zone",
                "i#zone#!=",
                "zone#!=#null",
                "!=#null#)",
                "null#)#{",
                ")#{#instant",
                "{#instant#.",
                "instant#.#set",
                ".#set#zone",
                "set#zone#(",
                "zone#(#i",
                "(#i#zone",
                "i#zone#)",
                "zone#)#;",
                ")#;#}",
                ";#}#return",
                "}#return#new",
                "return#new#pos",
                "new#pos#;",
                "pos#;#}",
                ";#}#}"
            ]
        }
    }
}