--- "/home/selab/\353\260\224\355\203\225\355\231\224\353\251\264/MCRepair2/APR_Resources/repair/combination_patches/Closure_101/16/CommandLineRunner_Origin.java"	2023-02-22 14:53:04.939963166 +0900
+++ "/home/selab/\353\260\224\355\203\225\355\231\224\353\251\264/MCRepair2/APR_Resources/repair/combination_patches/Closure_101/16/CommandLineRunner.java"	2023-02-22 14:53:04.943963198 +0900
@@ -415,29 +415,7 @@
         .setCharset(flags.charset);
   }
 
-  @Override
-  protected CompilerOptions createOptions() {
-    CompilerOptions options = new CompilerOptions();
-    options.setCodingConvention(new ClosureCodingConvention());
-    CompilationLevel level = flags.compilation_level;
-    level.setOptionsForCompilationLevel(options);
-    if (flags.debug) {
-      level.setDebugOptionsForCompilationLevel(options);
-    }
-
-    WarningLevel wLevel = flags.warning_level;
-    wLevel.setOptionsForWarningLevel(options);
-    for (FormattingOption formattingOption : flags.formatting) {
-      formattingOption.applyToOptions(options);
-    }
-    if (flags.process_closure_primitives) {
-      options.closurePass = true;
-    }
-
-    initOptionsFromFlags(options);
-    return options;
-  }
-
+@ Override protected CompilerOptions createOptions ( ) { CompilerOptions options = new CompilerOptions ( ) ; options . setCodingConvention ( new ClosureCodingConvention ( ) ) ; CompilationLevel level = flags . compilation_level ; level . setOptionsForCompilationLevel ( options ) ; if ( flags . debug ) { level . setDebugOptionsForCompilationLevel ( options ) ; } WarningLevel wLevel = flags . warning_level ; wLevel . setOptionsForWarningLevel ( options ) ; for ( FormattingOption formattingOption : flags . formatting ) { formattingOption . applyToOptions ( options ) ; } options . closurePass = flags . process_closure_primitives ; initOptionsFromFlags ( options ) ; return options ; }
   @Override
   protected Compiler createCompiler() {
     return new Compiler(getErrorPrintStream());
