{
    "StrBuilder": {
        "0": {
            "action_judgements": null,
            "action_score": 1.0,
            "buggy_code": "public int indexOf ( String str , int startIndex ) { startIndex = ( startIndex < 0 ? 0 : startIndex ) ; if ( str == null || startIndex >= size ) { return - 1 ; } int strLen = str . length ( ) ; if ( strLen == 1 ) { return indexOf ( str . charAt ( 0 ) , startIndex ) ; } if ( strLen == 0 ) { return startIndex ; } if ( strLen > size ) { return - 1 ; } char [ ] thisBuf = buffer ;  int len = thisBuf . length - strLen ;  outer : for ( int i = startIndex ; i < len ; i ++ ) { for ( int j = 0 ; j < strLen ; j ++ ) { if ( str . charAt ( j ) != thisBuf [ i + j ] ) { continue outer ; } } return i ; } return - 1 ; }",
            "buggy_dir": "",
            "criteria_token_length": 195,
            "criteria_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#public",
                "{#public#int",
                "public#int#index",
                "int#index#of",
                "index#of#(",
                "of#(#String",
                "(#String#str",
                "String#str#,",
                "str#,#int",
                ",#int#start",
                "int#start#index",
                "start#index#)",
                "index#)#{",
                ")#{#start",
                "{#start#index",
                "start#index#=",
                "index#=#(",
                "=#(#start",
                "(#start#index",
                "start#index#<",
                "index#<#0",
                "<#0#?",
                "0#?#0",
                "?#0#:",
                "0#:#start",
                ":#start#index",
                "start#index#)",
                "index#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#str",
                "(#str#==",
                "str#==#null",
                "==#null#||",
                "null#||#start",
                "||#start#index",
                "start#index#>=",
                "index#>=#size",
                ">=#size#)",
                "size#)#{",
                ")#{#return",
                "{#return#-",
                "return#-#1",
                "-#1#;",
                "1#;#}",
                ";#}#int",
                "}#int#str",
                "int#str#len",
                "str#len#=",
                "len#=#str",
                "=#str#.",
                "str#.#length",
                ".#length#(",
                "length#(#)",
                "(#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#str",
                "(#str#len",
                "str#len#==",
                "len#==#1",
                "==#1#)",
                "1#)#{",
                ")#{#return",
                "{#return#index",
                "return#index#of",
                "index#of#(",
                "of#(#str",
                "(#str#.",
                "str#.#char",
                ".#char#at",
                "char#at#(",
                "at#(#0",
                "(#0#)",
                "0#)#,",
                ")#,#start",
                ",#start#index",
                "start#index#)",
                "index#)#;",
                ")#;#}",
                ";#}#if",
                "}#if#(",
                "if#(#str",
                "(#str#len",
                "str#len#==",
                "len#==#0",
                "==#0#)",
                "0#)#{",
                ")#{#return",
                "{#return#start",
                "return#start#index",
                "start#index#;",
                "index#;#}",
                ";#}#if",
                "}#if#(",
                "if#(#str",
                "(#str#len",
                "str#len#>",
                "len#>#size",
                ">#size#)",
                "size#)#{",
                ")#{#return",
                "{#return#-",
                "return#-#1",
                "-#1#;",
                "1#;#}",
                ";#}#char",
                "}#char#[",
                "char#[#]",
                "[#]#this",
                "]#this#buf",
                "this#buf#=",
                "buf#=#buffer",
                "=#buffer#;",
                "buffer#;#int",
                ";#int#len",
                "int#len#=",
                "len#=#this",
                "=#this#buf",
                "this#buf#.",
                "buf#.#length",
                ".#length#-",
                "length#-#str",
                "-#str#len",
                "str#len#;",
                "len#;#outer",
                ";#outer#:",
                "outer#:#for",
                ":#for#(",
                "for#(#int",
                "(#int#i",
                "int#i#=",
                "i#=#start",
                "=#start#index",
                "start#index#;",
                "index#;#i",
                ";#i#<",
                "i#<#len",
                "<#len#;",
                "len#;#i",
                ";#i#++",
                "i#++#)",
                "++#)#{",
                ")#{#for",
                "{#for#(",
                "for#(#int",
                "(#int#j",
                "int#j#=",
                "j#=#0",
                "=#0#;",
                "0#;#j",
                ";#j#<",
                "j#<#str",
                "<#str#len",
                "str#len#;",
                "len#;#j",
                ";#j#++",
                "j#++#)",
                "++#)#{",
                ")#{#if",
                "{#if#(",
                "if#(#str",
                "(#str#.",
                "str#.#char",
                ".#char#at",
                "char#at#(",
                "at#(#j",
                "(#j#)",
                "j#)#!=",
                ")#!=#this",
                "!=#this#buf",
                "this#buf#[",
                "buf#[#i",
                "[#i#+",
                "i#+#j",
                "+#j#]",
                "j#]#)",
                "]#)#{",
                ")#{#continue",
                "{#continue#outer",
                "continue#outer#;",
                "outer#;#}",
                ";#}#}",
                "}#}#return",
                "}#return#i",
                "return#i#;",
                "i#;#}",
                ";#}#return",
                "}#return#-",
                "return#-#1",
                "-#1#;",
                "1#;#}",
                ";#}#}"
            ],
            "diffs": {
                "18": {
                    "action": "CHANGE",
                    "buggy_end_line": 18,
                    "buggy_size": 1,
                    "buggy_start_line": 18,
                    "fixed_end_line": 18,
                    "fixed_size": 1,
                    "fixed_start_line": 18
                }
            },
            "end_line": 1787,
            "exp_ins": 0,
            "exp_other": 1,
            "file_ext": ".java",
            "file_key": "Lang_61_src_java_org_apache_commons_lang_text_StrBuilder",
            "file_name": "StrBuilder",
            "module_dir": "src/java/org/apache/commons/lang/text",
            "module_id": "Lang_61",
            "module_name": "Lang",
            "module_num": "61",
            "multi_chunk_key": "Lang_61_src_java_org_apache_commons_lang_text_StrBuilder_method1_indexOf_String_int",
            "ngram_score": 0.7794871794871795,
            "patch": "public int indexOf ( String str , int startIndex ) { startIndex = ( startIndex < 0 ? 0 : startIndex ) ; if ( str == null || startIndex >= size ) { return - 1 ; } int strLen = str . length ( ) ; if ( strLen == 1 ) { return indexOf ( str . charAt ( 0 ) , startIndex ) ; } if ( strLen == 0 ) { return startIndex ; } if ( strLen > size ) { return - 1 ; } char [ ] thisBuf = buffer ; int len = size - 1 ; outer : for ( int i = startIndex ; i < len ; i ++ ) { for ( int j = 0 ; j < strLen ; j ++ ) { if ( str . charAt ( j ) != thisBuf [ i + j ] ) { continue outer ; } } return i ; } return - 1 ; }",
            "patch_index": 849,
            "per_ins": 0,
            "per_other": 1,
            "score_total": 0.89,
            "set_index": null,
            "start_line": 1760,
            "tf_token_length": 191,
            "tf_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#public",
                "{#public#int",
                "public#int#index",
                "int#index#of",
                "index#of#(",
                "of#(#String",
                "(#String#str",
                "String#str#,",
                "str#,#int",
                ",#int#start",
                "int#start#index",
                "start#index#)",
                "index#)#{",
                ")#{#start",
                "{#start#index",
                "start#index#=",
                "index#=#(",
                "=#(#start",
                "(#start#index",
                "start#index#<",
                "index#<#0",
                "<#0#?",
                "0#?#0",
                "?#0#:",
                "0#:#start",
                ":#start#index",
                "start#index#)",
                "index#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#str",
                "(#str#==",
                "str#==#null",
                "==#null#||",
                "null#||#start",
                "||#start#index",
                "start#index#>=",
                "index#>=#size",
                ">=#size#)",
                "size#)#{",
                ")#{#return",
                "{#return#-",
                "return#-#1",
                "-#1#;",
                "1#;#}",
                ";#}#int",
                "}#int#str",
                "int#str#len",
                "str#len#=",
                "len#=#str",
                "=#str#.",
                "str#.#length",
                ".#length#(",
                "length#(#)",
                "(#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#str",
                "(#str#len",
                "str#len#==",
                "len#==#1",
                "==#1#)",
                "1#)#{",
                ")#{#return",
                "{#return#index",
                "return#index#of",
                "index#of#(",
                "of#(#str",
                "(#str#.",
                "str#.#char",
                ".#char#at",
                "char#at#(",
                "at#(#0",
                "(#0#)",
                "0#)#,",
                ")#,#start",
                ",#start#index",
                "start#index#)",
                "index#)#;",
                ")#;#}",
                ";#}#if",
                "}#if#(",
                "if#(#str",
                "(#str#len",
                "str#len#==",
                "len#==#0",
                "==#0#)",
                "0#)#{",
                ")#{#return",
                "{#return#start",
                "return#start#index",
                "start#index#;",
                "index#;#}",
                ";#}#if",
                "}#if#(",
                "if#(#str",
                "(#str#len",
                "str#len#>",
                "len#>#size",
                ">#size#)",
                "size#)#{",
                ")#{#return",
                "{#return#-",
                "return#-#1",
                "-#1#;",
                "1#;#}",
                ";#}#char",
                "}#char#[",
                "char#[#]",
                "[#]#this",
                "]#this#buf",
                "this#buf#=",
                "buf#=#buffer",
                "=#buffer#;",
                "buffer#;#int",
                ";#int#len",
                "int#len#=",
                "len#=#size",
                "=#size#-",
                "size#-#1",
                "-#1#;",
                "1#;#outer",
                ";#outer#:",
                "outer#:#for",
                ":#for#(",
                "for#(#int",
                "(#int#i",
                "int#i#=",
                "i#=#start",
                "=#start#index",
                "start#index#;",
                "index#;#i",
                ";#i#<",
                "i#<#len",
                "<#len#;",
                "len#;#i",
                ";#i#++",
                "i#++#)",
                "++#)#{",
                ")#{#for",
                "{#for#(",
                "for#(#int",
                "(#int#j",
                "int#j#=",
                "j#=#0",
                "=#0#;",
                "0#;#j",
                ";#j#<",
                "j#<#str",
                "<#str#len",
                "str#len#;",
                "len#;#j",
                ";#j#++",
                "j#++#)",
                "++#)#{",
                ")#{#if",
                "{#if#(",
                "if#(#str",
                "(#str#.",
                "str#.#char",
                ".#char#at",
                "char#at#(",
                "at#(#j",
                "(#j#)",
                "j#)#!=",
                ")#!=#this",
                "!=#this#buf",
                "this#buf#[",
                "buf#[#i",
                "[#i#+",
                "i#+#j",
                "+#j#]",
                "j#]#)",
                "]#)#{",
                ")#{#continue",
                "{#continue#outer",
                "continue#outer#;",
                "outer#;#}",
                ";#}#}",
                "}#}#return",
                "}#return#i",
                "return#i#;",
                "i#;#}",
                ";#}#return",
                "}#return#-",
                "return#-#1",
                "-#1#;",
                "1#;#}",
                ";#}#}"
            ]
        }
    }
}