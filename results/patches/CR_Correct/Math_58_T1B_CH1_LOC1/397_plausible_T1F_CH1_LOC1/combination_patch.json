{
    "GaussianFitter": {
        "0": {
            "action_judgements": null,
            "action_score": 1.0,
            "buggy_code": "public double [ ] fit ( ) { final double [ ] guess = ( new ParameterGuesser ( getObservations ( ) ) ) . guess ( ) ;  return fit ( new Gaussian . Parametric ( ) , guess ) ;  }",
            "buggy_dir": "",
            "criteria_token_length": 47,
            "criteria_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#public",
                "{#public#double",
                "public#double#[",
                "double#[#]",
                "[#]#fit",
                "]#fit#(",
                "fit#(#)",
                "(#)#{",
                ")#{#final",
                "{#final#double",
                "final#double#[",
                "double#[#]",
                "[#]#guess",
                "]#guess#=",
                "guess#=#(",
                "=#(#new",
                "(#new#parameter",
                "new#parameter#guesser",
                "parameter#guesser#(",
                "guesser#(#get",
                "(#get#observations",
                "get#observations#(",
                "observations#(#)",
                "(#)#)",
                ")#)#)",
                ")#)#.",
                ")#.#guess",
                ".#guess#(",
                "guess#(#)",
                "(#)#;",
                ")#;#return",
                ";#return#fit",
                "return#fit#(",
                "fit#(#new",
                "(#new#Gaussian",
                "new#Gaussian#.",
                "Gaussian#.#Parametric",
                ".#Parametric#(",
                "Parametric#(#)",
                "(#)#,",
                ")#,#guess",
                ",#guess#)",
                "guess#)#;",
                ")#;#}",
                ";#}#}"
            ],
            "diffs": {
                "4": {
                    "action": "CHANGE",
                    "buggy_end_line": 4,
                    "buggy_size": 1,
                    "buggy_start_line": 4,
                    "fixed_end_line": 4,
                    "fixed_size": 1,
                    "fixed_start_line": 4
                }
            },
            "end_line": 122,
            "exp_ins": 0,
            "exp_other": 1,
            "file_ext": ".java",
            "file_key": "Math_58_src_main_java_org_apache_commons_math_optimization_fitting_GaussianFitter",
            "file_name": "GaussianFitter",
            "module_dir": "src/main/java/org/apache/commons/math/optimization/fitting",
            "module_id": "Math_58",
            "module_name": "Math",
            "module_num": "58",
            "multi_chunk_key": "Math_58_src_main_java_org_apache_commons_math_optimization_fitting_GaussianFitter_method1_fit",
            "ngram_score": 0.7446808510638298,
            "patch": "public double [ ] fit ( ) { final double [ ] guess = ( new ParameterGuesser ( getObservations ( ) ) ) . guess ( ) ; return this . fit ( guess ) ; }",
            "patch_index": 219,
            "per_ins": 0,
            "per_other": 1,
            "score_total": 0.872,
            "set_index": null,
            "start_line": 119,
            "tf_token_length": 42,
            "tf_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#public",
                "{#public#double",
                "public#double#[",
                "double#[#]",
                "[#]#fit",
                "]#fit#(",
                "fit#(#)",
                "(#)#{",
                ")#{#final",
                "{#final#double",
                "final#double#[",
                "double#[#]",
                "[#]#guess",
                "]#guess#=",
                "guess#=#(",
                "=#(#new",
                "(#new#parameter",
                "new#parameter#guesser",
                "parameter#guesser#(",
                "guesser#(#get",
                "(#get#observations",
                "get#observations#(",
                "observations#(#)",
                "(#)#)",
                ")#)#)",
                ")#)#.",
                ")#.#guess",
                ".#guess#(",
                "guess#(#)",
                "(#)#;",
                ")#;#return",
                ";#return#this",
                "return#this#.",
                "this#.#fit",
                ".#fit#(",
                "fit#(#guess",
                "(#guess#)",
                "guess#)#;",
                ")#;#}",
                ";#}#}"
            ]
        }
    }
}