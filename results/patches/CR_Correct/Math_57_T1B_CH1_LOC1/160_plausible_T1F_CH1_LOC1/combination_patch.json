{
    "KMeansPlusPlusClusterer": {
        "0": {
            "action_judgements": null,
            "action_score": 1.0,
            "buggy_code": "private static < T extends Clusterable < T > > List < Cluster < T > > chooseInitialCenters ( final Collection < T > points , final int k , final Random random ) { final List < T > pointSet = new ArrayList < T > ( points ) ; final List < Cluster < T > > resultSet = new ArrayList < Cluster < T > > ( ) ; final T firstPoint = pointSet . remove ( random . nextInt ( pointSet . size ( ) ) ) ; resultSet . add ( new Cluster < T > ( firstPoint ) ) ; final double [ ] dx2 = new double [ pointSet . size ( ) ] ; while ( resultSet . size ( ) < k ) {  int sum = 0 ;  for ( int i = 0 ; i < pointSet . size ( ) ; i ++ ) { final T p = pointSet . get ( i ) ; final Cluster < T > nearest = getNearestCluster ( resultSet , p ) ; final double d = p . distanceFrom ( nearest . getCenter ( ) ) ; sum += d * d ; dx2 [ i ] = sum ; } final double r = random . nextDouble ( ) * sum ; for ( int i = 0 ; i < dx2 . length ; i ++ ) { if ( dx2 [ i ] >= r ) { final T p = pointSet . remove ( i ) ; resultSet . add ( new Cluster < T > ( p ) ) ; break ; } } } return resultSet ; }",
            "buggy_dir": "",
            "criteria_token_length": 310,
            "criteria_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#private",
                "{#private#static",
                "private#static#<",
                "static#<#T",
                "<#T#extends",
                "T#extends#Clusterable",
                "extends#Clusterable#<",
                "Clusterable#<#T",
                "<#T#>",
                "T#>#>",
                ">#>#List",
                ">#List#<",
                "List#<#Cluster",
                "<#Cluster#<",
                "Cluster#<#T",
                "<#T#>",
                "T#>#>",
                ">#>#initial",
                ">#initial#centers",
                "initial#centers#(",
                "centers#(#final",
                "(#final#Collection",
                "final#Collection#<",
                "Collection#<#T",
                "<#T#>",
                "T#>#points",
                ">#points#,",
                "points#,#final",
                ",#final#int",
                "final#int#k",
                "int#k#,",
                "k#,#final",
                ",#final#Random",
                "final#Random#random",
                "Random#random#)",
                "random#)#{",
                ")#{#final",
                "{#final#List",
                "final#List#<",
                "List#<#T",
                "<#T#>",
                "T#>#point",
                ">#point#set",
                "point#set#=",
                "set#=#new",
                "=#new#array",
                "new#array#list",
                "array#list#<",
                "list#<#T",
                "<#T#>",
                "T#>#(",
                ">#(#points",
                "(#points#)",
                "points#)#;",
                ")#;#final",
                ";#final#List",
                "final#List#<",
                "List#<#Cluster",
                "<#Cluster#<",
                "Cluster#<#T",
                "<#T#>",
                "T#>#>",
                ">#>#result",
                ">#result#set",
                "result#set#=",
                "set#=#new",
                "=#new#array",
                "new#array#list",
                "array#list#<",
                "list#<#Cluster",
                "<#Cluster#<",
                "Cluster#<#T",
                "<#T#>",
                "T#>#>",
                ">#>#(",
                ">#(#)",
                "(#)#;",
                ")#;#final",
                ";#final#T",
                "final#T#first",
                "T#first#point",
                "first#point#=",
                "point#=#point",
                "=#point#set",
                "point#set#.",
                "set#.#remove",
                ".#remove#(",
                "remove#(#random",
                "(#random#.",
                "random#.#next",
                ".#next#int",
                "next#int#(",
                "int#(#point",
                "(#point#set",
                "point#set#.",
                "set#.#size",
                ".#size#(",
                "size#(#)",
                "(#)#)",
                ")#)#)",
                ")#)#;",
                ")#;#result",
                ";#result#set",
                "result#set#.",
                "set#.#add",
                ".#add#(",
                "add#(#new",
                "(#new#Cluster",
                "new#Cluster#<",
                "Cluster#<#T",
                "<#T#>",
                "T#>#(",
                ">#(#first",
                "(#first#point",
                "first#point#)",
                "point#)#)",
                ")#)#;",
                ")#;#final",
                ";#final#double",
                "final#double#[",
                "double#[#]",
                "[#]#dx2",
                "]#dx2#=",
                "dx2#=#new",
                "=#new#double",
                "new#double#[",
                "double#[#point",
                "[#point#set",
                "point#set#.",
                "set#.#size",
                ".#size#(",
                "size#(#)",
                "(#)#]",
                ")#]#;",
                "]#;#while",
                ";#while#(",
                "while#(#result",
                "(#result#set",
                "result#set#.",
                "set#.#size",
                ".#size#(",
                "size#(#)",
                "(#)#<",
                ")#<#k",
                "<#k#)",
                "k#)#{",
                ")#{#int",
                "{#int#sum",
                "int#sum#=",
                "sum#=#0",
                "=#0#;",
                "0#;#for",
                ";#for#(",
                "for#(#int",
                "(#int#i",
                "int#i#=",
                "i#=#0",
                "=#0#;",
                "0#;#i",
                ";#i#<",
                "i#<#point",
                "<#point#set",
                "point#set#.",
                "set#.#size",
                ".#size#(",
                "size#(#)",
                "(#)#;",
                ")#;#i",
                ";#i#++",
                "i#++#)",
                "++#)#{",
                ")#{#final",
                "{#final#T",
                "final#T#p",
                "T#p#=",
                "p#=#point",
                "=#point#set",
                "point#set#.",
                "set#.#get",
                ".#get#(",
                "get#(#i",
                "(#i#)",
                "i#)#;",
                ")#;#final",
                ";#final#Cluster",
                "final#Cluster#<",
                "Cluster#<#T",
                "<#T#>",
                "T#>#nearest",
                ">#nearest#=",
                "nearest#=#nearest",
                "=#nearest#cluster",
                "nearest#cluster#(",
                "cluster#(#result",
                "(#result#set",
                "result#set#,",
                "set#,#p",
                ",#p#)",
                "p#)#;",
                ")#;#final",
                ";#final#double",
                "final#double#d",
                "double#d#=",
                "d#=#p",
                "=#p#.",
                "p#.#distance",
                ".#distance#from",
                "distance#from#(",
                "from#(#nearest",
                "(#nearest#.",
                "nearest#.#get",
                ".#get#center",
                "get#center#(",
                "center#(#)",
                "(#)#)",
                ")#)#;",
                ")#;#sum",
                ";#sum#+=",
                "sum#+=#d",
                "+=#d#*",
                "d#*#d",
                "*#d#;",
                "d#;#dx2",
                ";#dx2#[",
                "dx2#[#i",
                "[#i#]",
                "i#]#=",
                "]#=#sum",
                "=#sum#;",
                "sum#;#}",
                ";#}#final",
                "}#final#double",
                "final#double#r",
                "double#r#=",
                "r#=#random",
                "=#random#.",
                "random#.#next",
                ".#next#double",
                "next#double#(",
                "double#(#)",
                "(#)#*",
                ")#*#sum",
                "*#sum#;",
                "sum#;#for",
                ";#for#(",
                "for#(#int",
                "(#int#i",
                "int#i#=",
                "i#=#0",
                "=#0#;",
                "0#;#i",
                ";#i#<",
                "i#<#dx2",
                "<#dx2#.",
                "dx2#.#length",
                ".#length#;",
                "length#;#i",
                ";#i#++",
                "i#++#)",
                "++#)#{",
                ")#{#if",
                "{#if#(",
                "if#(#dx2",
                "(#dx2#[",
                "dx2#[#i",
                "[#i#]",
                "i#]#>=",
                "]#>=#r",
                ">=#r#)",
                "r#)#{",
                ")#{#final",
                "{#final#T",
                "final#T#p",
                "T#p#=",
                "p#=#point",
                "=#point#set",
                "point#set#.",
                "set#.#remove",
                ".#remove#(",
                "remove#(#i",
                "(#i#)",
                "i#)#;",
                ")#;#result",
                ";#result#set",
                "result#set#.",
                "set#.#add",
                ".#add#(",
                "add#(#new",
                "(#new#Cluster",
                "new#Cluster#<",
                "Cluster#<#T",
                "<#T#>",
                "T#>#(",
                ">#(#p",
                "(#p#)",
                "p#)#)",
                ")#)#;",
                ")#;#break",
                ";#break#;",
                "break#;#}",
                ";#}#}",
                "}#}#}",
                "}#}#return",
                "}#return#result",
                "return#result#set",
                "result#set#;",
                "set#;#}",
                ";#}#}"
            ],
            "diffs": {
                "9": {
                    "action": "CHANGE",
                    "buggy_end_line": 9,
                    "buggy_size": 1,
                    "buggy_start_line": 9,
                    "fixed_end_line": 9,
                    "fixed_size": 1,
                    "fixed_start_line": 9
                }
            },
            "end_line": 198,
            "exp_ins": 0,
            "exp_other": 1,
            "file_ext": ".java",
            "file_key": "Math_57_src_main_java_org_apache_commons_math_stat_clustering_KMeansPlusPlusClusterer",
            "file_name": "KMeansPlusPlusClusterer",
            "module_dir": "src/main/java/org/apache/commons/math/stat/clustering",
            "module_id": "Math_57",
            "module_name": "Math",
            "module_num": "57",
            "multi_chunk_key": "Math_57_src_main_java_org_apache_commons_math_stat_clustering_KMeansPlusPlusClusterer_method1_chooseInitialCenters_Collection<T>_int_Random",
            "ngram_score": 0.7032258064516129,
            "patch": "private static < T extends Clusterable < T > > List < Cluster < T > > chooseInitialCenters ( final Collection < T > points , final int k , final Random random ) { final List < T > pointSet = new ArrayList < T > ( points ) ; final List < Cluster < T > > resultSet = new ArrayList < Cluster < T > > ( ) ; final T firstPoint = pointSet . remove ( random . nextInt ( pointSet . size ( ) ) ) ; resultSet . add ( new Cluster < T > ( firstPoint ) ) ; final double [ ] dx2 = new double [ pointSet . size ( ) ] ; while ( resultSet . size ( ) < k ) { double sum = 0 ; for ( int i = 0 ; i < pointSet . size ( ) ; i ++ ) { final T p = pointSet . get ( i ) ; final Cluster < T > nearest = getNearestCluster ( resultSet , p ) ; final double d = p . distanceFrom ( nearest . getCenter ( ) ) ; sum += d * d ; dx2 [ i ] = sum ; } final double r = random . nextDouble ( ) * sum ; for ( int i = 0 ; i < dx2 . length ; i ++ ) { if ( dx2 [ i ] >= r ) { final T p = pointSet . remove ( i ) ; resultSet . add ( new Cluster < T > ( p ) ) ; break ; } } } return resultSet ; }",
            "patch_index": 469,
            "per_ins": 0,
            "per_other": 1,
            "score_total": 0.852,
            "set_index": null,
            "start_line": 161,
            "tf_token_length": 310,
            "tf_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#private",
                "{#private#static",
                "private#static#<",
                "static#<#T",
                "<#T#extends",
                "T#extends#Clusterable",
                "extends#Clusterable#<",
                "Clusterable#<#T",
                "<#T#>",
                "T#>#>",
                ">#>#List",
                ">#List#<",
                "List#<#Cluster",
                "<#Cluster#<",
                "Cluster#<#T",
                "<#T#>",
                "T#>#>",
                ">#>#initial",
                ">#initial#centers",
                "initial#centers#(",
                "centers#(#final",
                "(#final#Collection",
                "final#Collection#<",
                "Collection#<#T",
                "<#T#>",
                "T#>#points",
                ">#points#,",
                "points#,#final",
                ",#final#int",
                "final#int#k",
                "int#k#,",
                "k#,#final",
                ",#final#Random",
                "final#Random#random",
                "Random#random#)",
                "random#)#{",
                ")#{#final",
                "{#final#List",
                "final#List#<",
                "List#<#T",
                "<#T#>",
                "T#>#point",
                ">#point#set",
                "point#set#=",
                "set#=#new",
                "=#new#array",
                "new#array#list",
                "array#list#<",
                "list#<#T",
                "<#T#>",
                "T#>#(",
                ">#(#points",
                "(#points#)",
                "points#)#;",
                ")#;#final",
                ";#final#List",
                "final#List#<",
                "List#<#Cluster",
                "<#Cluster#<",
                "Cluster#<#T",
                "<#T#>",
                "T#>#>",
                ">#>#result",
                ">#result#set",
                "result#set#=",
                "set#=#new",
                "=#new#array",
                "new#array#list",
                "array#list#<",
                "list#<#Cluster",
                "<#Cluster#<",
                "Cluster#<#T",
                "<#T#>",
                "T#>#>",
                ">#>#(",
                ">#(#)",
                "(#)#;",
                ")#;#final",
                ";#final#T",
                "final#T#first",
                "T#first#point",
                "first#point#=",
                "point#=#point",
                "=#point#set",
                "point#set#.",
                "set#.#remove",
                ".#remove#(",
                "remove#(#random",
                "(#random#.",
                "random#.#next",
                ".#next#int",
                "next#int#(",
                "int#(#point",
                "(#point#set",
                "point#set#.",
                "set#.#size",
                ".#size#(",
                "size#(#)",
                "(#)#)",
                ")#)#)",
                ")#)#;",
                ")#;#result",
                ";#result#set",
                "result#set#.",
                "set#.#add",
                ".#add#(",
                "add#(#new",
                "(#new#Cluster",
                "new#Cluster#<",
                "Cluster#<#T",
                "<#T#>",
                "T#>#(",
                ">#(#first",
                "(#first#point",
                "first#point#)",
                "point#)#)",
                ")#)#;",
                ")#;#final",
                ";#final#double",
                "final#double#[",
                "double#[#]",
                "[#]#dx2",
                "]#dx2#=",
                "dx2#=#new",
                "=#new#double",
                "new#double#[",
                "double#[#point",
                "[#point#set",
                "point#set#.",
                "set#.#size",
                ".#size#(",
                "size#(#)",
                "(#)#]",
                ")#]#;",
                "]#;#while",
                ";#while#(",
                "while#(#result",
                "(#result#set",
                "result#set#.",
                "set#.#size",
                ".#size#(",
                "size#(#)",
                "(#)#<",
                ")#<#k",
                "<#k#)",
                "k#)#{",
                ")#{#double",
                "{#double#sum",
                "double#sum#=",
                "sum#=#0",
                "=#0#;",
                "0#;#for",
                ";#for#(",
                "for#(#int",
                "(#int#i",
                "int#i#=",
                "i#=#0",
                "=#0#;",
                "0#;#i",
                ";#i#<",
                "i#<#point",
                "<#point#set",
                "point#set#.",
                "set#.#size",
                ".#size#(",
                "size#(#)",
                "(#)#;",
                ")#;#i",
                ";#i#++",
                "i#++#)",
                "++#)#{",
                ")#{#final",
                "{#final#T",
                "final#T#p",
                "T#p#=",
                "p#=#point",
                "=#point#set",
                "point#set#.",
                "set#.#get",
                ".#get#(",
                "get#(#i",
                "(#i#)",
                "i#)#;",
                ")#;#final",
                ";#final#Cluster",
                "final#Cluster#<",
                "Cluster#<#T",
                "<#T#>",
                "T#>#nearest",
                ">#nearest#=",
                "nearest#=#nearest",
                "=#nearest#cluster",
                "nearest#cluster#(",
                "cluster#(#result",
                "(#result#set",
                "result#set#,",
                "set#,#p",
                ",#p#)",
                "p#)#;",
                ")#;#final",
                ";#final#double",
                "final#double#d",
                "double#d#=",
                "d#=#p",
                "=#p#.",
                "p#.#distance",
                ".#distance#from",
                "distance#from#(",
                "from#(#nearest",
                "(#nearest#.",
                "nearest#.#get",
                ".#get#center",
                "get#center#(",
                "center#(#)",
                "(#)#)",
                ")#)#;",
                ")#;#sum",
                ";#sum#+=",
                "sum#+=#d",
                "+=#d#*",
                "d#*#d",
                "*#d#;",
                "d#;#dx2",
                ";#dx2#[",
                "dx2#[#i",
                "[#i#]",
                "i#]#=",
                "]#=#sum",
                "=#sum#;",
                "sum#;#}",
                ";#}#final",
                "}#final#double",
                "final#double#r",
                "double#r#=",
                "r#=#random",
                "=#random#.",
                "random#.#next",
                ".#next#double",
                "next#double#(",
                "double#(#)",
                "(#)#*",
                ")#*#sum",
                "*#sum#;",
                "sum#;#for",
                ";#for#(",
                "for#(#int",
                "(#int#i",
                "int#i#=",
                "i#=#0",
                "=#0#;",
                "0#;#i",
                ";#i#<",
                "i#<#dx2",
                "<#dx2#.",
                "dx2#.#length",
                ".#length#;",
                "length#;#i",
                ";#i#++",
                "i#++#)",
                "++#)#{",
                ")#{#if",
                "{#if#(",
                "if#(#dx2",
                "(#dx2#[",
                "dx2#[#i",
                "[#i#]",
                "i#]#>=",
                "]#>=#r",
                ">=#r#)",
                "r#)#{",
                ")#{#final",
                "{#final#T",
                "final#T#p",
                "T#p#=",
                "p#=#point",
                "=#point#set",
                "point#set#.",
                "set#.#remove",
                ".#remove#(",
                "remove#(#i",
                "(#i#)",
                "i#)#;",
                ")#;#result",
                ";#result#set",
                "result#set#.",
                "set#.#add",
                ".#add#(",
                "add#(#new",
                "(#new#Cluster",
                "new#Cluster#<",
                "Cluster#<#T",
                "<#T#>",
                "T#>#(",
                ">#(#p",
                "(#p#)",
                "p#)#)",
                ")#)#;",
                ")#;#break",
                ";#break#;",
                "break#;#}",
                ";#}#}",
                "}#}#}",
                "}#}#return",
                "}#return#result",
                "return#result#set",
                "result#set#;",
                "set#;#}",
                ";#}#}"
            ]
        }
    }
}