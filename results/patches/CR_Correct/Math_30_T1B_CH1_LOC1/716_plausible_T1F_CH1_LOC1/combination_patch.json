{
    "MannWhitneyUTest": {
        "0": {
            "action_judgements": null,
            "action_score": 1.0,
            "buggy_code": "private double calculateAsymptoticPValue ( final double Umin , final int n1 , final int n2 ) throws ConvergenceException , MaxCountExceededException {  final int n1n2prod = n1 * n2 ;  final double EU = n1n2prod / 2.0 ; final double VarU = n1n2prod * ( n1 + n2 + 1 ) / 12.0 ; final double z = ( Umin - EU ) / FastMath . sqrt ( VarU ) ; final NormalDistribution standardNormal = new NormalDistribution ( 0 , 1 ) ; return 2 * standardNormal . cumulativeProbability ( z ) ; }",
            "buggy_dir": "",
            "criteria_token_length": 112,
            "criteria_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#private",
                "{#private#double",
                "private#double#asymptotic",
                "double#asymptotic#p",
                "asymptotic#p#value",
                "p#value#(",
                "value#(#final",
                "(#final#double",
                "final#double#Umin",
                "double#Umin#,",
                "Umin#,#final",
                ",#final#int",
                "final#int#n1",
                "int#n1#,",
                "n1#,#final",
                ",#final#int",
                "final#int#n2",
                "int#n2#)",
                "n2#)#throws",
                ")#throws#convergence",
                "throws#convergence#exception",
                "convergence#exception#,",
                "exception#,#max",
                ",#max#count",
                "max#count#exceeded",
                "count#exceeded#exception",
                "exceeded#exception#{",
                "exception#{#final",
                "{#final#int",
                "final#int#n1n2prod",
                "int#n1n2prod#=",
                "n1n2prod#=#n1",
                "=#n1#*",
                "n1#*#n2",
                "*#n2#;",
                "n2#;#final",
                ";#final#double",
                "final#double#e",
                "double#e#u",
                "e#u#=",
                "u#=#n1n2prod",
                "=#n1n2prod#/",
                "n1n2prod#/#2.0",
                "/#2.0#;",
                "2.0#;#final",
                ";#final#double",
                "final#double#var",
                "double#var#u",
                "var#u#=",
                "u#=#n1n2prod",
                "=#n1n2prod#*",
                "n1n2prod#*#(",
                "*#(#n1",
                "(#n1#+",
                "n1#+#n2",
                "+#n2#+",
                "n2#+#1",
                "+#1#)",
                "1#)#/",
                ")#/#12.0",
                "/#12.0#;",
                "12.0#;#final",
                ";#final#double",
                "final#double#z",
                "double#z#=",
                "z#=#(",
                "=#(#Umin",
                "(#Umin#-",
                "Umin#-#e",
                "-#e#u",
                "e#u#)",
                "u#)#/",
                ")#/#fast",
                "/#fast#math",
                "fast#math#.",
                "math#.#sqrt",
                ".#sqrt#(",
                "sqrt#(#var",
                "(#var#u",
                "var#u#)",
                "u#)#;",
                ")#;#final",
                ";#final#normal",
                "final#normal#distribution",
                "normal#distribution#standard",
                "distribution#standard#normal",
                "standard#normal#=",
                "normal#=#new",
                "=#new#normal",
                "new#normal#distribution",
                "normal#distribution#(",
                "distribution#(#0",
                "(#0#,",
                "0#,#1",
                ",#1#)",
                "1#)#;",
                ")#;#return",
                ";#return#2",
                "return#2#*",
                "2#*#standard",
                "*#standard#normal",
                "standard#normal#.",
                "normal#.#cumulative",
                ".#cumulative#probability",
                "cumulative#probability#(",
                "probability#(#z",
                "(#z#)",
                "z#)#;",
                ")#;#}",
                ";#}#}"
            ],
            "diffs": {
                "3": {
                    "action": "CHANGE",
                    "buggy_end_line": 3,
                    "buggy_size": 1,
                    "buggy_start_line": 3,
                    "fixed_end_line": 3,
                    "fixed_size": 1,
                    "fixed_start_line": 3
                }
            },
            "end_line": 184,
            "exp_ins": 0,
            "exp_other": 1,
            "file_ext": ".java",
            "file_key": "Math_30_src_main_java_org_apache_commons_math3_stat_inference_MannWhitneyUTest",
            "file_name": "MannWhitneyUTest",
            "module_dir": "src/main/java/org/apache/commons/math3/stat/inference",
            "module_id": "Math_30",
            "module_name": "Math",
            "module_num": "30",
            "multi_chunk_key": "Math_30_src_main_java_org_apache_commons_math3_stat_inference_MannWhitneyUTest_method1_calculateAsymptoticPValue_double_int_int",
            "ngram_score": 0.8956521739130435,
            "patch": "private double calculateAsymptoticPValue ( final double Umin , final int n1 , final int n2 ) throws ConvergenceException , MaxCountExceededException { final double n1n2prod = ( double ) n1 * n2 ; final double EU = n1n2prod / 2.0 ; final double VarU = n1n2prod * ( n1 + n2 + 1 ) / 12.0 ; final double z = ( Umin - EU ) / FastMath . sqrt ( VarU ) ; final NormalDistribution standardNormal = new NormalDistribution ( 0 , 1 ) ; return 2 * standardNormal . cumulativeProbability ( z ) ; }",
            "patch_index": 636,
            "per_ins": 0,
            "per_other": 1,
            "score_total": 0.948,
            "set_index": null,
            "start_line": 168,
            "tf_token_length": 115,
            "tf_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#private",
                "{#private#double",
                "private#double#asymptotic",
                "double#asymptotic#p",
                "asymptotic#p#value",
                "p#value#(",
                "value#(#final",
                "(#final#double",
                "final#double#Umin",
                "double#Umin#,",
                "Umin#,#final",
                ",#final#int",
                "final#int#n1",
                "int#n1#,",
                "n1#,#final",
                ",#final#int",
                "final#int#n2",
                "int#n2#)",
                "n2#)#throws",
                ")#throws#convergence",
                "throws#convergence#exception",
                "convergence#exception#,",
                "exception#,#max",
                ",#max#count",
                "max#count#exceeded",
                "count#exceeded#exception",
                "exceeded#exception#{",
                "exception#{#final",
                "{#final#double",
                "final#double#n1n2prod",
                "double#n1n2prod#=",
                "n1n2prod#=#(",
                "=#(#double",
                "(#double#)",
                "double#)#n1",
                ")#n1#*",
                "n1#*#n2",
                "*#n2#;",
                "n2#;#final",
                ";#final#double",
                "final#double#e",
                "double#e#u",
                "e#u#=",
                "u#=#n1n2prod",
                "=#n1n2prod#/",
                "n1n2prod#/#2.0",
                "/#2.0#;",
                "2.0#;#final",
                ";#final#double",
                "final#double#var",
                "double#var#u",
                "var#u#=",
                "u#=#n1n2prod",
                "=#n1n2prod#*",
                "n1n2prod#*#(",
                "*#(#n1",
                "(#n1#+",
                "n1#+#n2",
                "+#n2#+",
                "n2#+#1",
                "+#1#)",
                "1#)#/",
                ")#/#12.0",
                "/#12.0#;",
                "12.0#;#final",
                ";#final#double",
                "final#double#z",
                "double#z#=",
                "z#=#(",
                "=#(#Umin",
                "(#Umin#-",
                "Umin#-#e",
                "-#e#u",
                "e#u#)",
                "u#)#/",
                ")#/#fast",
                "/#fast#math",
                "fast#math#.",
                "math#.#sqrt",
                ".#sqrt#(",
                "sqrt#(#var",
                "(#var#u",
                "var#u#)",
                "u#)#;",
                ")#;#final",
                ";#final#normal",
                "final#normal#distribution",
                "normal#distribution#standard",
                "distribution#standard#normal",
                "standard#normal#=",
                "normal#=#new",
                "=#new#normal",
                "new#normal#distribution",
                "normal#distribution#(",
                "distribution#(#0",
                "(#0#,",
                "0#,#1",
                ",#1#)",
                "1#)#;",
                ")#;#return",
                ";#return#2",
                "return#2#*",
                "2#*#standard",
                "*#standard#normal",
                "standard#normal#.",
                "normal#.#cumulative",
                ".#cumulative#probability",
                "cumulative#probability#(",
                "probability#(#z",
                "(#z#)",
                "z#)#;",
                ")#;#}",
                ";#}#}"
            ]
        }
    }
}