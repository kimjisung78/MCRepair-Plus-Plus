{
    "NodeUtil": {
        "0": {
            "action_judgements": null,
            "action_score": 1.0,
            "buggy_code": "static boolean evaluatesToLocalValue ( Node value , Predicate < Node > locals ) { switch ( value . getType ( ) ) { case Token . ASSIGN : return NodeUtil . isImmutableValue ( value . getLastChild ( ) ) || ( locals . apply ( value ) && evaluatesToLocalValue ( value . getLastChild ( ) , locals ) ) ; case Token . COMMA : return evaluatesToLocalValue ( value . getLastChild ( ) , locals ) ; case Token . AND : case Token . OR : return evaluatesToLocalValue ( value . getFirstChild ( ) , locals ) && evaluatesToLocalValue ( value . getLastChild ( ) , locals ) ; case Token . HOOK : return evaluatesToLocalValue ( value . getFirstChild ( ) . getNext ( ) , locals ) && evaluatesToLocalValue ( value . getLastChild ( ) , locals ) ; case Token . INC : case Token . DEC : if ( value . getBooleanProp ( Node . INCRDECR_PROP ) ) { return evaluatesToLocalValue ( value . getFirstChild ( ) , locals ) ; } else { return true ; } case Token . THIS : return locals . apply ( value ) ; case Token . NAME : return isImmutableValue ( value ) || locals . apply ( value ) ; case Token . GETELEM : case Token . GETPROP : return locals . apply ( value ) ; case Token . CALL : return callHasLocalResult ( value ) || isToStringMethodCall ( value ) || locals . apply ( value ) ; case Token . NEW :  return true ;  case Token . FUNCTION : case Token . REGEXP : case Token . ARRAYLIT : case Token . OBJECTLIT : return true ; case Token . IN : return true ; default : if ( isAssignmentOp ( value ) || isSimpleOperator ( value ) || isImmutableValue ( value ) ) { return true ; } throw new IllegalStateException ( \"Unexpected expression node\" + value + \"\\n parent:\" + value . getParent ( ) ) ; } }",
            "buggy_dir": "",
            "criteria_token_length": 463,
            "criteria_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#static",
                "{#static#boolean",
                "static#boolean#to",
                "boolean#to#local",
                "to#local#value",
                "local#value#(",
                "value#(#Node",
                "(#Node#value",
                "Node#value#,",
                "value#,#Predicate",
                ",#Predicate#<",
                "Predicate#<#Node",
                "<#Node#>",
                "Node#>#locals",
                ">#locals#)",
                "locals#)#{",
                ")#{#switch",
                "{#switch#(",
                "switch#(#value",
                "(#value#.",
                "value#.#get",
                ".#get#type",
                "get#type#(",
                "type#(#)",
                "(#)#)",
                ")#)#{",
                ")#{#case",
                "{#case#Token",
                "case#Token#.",
                "Token#.#a",
                ".#a#s",
                "a#s#s",
                "s#s#i",
                "s#i#g",
                "i#g#n",
                "g#n#:",
                "n#:#return",
                ":#return#node",
                "return#node#util",
                "node#util#.",
                "util#.#immutable",
                ".#immutable#value",
                "immutable#value#(",
                "value#(#value",
                "(#value#.",
                "value#.#last",
                ".#last#child",
                "last#child#(",
                "child#(#)",
                "(#)#)",
                ")#)#||",
                ")#||#(",
                "||#(#locals",
                "(#locals#.",
                "locals#.#apply",
                ".#apply#(",
                "apply#(#value",
                "(#value#)",
                "value#)#&&",
                ")#&&#to",
                "&&#to#local",
                "to#local#value",
                "local#value#(",
                "value#(#value",
                "(#value#.",
                "value#.#last",
                ".#last#child",
                "last#child#(",
                "child#(#)",
                "(#)#,",
                ")#,#locals",
                ",#locals#)",
                "locals#)#)",
                ")#)#;",
                ")#;#case",
                ";#case#Token",
                "case#Token#.",
                "Token#.#c",
                ".#c#o",
                "c#o#m",
                "o#m#m",
                "m#m#a",
                "m#a#:",
                "a#:#return",
                ":#return#to",
                "return#to#local",
                "to#local#value",
                "local#value#(",
                "value#(#value",
                "(#value#.",
                "value#.#last",
                ".#last#child",
                "last#child#(",
                "child#(#)",
                "(#)#,",
                ")#,#locals",
                ",#locals#)",
                "locals#)#;",
                ")#;#case",
                ";#case#Token",
                "case#Token#.",
                "Token#.#a",
                ".#a#n",
                "a#n#d",
                "n#d#:",
                "d#:#case",
                ":#case#Token",
                "case#Token#.",
                "Token#.#o",
                ".#o#r",
                "o#r#:",
                "r#:#return",
                ":#return#to",
                "return#to#local",
                "to#local#value",
                "local#value#(",
                "value#(#value",
                "(#value#.",
                "value#.#first",
                ".#first#child",
                "first#child#(",
                "child#(#)",
                "(#)#,",
                ")#,#locals",
                ",#locals#)",
                "locals#)#&&",
                ")#&&#to",
                "&&#to#local",
                "to#local#value",
                "local#value#(",
                "value#(#value",
                "(#value#.",
                "value#.#last",
                ".#last#child",
                "last#child#(",
                "child#(#)",
                "(#)#,",
                ")#,#locals",
                ",#locals#)",
                "locals#)#;",
                ")#;#case",
                ";#case#Token",
                "case#Token#.",
                "Token#.#h",
                ".#h#o",
                "h#o#o",
                "o#o#k",
                "o#k#:",
                "k#:#return",
                ":#return#to",
                "return#to#local",
                "to#local#value",
                "local#value#(",
                "value#(#value",
                "(#value#.",
                "value#.#first",
                ".#first#child",
                "first#child#(",
                "child#(#)",
                "(#)#.",
                ")#.#get",
                ".#get#next",
                "get#next#(",
                "next#(#)",
                "(#)#,",
                ")#,#locals",
                ",#locals#)",
                "locals#)#&&",
                ")#&&#to",
                "&&#to#local",
                "to#local#value",
                "local#value#(",
                "value#(#value",
                "(#value#.",
                "value#.#last",
                ".#last#child",
                "last#child#(",
                "child#(#)",
                "(#)#,",
                ")#,#locals",
                ",#locals#)",
                "locals#)#;",
                ")#;#case",
                ";#case#Token",
                "case#Token#.",
                "Token#.#i",
                ".#i#n",
                "i#n#c",
                "n#c#:",
                "c#:#case",
                ":#case#Token",
                "case#Token#.",
                "Token#.#d",
                ".#d#e",
                "d#e#c",
                "e#c#:",
                "c#:#if",
                ":#if#(",
                "if#(#value",
                "(#value#.",
                "value#.#boolean",
                ".#boolean#prop",
                "boolean#prop#(",
                "prop#(#Node",
                "(#Node#.",
                "Node#.#i",
                ".#i#n",
                "i#n#c",
                "n#c#r",
                "c#r#d",
                "r#d#e",
                "d#e#c",
                "e#c#r",
                "c#r#p",
                "r#p#r",
                "p#r#o",
                "r#o#p",
                "o#p#)",
                "p#)#)",
                ")#)#{",
                ")#{#return",
                "{#return#to",
                "return#to#local",
                "to#local#value",
                "local#value#(",
                "value#(#value",
                "(#value#.",
                "value#.#first",
                ".#first#child",
                "first#child#(",
                "child#(#)",
                "(#)#,",
                ")#,#locals",
                ",#locals#)",
                "locals#)#;",
                ")#;#}",
                ";#}#else",
                "}#else#{",
                "else#{#return",
                "{#return#true",
                "return#true#;",
                "true#;#}",
                ";#}#case",
                "}#case#Token",
                "case#Token#.",
                "Token#.#t",
                ".#t#h",
                "t#h#i",
                "h#i#s",
                "i#s#:",
                "s#:#return",
                ":#return#locals",
                "return#locals#.",
                "locals#.#apply",
                ".#apply#(",
                "apply#(#value",
                "(#value#)",
                "value#)#;",
                ")#;#case",
                ";#case#Token",
                "case#Token#.",
                "Token#.#n",
                ".#n#a",
                "n#a#m",
                "a#m#e",
                "m#e#:",
                "e#:#return",
                ":#return#immutable",
                "return#immutable#value",
                "immutable#value#(",
                "value#(#value",
                "(#value#)",
                "value#)#||",
                ")#||#locals",
                "||#locals#.",
                "locals#.#apply",
                ".#apply#(",
                "apply#(#value",
                "(#value#)",
                "value#)#;",
                ")#;#case",
                ";#case#Token",
                "case#Token#.",
                "Token#.#g",
                ".#g#e",
                "g#e#t",
                "e#t#e",
                "t#e#l",
                "e#l#e",
                "l#e#m",
                "e#m#:",
                "m#:#case",
                ":#case#Token",
                "case#Token#.",
                "Token#.#g",
                ".#g#e",
                "g#e#t",
                "e#t#p",
                "t#p#r",
                "p#r#o",
                "r#o#p",
                "o#p#:",
                "p#:#return",
                ":#return#locals",
                "return#locals#.",
                "locals#.#apply",
                ".#apply#(",
                "apply#(#value",
                "(#value#)",
                "value#)#;",
                ")#;#case",
                ";#case#Token",
                "case#Token#.",
                "Token#.#c",
                ".#c#a",
                "c#a#l",
                "a#l#l",
                "l#l#:",
                "l#:#return",
                ":#return#has",
                "return#has#local",
                "has#local#result",
                "local#result#(",
                "result#(#value",
                "(#value#)",
                "value#)#||",
                ")#||#to",
                "||#to#string",
                "to#string#method",
                "string#method#call",
                "method#call#(",
                "call#(#value",
                "(#value#)",
                "value#)#||",
                ")#||#locals",
                "||#locals#.",
                "locals#.#apply",
                ".#apply#(",
                "apply#(#value",
                "(#value#)",
                "value#)#;",
                ")#;#case",
                ";#case#Token",
                "case#Token#.",
                "Token#.#n",
                ".#n#e",
                "n#e#w",
                "e#w#:",
                "w#:#return",
                ":#return#true",
                "return#true#;",
                "true#;#case",
                ";#case#Token",
                "case#Token#.",
                "Token#.#f",
                ".#f#u",
                "f#u#n",
                "u#n#c",
                "n#c#t",
                "c#t#i",
                "t#i#o",
                "i#o#n",
                "o#n#:",
                "n#:#case",
                ":#case#Token",
                "case#Token#.",
                "Token#.#r",
                ".#r#e",
                "r#e#g",
                "e#g#e",
                "g#e#x",
                "e#x#p",
                "x#p#:",
                "p#:#case",
                ":#case#Token",
                "case#Token#.",
                "Token#.#a",
                ".#a#r",
                "a#r#r",
                "r#r#a",
                "r#a#y",
                "a#y#l",
                "y#l#i",
                "l#i#t",
                "i#t#:",
                "t#:#case",
                ":#case#Token",
                "case#Token#.",
                "Token#.#o",
                ".#o#b",
                "o#b#j",
                "b#j#e",
                "j#e#c",
                "e#c#t",
                "c#t#l",
                "t#l#i",
                "l#i#t",
                "i#t#:",
                "t#:#return",
                ":#return#true",
                "return#true#;",
                "true#;#case",
                ";#case#Token",
                "case#Token#.",
                "Token#.#i",
                ".#i#n",
                "i#n#:",
                "n#:#return",
                ":#return#true",
                "return#true#;",
                "true#;#default",
                ";#default#:",
                "default#:#if",
                ":#if#(",
                "if#(#assignment",
                "(#assignment#op",
                "assignment#op#(",
                "op#(#value",
                "(#value#)",
                "value#)#||",
                ")#||#simple",
                "||#simple#operator",
                "simple#operator#(",
                "operator#(#value",
                "(#value#)",
                "value#)#||",
                ")#||#immutable",
                "||#immutable#value",
                "immutable#value#(",
                "value#(#value",
                "(#value#)",
                "value#)#)",
                ")#)#{",
                ")#{#return",
                "{#return#true",
                "return#true#;",
                "true#;#}",
                ";#}#throw",
                "}#throw#new",
                "throw#new#illegal",
                "new#illegal#state",
                "illegal#state#exception",
                "state#exception#(",
                "exception#(#\"",
                "(#\"#unexpected expression node\"",
                "\"#unexpected expression node\"#+",
                "unexpected expression node\"#+#value",
                "+#value#+",
                "value#+#\"\\n parent:\"",
                "+#\"\\n parent:\"#+",
                "\"\\n parent:\"#+#value",
                "+#value#.",
                "value#.#get",
                ".#get#parent",
                "get#parent#(",
                "parent#(#)",
                "(#)#)",
                ")#)#;",
                ")#;#}",
                ";#}#}",
                "}#}#}"
            ],
            "diffs": {
                "30": {
                    "action": "CHANGE",
                    "buggy_end_line": 30,
                    "buggy_size": 1,
                    "buggy_start_line": 30,
                    "fixed_end_line": 30,
                    "fixed_size": 1,
                    "fixed_start_line": 30
                }
            },
            "end_line": 2489,
            "exp_ins": 0,
            "exp_other": 1,
            "file_ext": ".java",
            "file_key": "Closure_86_src_com_google_javascript_jscomp_NodeUtil",
            "file_name": "NodeUtil",
            "module_dir": "src/com/google/javascript/jscomp",
            "module_id": "Closure_86",
            "module_name": "Closure",
            "module_num": "86",
            "multi_chunk_key": "Closure_86_src_com_google_javascript_jscomp_NodeUtil_method1_evaluatesToLocalValue_Node_Predicate<Node>",
            "ngram_score": 0.5745140388768899,
            "patch": "static boolean evaluatesToLocalValue ( Node value , Predicate < Node > locals ) { switch ( value . getType ( ) ) { case Token . ASSIGN : return NodeUtil . isImmutableValue ( value . getLastChild ( ) ) || ( locals . apply ( value ) && evaluatesToLocalValue ( value . getLastChild ( ) , locals ) ) ; case Token . COMMA : return evaluatesToLocalValue ( value . getLastChild ( ) , locals ) ; case Token . AND : case Token . OR : return evaluatesToLocalValue ( value . getFirstChild ( ) , locals ) && evaluatesToLocalValue ( value . getLastChild ( ) , locals ) ; case Token . HOOK : return evaluatesToLocalValue ( value . getFirstChild ( ) . getNext ( ) , locals ) && evaluatesToLocalValue ( value . getLastChild ( ) , locals ) ; case Token . INC : case Token . DEC : if ( value . getBooleanProp ( Node . INCRDECR_PROP ) ) { return evaluatesToLocalValue ( value . getFirstChild ( ) , locals ) ; } else { return true ; } case Token . THIS : return locals . apply ( value ) ; case Token . NAME : return isImmutableValue ( value ) || locals . apply ( value ) ; case Token . GETELEM : case Token . GETPROP : return locals . apply ( value ) ; case Token . CALL : return callHasLocalResult ( value ) || isToStringMethodCall ( value ) || locals . apply ( value ) ; case Token . NEW : return false ; case Token . FUNCTION : case Token . REGEXP : case Token . ARRAYLIT : case Token . OBJECTLIT : return true ; case Token . IN : return true ; default : if ( isAssignmentOp ( value ) || isSimpleOperator ( value ) || isImmutableValue ( value ) ) { return true ; } throw new IllegalStateException ( \"Unexpected expression node\" + value + \"\\n parent:\" + value . getParent ( ) ) ; } }",
            "patch_index": 46,
            "per_ins": 0,
            "per_other": 1,
            "score_total": 0.787,
            "set_index": null,
            "start_line": 2424,
            "tf_token_length": 463,
            "tf_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#static",
                "{#static#boolean",
                "static#boolean#to",
                "boolean#to#local",
                "to#local#value",
                "local#value#(",
                "value#(#Node",
                "(#Node#value",
                "Node#value#,",
                "value#,#Predicate",
                ",#Predicate#<",
                "Predicate#<#Node",
                "<#Node#>",
                "Node#>#locals",
                ">#locals#)",
                "locals#)#{",
                ")#{#switch",
                "{#switch#(",
                "switch#(#value",
                "(#value#.",
                "value#.#get",
                ".#get#type",
                "get#type#(",
                "type#(#)",
                "(#)#)",
                ")#)#{",
                ")#{#case",
                "{#case#Token",
                "case#Token#.",
                "Token#.#a",
                ".#a#s",
                "a#s#s",
                "s#s#i",
                "s#i#g",
                "i#g#n",
                "g#n#:",
                "n#:#return",
                ":#return#node",
                "return#node#util",
                "node#util#.",
                "util#.#immutable",
                ".#immutable#value",
                "immutable#value#(",
                "value#(#value",
                "(#value#.",
                "value#.#last",
                ".#last#child",
                "last#child#(",
                "child#(#)",
                "(#)#)",
                ")#)#||",
                ")#||#(",
                "||#(#locals",
                "(#locals#.",
                "locals#.#apply",
                ".#apply#(",
                "apply#(#value",
                "(#value#)",
                "value#)#&&",
                ")#&&#to",
                "&&#to#local",
                "to#local#value",
                "local#value#(",
                "value#(#value",
                "(#value#.",
                "value#.#last",
                ".#last#child",
                "last#child#(",
                "child#(#)",
                "(#)#,",
                ")#,#locals",
                ",#locals#)",
                "locals#)#)",
                ")#)#;",
                ")#;#case",
                ";#case#Token",
                "case#Token#.",
                "Token#.#c",
                ".#c#o",
                "c#o#m",
                "o#m#m",
                "m#m#a",
                "m#a#:",
                "a#:#return",
                ":#return#to",
                "return#to#local",
                "to#local#value",
                "local#value#(",
                "value#(#value",
                "(#value#.",
                "value#.#last",
                ".#last#child",
                "last#child#(",
                "child#(#)",
                "(#)#,",
                ")#,#locals",
                ",#locals#)",
                "locals#)#;",
                ")#;#case",
                ";#case#Token",
                "case#Token#.",
                "Token#.#a",
                ".#a#n",
                "a#n#d",
                "n#d#:",
                "d#:#case",
                ":#case#Token",
                "case#Token#.",
                "Token#.#o",
                ".#o#r",
                "o#r#:",
                "r#:#return",
                ":#return#to",
                "return#to#local",
                "to#local#value",
                "local#value#(",
                "value#(#value",
                "(#value#.",
                "value#.#first",
                ".#first#child",
                "first#child#(",
                "child#(#)",
                "(#)#,",
                ")#,#locals",
                ",#locals#)",
                "locals#)#&&",
                ")#&&#to",
                "&&#to#local",
                "to#local#value",
                "local#value#(",
                "value#(#value",
                "(#value#.",
                "value#.#last",
                ".#last#child",
                "last#child#(",
                "child#(#)",
                "(#)#,",
                ")#,#locals",
                ",#locals#)",
                "locals#)#;",
                ")#;#case",
                ";#case#Token",
                "case#Token#.",
                "Token#.#h",
                ".#h#o",
                "h#o#o",
                "o#o#k",
                "o#k#:",
                "k#:#return",
                ":#return#to",
                "return#to#local",
                "to#local#value",
                "local#value#(",
                "value#(#value",
                "(#value#.",
                "value#.#first",
                ".#first#child",
                "first#child#(",
                "child#(#)",
                "(#)#.",
                ")#.#get",
                ".#get#next",
                "get#next#(",
                "next#(#)",
                "(#)#,",
                ")#,#locals",
                ",#locals#)",
                "locals#)#&&",
                ")#&&#to",
                "&&#to#local",
                "to#local#value",
                "local#value#(",
                "value#(#value",
                "(#value#.",
                "value#.#last",
                ".#last#child",
                "last#child#(",
                "child#(#)",
                "(#)#,",
                ")#,#locals",
                ",#locals#)",
                "locals#)#;",
                ")#;#case",
                ";#case#Token",
                "case#Token#.",
                "Token#.#i",
                ".#i#n",
                "i#n#c",
                "n#c#:",
                "c#:#case",
                ":#case#Token",
                "case#Token#.",
                "Token#.#d",
                ".#d#e",
                "d#e#c",
                "e#c#:",
                "c#:#if",
                ":#if#(",
                "if#(#value",
                "(#value#.",
                "value#.#boolean",
                ".#boolean#prop",
                "boolean#prop#(",
                "prop#(#Node",
                "(#Node#.",
                "Node#.#i",
                ".#i#n",
                "i#n#c",
                "n#c#r",
                "c#r#d",
                "r#d#e",
                "d#e#c",
                "e#c#r",
                "c#r#p",
                "r#p#r",
                "p#r#o",
                "r#o#p",
                "o#p#)",
                "p#)#)",
                ")#)#{",
                ")#{#return",
                "{#return#to",
                "return#to#local",
                "to#local#value",
                "local#value#(",
                "value#(#value",
                "(#value#.",
                "value#.#first",
                ".#first#child",
                "first#child#(",
                "child#(#)",
                "(#)#,",
                ")#,#locals",
                ",#locals#)",
                "locals#)#;",
                ")#;#}",
                ";#}#else",
                "}#else#{",
                "else#{#return",
                "{#return#true",
                "return#true#;",
                "true#;#}",
                ";#}#case",
                "}#case#Token",
                "case#Token#.",
                "Token#.#t",
                ".#t#h",
                "t#h#i",
                "h#i#s",
                "i#s#:",
                "s#:#return",
                ":#return#locals",
                "return#locals#.",
                "locals#.#apply",
                ".#apply#(",
                "apply#(#value",
                "(#value#)",
                "value#)#;",
                ")#;#case",
                ";#case#Token",
                "case#Token#.",
                "Token#.#n",
                ".#n#a",
                "n#a#m",
                "a#m#e",
                "m#e#:",
                "e#:#return",
                ":#return#immutable",
                "return#immutable#value",
                "immutable#value#(",
                "value#(#value",
                "(#value#)",
                "value#)#||",
                ")#||#locals",
                "||#locals#.",
                "locals#.#apply",
                ".#apply#(",
                "apply#(#value",
                "(#value#)",
                "value#)#;",
                ")#;#case",
                ";#case#Token",
                "case#Token#.",
                "Token#.#g",
                ".#g#e",
                "g#e#t",
                "e#t#e",
                "t#e#l",
                "e#l#e",
                "l#e#m",
                "e#m#:",
                "m#:#case",
                ":#case#Token",
                "case#Token#.",
                "Token#.#g",
                ".#g#e",
                "g#e#t",
                "e#t#p",
                "t#p#r",
                "p#r#o",
                "r#o#p",
                "o#p#:",
                "p#:#return",
                ":#return#locals",
                "return#locals#.",
                "locals#.#apply",
                ".#apply#(",
                "apply#(#value",
                "(#value#)",
                "value#)#;",
                ")#;#case",
                ";#case#Token",
                "case#Token#.",
                "Token#.#c",
                ".#c#a",
                "c#a#l",
                "a#l#l",
                "l#l#:",
                "l#:#return",
                ":#return#has",
                "return#has#local",
                "has#local#result",
                "local#result#(",
                "result#(#value",
                "(#value#)",
                "value#)#||",
                ")#||#to",
                "||#to#string",
                "to#string#method",
                "string#method#call",
                "method#call#(",
                "call#(#value",
                "(#value#)",
                "value#)#||",
                ")#||#locals",
                "||#locals#.",
                "locals#.#apply",
                ".#apply#(",
                "apply#(#value",
                "(#value#)",
                "value#)#;",
                ")#;#case",
                ";#case#Token",
                "case#Token#.",
                "Token#.#n",
                ".#n#e",
                "n#e#w",
                "e#w#:",
                "w#:#return",
                ":#return#false",
                "return#false#;",
                "false#;#case",
                ";#case#Token",
                "case#Token#.",
                "Token#.#f",
                ".#f#u",
                "f#u#n",
                "u#n#c",
                "n#c#t",
                "c#t#i",
                "t#i#o",
                "i#o#n",
                "o#n#:",
                "n#:#case",
                ":#case#Token",
                "case#Token#.",
                "Token#.#r",
                ".#r#e",
                "r#e#g",
                "e#g#e",
                "g#e#x",
                "e#x#p",
                "x#p#:",
                "p#:#case",
                ":#case#Token",
                "case#Token#.",
                "Token#.#a",
                ".#a#r",
                "a#r#r",
                "r#r#a",
                "r#a#y",
                "a#y#l",
                "y#l#i",
                "l#i#t",
                "i#t#:",
                "t#:#case",
                ":#case#Token",
                "case#Token#.",
                "Token#.#o",
                ".#o#b",
                "o#b#j",
                "b#j#e",
                "j#e#c",
                "e#c#t",
                "c#t#l",
                "t#l#i",
                "l#i#t",
                "i#t#:",
                "t#:#return",
                ":#return#true",
                "return#true#;",
                "true#;#case",
                ";#case#Token",
                "case#Token#.",
                "Token#.#i",
                ".#i#n",
                "i#n#:",
                "n#:#return",
                ":#return#true",
                "return#true#;",
                "true#;#default",
                ";#default#:",
                "default#:#if",
                ":#if#(",
                "if#(#assignment",
                "(#assignment#op",
                "assignment#op#(",
                "op#(#value",
                "(#value#)",
                "value#)#||",
                ")#||#simple",
                "||#simple#operator",
                "simple#operator#(",
                "operator#(#value",
                "(#value#)",
                "value#)#||",
                ")#||#immutable",
                "||#immutable#value",
                "immutable#value#(",
                "value#(#value",
                "(#value#)",
                "value#)#)",
                ")#)#{",
                ")#{#return",
                "{#return#true",
                "return#true#;",
                "true#;#}",
                ";#}#throw",
                "}#throw#new",
                "throw#new#illegal",
                "new#illegal#state",
                "illegal#state#exception",
                "state#exception#(",
                "exception#(#\"",
                "(#\"#unexpected expression node\"",
                "\"#unexpected expression node\"#+",
                "unexpected expression node\"#+#value",
                "+#value#+",
                "value#+#\"\\n parent:\"",
                "+#\"\\n parent:\"#+",
                "\"\\n parent:\"#+#value",
                "+#value#.",
                "value#.#get",
                ".#get#parent",
                "get#parent#(",
                "parent#(#)",
                "(#)#)",
                ")#)#;",
                ")#;#}",
                ";#}#}",
                "}#}#}"
            ]
        }
    }
}