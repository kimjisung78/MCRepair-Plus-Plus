--- "/home/selab/\353\260\224\355\203\225\355\231\224\353\251\264/MCRepair2/APR_Resources/repair/combination_patches/Lang_59/451/StrBuilder_Origin.java"	2023-02-22 16:40:20.923169081 +0900
+++ "/home/selab/\353\260\224\355\203\225\355\231\224\353\251\264/MCRepair2/APR_Resources/repair/combination_patches/Lang_59/451/StrBuilder.java"	2023-02-22 16:40:20.927169111 +0900
@@ -875,25 +875,7 @@
      * @param padChar  the pad character to use
      * @return this, to enable chaining
      */
-    public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {
-        if (width > 0) {
-            ensureCapacity(size + width);
-            String str = (obj == null ? getNullText() : obj.toString());
-            int strLen = str.length();
-            if (strLen >= width) {
-                str.getChars(0, strLen, buffer, size);
-            } else {
-                int padLen = width - strLen;
-                str.getChars(0, strLen, buffer, size);
-                for (int i = 0; i < padLen; i++) {
-                    buffer[size + strLen + i] = padChar;
-                }
-            }
-            size += width;
-        }
-        return this;
-    }
-
+public StrBuilder appendFixedWidthPadRight ( Object obj , int width , char padChar ) { if ( width > 0 ) { ensureCapacity ( size + width ) ; String str = ( obj == null ? getNullText ( ) : obj . toString ( ) ) ; int strLen = str . length ( ) ; if ( strLen >= width ) { str . getChars ( 0 , width , buffer , size ) ; } else { int padLen = width - strLen ; str . getChars ( 0 , strLen , buffer , size ) ; for ( int i = 0 ; i < padLen ; i ++ ) { buffer [ size + strLen + i ] = padChar ; } } size += width ; } return this ; }
     /**
      * Appends an object to the builder padding on the right to a fixed length.
      * The <code>String.valueOf</code> of the <code>int</code> value is used.
