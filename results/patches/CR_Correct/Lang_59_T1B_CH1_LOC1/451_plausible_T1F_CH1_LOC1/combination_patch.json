{
    "StrBuilder": {
        "0": {
            "action_judgements": null,
            "action_score": 1.0,
            "buggy_code": "public StrBuilder appendFixedWidthPadRight ( Object obj , int width , char padChar ) { if ( width > 0 ) { ensureCapacity ( size + width ) ; String str = ( obj == null ? getNullText ( ) : obj . toString ( ) ) ; int strLen = str . length ( ) ; if ( strLen >= width ) {  str . getChars ( 0 , strLen , buffer , size ) ;  } else { int padLen = width - strLen ; str . getChars ( 0 , strLen , buffer , size ) ; for ( int i = 0 ; i < padLen ; i ++ ) { buffer [ size + strLen + i ] = padChar ; } } size += width ; } return this ; }",
            "buggy_dir": "",
            "criteria_token_length": 158,
            "criteria_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#public",
                "{#public#str",
                "public#str#builder",
                "str#builder#fixed",
                "builder#fixed#width",
                "fixed#width#pad",
                "width#pad#right",
                "pad#right#(",
                "right#(#Object",
                "(#Object#obj",
                "Object#obj#,",
                "obj#,#int",
                ",#int#width",
                "int#width#,",
                "width#,#char",
                ",#char#pad",
                "char#pad#char",
                "pad#char#)",
                "char#)#{",
                ")#{#if",
                "{#if#(",
                "if#(#width",
                "(#width#>",
                "width#>#0",
                ">#0#)",
                "0#)#{",
                ")#{#ensure",
                "{#ensure#capacity",
                "ensure#capacity#(",
                "capacity#(#size",
                "(#size#+",
                "size#+#width",
                "+#width#)",
                "width#)#;",
                ")#;#String",
                ";#String#str",
                "String#str#=",
                "str#=#(",
                "=#(#obj",
                "(#obj#==",
                "obj#==#null",
                "==#null#?",
                "null#?#null",
                "?#null#text",
                "null#text#(",
                "text#(#)",
                "(#)#:",
                ")#:#obj",
                ":#obj#.",
                "obj#.#to",
                ".#to#string",
                "to#string#(",
                "string#(#)",
                "(#)#)",
                ")#)#;",
                ")#;#int",
                ";#int#str",
                "int#str#len",
                "str#len#=",
                "len#=#str",
                "=#str#.",
                "str#.#length",
                ".#length#(",
                "length#(#)",
                "(#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#str",
                "(#str#len",
                "str#len#>=",
                "len#>=#width",
                ">=#width#)",
                "width#)#{",
                ")#{#str",
                "{#str#.",
                "str#.#get",
                ".#get#chars",
                "get#chars#(",
                "chars#(#0",
                "(#0#,",
                "0#,#str",
                ",#str#len",
                "str#len#,",
                "len#,#buffer",
                ",#buffer#,",
                "buffer#,#size",
                ",#size#)",
                "size#)#;",
                ")#;#}",
                ";#}#else",
                "}#else#{",
                "else#{#int",
                "{#int#pad",
                "int#pad#len",
                "pad#len#=",
                "len#=#width",
                "=#width#-",
                "width#-#str",
                "-#str#len",
                "str#len#;",
                "len#;#str",
                ";#str#.",
                "str#.#get",
                ".#get#chars",
                "get#chars#(",
                "chars#(#0",
                "(#0#,",
                "0#,#str",
                ",#str#len",
                "str#len#,",
                "len#,#buffer",
                ",#buffer#,",
                "buffer#,#size",
                ",#size#)",
                "size#)#;",
                ")#;#for",
                ";#for#(",
                "for#(#int",
                "(#int#i",
                "int#i#=",
                "i#=#0",
                "=#0#;",
                "0#;#i",
                ";#i#<",
                "i#<#pad",
                "<#pad#len",
                "pad#len#;",
                "len#;#i",
                ";#i#++",
                "i#++#)",
                "++#)#{",
                ")#{#buffer",
                "{#buffer#[",
                "buffer#[#size",
                "[#size#+",
                "size#+#str",
                "+#str#len",
                "str#len#+",
                "len#+#i",
                "+#i#]",
                "i#]#=",
                "]#=#pad",
                "=#pad#char",
                "pad#char#;",
                "char#;#}",
                ";#}#}",
                "}#}#size",
                "}#size#+=",
                "size#+=#width",
                "+=#width#;",
                "width#;#}",
                ";#}#return",
                "}#return#this",
                "return#this#;",
                "this#;#}",
                ";#}#}"
            ],
            "diffs": {
                "8": {
                    "action": "CHANGE",
                    "buggy_end_line": 8,
                    "buggy_size": 1,
                    "buggy_start_line": 8,
                    "fixed_end_line": 8,
                    "fixed_size": 1,
                    "fixed_start_line": 8
                }
            },
            "end_line": 895,
            "exp_ins": 0,
            "exp_other": 1,
            "file_ext": ".java",
            "file_key": "Lang_59_src_java_org_apache_commons_lang_text_StrBuilder",
            "file_name": "StrBuilder",
            "module_dir": "src/java/org/apache/commons/lang/text",
            "module_id": "Lang_59",
            "module_name": "Lang",
            "module_num": "59",
            "multi_chunk_key": "Lang_59_src_java_org_apache_commons_lang_text_StrBuilder_method1_appendFixedWidthPadRight_Object_int_char",
            "ngram_score": 0.9113924050632911,
            "patch": "public StrBuilder appendFixedWidthPadRight ( Object obj , int width , char padChar ) { if ( width > 0 ) { ensureCapacity ( size + width ) ; String str = ( obj == null ? getNullText ( ) : obj . toString ( ) ) ; int strLen = str . length ( ) ; if ( strLen >= width ) { str . getChars ( 0 , width , buffer , size ) ; } else { int padLen = width - strLen ; str . getChars ( 0 , strLen , buffer , size ) ; for ( int i = 0 ; i < padLen ; i ++ ) { buffer [ size + strLen + i ] = padChar ; } } size += width ; } return this ; }",
            "patch_index": 846,
            "per_ins": 0,
            "per_other": 1,
            "score_total": 0.956,
            "set_index": null,
            "start_line": 878,
            "tf_token_length": 157,
            "tf_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#public",
                "{#public#str",
                "public#str#builder",
                "str#builder#fixed",
                "builder#fixed#width",
                "fixed#width#pad",
                "width#pad#right",
                "pad#right#(",
                "right#(#Object",
                "(#Object#obj",
                "Object#obj#,",
                "obj#,#int",
                ",#int#width",
                "int#width#,",
                "width#,#char",
                ",#char#pad",
                "char#pad#char",
                "pad#char#)",
                "char#)#{",
                ")#{#if",
                "{#if#(",
                "if#(#width",
                "(#width#>",
                "width#>#0",
                ">#0#)",
                "0#)#{",
                ")#{#ensure",
                "{#ensure#capacity",
                "ensure#capacity#(",
                "capacity#(#size",
                "(#size#+",
                "size#+#width",
                "+#width#)",
                "width#)#;",
                ")#;#String",
                ";#String#str",
                "String#str#=",
                "str#=#(",
                "=#(#obj",
                "(#obj#==",
                "obj#==#null",
                "==#null#?",
                "null#?#null",
                "?#null#text",
                "null#text#(",
                "text#(#)",
                "(#)#:",
                ")#:#obj",
                ":#obj#.",
                "obj#.#to",
                ".#to#string",
                "to#string#(",
                "string#(#)",
                "(#)#)",
                ")#)#;",
                ")#;#int",
                ";#int#str",
                "int#str#len",
                "str#len#=",
                "len#=#str",
                "=#str#.",
                "str#.#length",
                ".#length#(",
                "length#(#)",
                "(#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#str",
                "(#str#len",
                "str#len#>=",
                "len#>=#width",
                ">=#width#)",
                "width#)#{",
                ")#{#str",
                "{#str#.",
                "str#.#get",
                ".#get#chars",
                "get#chars#(",
                "chars#(#0",
                "(#0#,",
                "0#,#width",
                ",#width#,",
                "width#,#buffer",
                ",#buffer#,",
                "buffer#,#size",
                ",#size#)",
                "size#)#;",
                ")#;#}",
                ";#}#else",
                "}#else#{",
                "else#{#int",
                "{#int#pad",
                "int#pad#len",
                "pad#len#=",
                "len#=#width",
                "=#width#-",
                "width#-#str",
                "-#str#len",
                "str#len#;",
                "len#;#str",
                ";#str#.",
                "str#.#get",
                ".#get#chars",
                "get#chars#(",
                "chars#(#0",
                "(#0#,",
                "0#,#str",
                ",#str#len",
                "str#len#,",
                "len#,#buffer",
                ",#buffer#,",
                "buffer#,#size",
                ",#size#)",
                "size#)#;",
                ")#;#for",
                ";#for#(",
                "for#(#int",
                "(#int#i",
                "int#i#=",
                "i#=#0",
                "=#0#;",
                "0#;#i",
                ";#i#<",
                "i#<#pad",
                "<#pad#len",
                "pad#len#;",
                "len#;#i",
                ";#i#++",
                "i#++#)",
                "++#)#{",
                ")#{#buffer",
                "{#buffer#[",
                "buffer#[#size",
                "[#size#+",
                "size#+#str",
                "+#str#len",
                "str#len#+",
                "len#+#i",
                "+#i#]",
                "i#]#=",
                "]#=#pad",
                "=#pad#char",
                "pad#char#;",
                "char#;#}",
                ";#}#}",
                "}#}#size",
                "}#size#+=",
                "size#+=#width",
                "+=#width#;",
                "width#;#}",
                ";#}#return",
                "}#return#this",
                "return#this#;",
                "this#;#}",
                ";#}#}"
            ]
        }
    }
}