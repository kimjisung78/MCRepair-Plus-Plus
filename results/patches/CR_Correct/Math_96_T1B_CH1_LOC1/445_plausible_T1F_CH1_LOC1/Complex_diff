--- "/home/selab/\353\260\224\355\203\225\355\231\224\353\251\264/MCRepair/APR_Resources/repair/combination_patches2/Math_96/445/Complex_Origin.java"	2023-04-08 17:26:38.855397961 +0900
+++ "/home/selab/\353\260\224\355\203\225\355\231\224\353\251\264/MCRepair/APR_Resources/repair/combination_patches2/Math_96/445/Complex.java"	2023-04-08 17:26:38.855397961 +0900
@@ -242,30 +242,7 @@
      *         not equal to this Complex instance
      * 
      */
-    public boolean equals(Object other) {
-        boolean ret;
-        
-        if (this == other) { 
-            ret = true;
-        } else if (other == null) {
-            ret = false;
-        } else  {
-            try {
-                Complex rhs = (Complex)other;
-                if (rhs.isNaN()) {
-                    ret = this.isNaN();
-                } else {
-                    ret = (Double.doubleToRawLongBits(real) == Double.doubleToRawLongBits(rhs.getReal())) && (Double.doubleToRawLongBits(imaginary) == Double.doubleToRawLongBits(rhs.getImaginary())); 
-                }
-            } catch (ClassCastException ex) {
-                // ignore exception
-                ret = false;
-            }
-        }
-      
-        return ret;
-    }
-    
+public boolean equals ( Object other ) { boolean ret ; if ( this == other ) { ret = true ; } else if ( other == null ) { ret = false ; } else { try { Complex rhs = ( Complex ) other ; if ( rhs . isNaN ( ) ) { ret = this . isNaN ( ) ; } else { ret = ( real == rhs . getReal ( ) ) && ( imaginary == rhs . getImaginary ( ) ) ; } } catch ( ClassCastException ex ) { ret = false ; } } return ret ; }    
     /**
      * Get a hashCode for the complex number.
      * <p>
