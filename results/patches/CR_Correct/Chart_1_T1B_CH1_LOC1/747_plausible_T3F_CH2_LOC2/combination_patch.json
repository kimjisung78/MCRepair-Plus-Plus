{
    "AbstractCategoryItemRenderer": {
        "0": {
            "action_judgements": null,
            "action_score": 0.75,
            "buggy_code": "public LegendItemCollection getLegendItems ( ) { LegendItemCollection result = new LegendItemCollection ( ) ; if ( this . plot == null ) { return result ; } int index = this . plot . getIndexOf ( this ) ; CategoryDataset dataset = this . plot . getDataset ( index ) ;  if ( dataset != null ) {  return result ; } int seriesCount = dataset . getRowCount ( ) ; if ( plot . getRowRenderingOrder ( ) . equals ( SortOrder . ASCENDING ) ) { for ( int i = 0 ; i < seriesCount ; i ++ ) { if ( isSeriesVisibleInLegend ( i ) ) { LegendItem item = getLegendItem ( index , i ) ; if ( item != null ) { result . add ( item ) ; } } } } else { for ( int i = seriesCount - 1 ; i >= 0 ; i -- ) { if ( isSeriesVisibleInLegend ( i ) ) { LegendItem item = getLegendItem ( index , i ) ; if ( item != null ) { result . add ( item ) ; } } } } return result ; }",
            "buggy_dir": "",
            "criteria_token_length": 235,
            "criteria_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#public",
                "{#public#legend",
                "public#legend#item",
                "legend#item#collection",
                "item#collection#legend",
                "collection#legend#items",
                "legend#items#(",
                "items#(#)",
                "(#)#{",
                ")#{#legend",
                "{#legend#item",
                "legend#item#collection",
                "item#collection#result",
                "collection#result#=",
                "result#=#new",
                "=#new#legend",
                "new#legend#item",
                "legend#item#collection",
                "item#collection#(",
                "collection#(#)",
                "(#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#this",
                "(#this#.",
                "this#.#plot",
                ".#plot#==",
                "plot#==#null",
                "==#null#)",
                "null#)#{",
                ")#{#return",
                "{#return#result",
                "return#result#;",
                "result#;#}",
                ";#}#int",
                "}#int#index",
                "int#index#=",
                "index#=#this",
                "=#this#.",
                "this#.#plot",
                ".#plot#.",
                "plot#.#index",
                ".#index#of",
                "index#of#(",
                "of#(#this",
                "(#this#)",
                "this#)#;",
                ")#;#category",
                ";#category#dataset",
                "category#dataset#dataset",
                "dataset#dataset#=",
                "dataset#=#this",
                "=#this#.",
                "this#.#plot",
                ".#plot#.",
                "plot#.#get",
                ".#get#dataset",
                "get#dataset#(",
                "dataset#(#index",
                "(#index#)",
                "index#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#dataset",
                "(#dataset#!=",
                "dataset#!=#null",
                "!=#null#)",
                "null#)#{",
                ")#{#return",
                "{#return#result",
                "return#result#;",
                "result#;#}",
                ";#}#int",
                "}#int#series",
                "int#series#count",
                "series#count#=",
                "count#=#dataset",
                "=#dataset#.",
                "dataset#.#row",
                ".#row#count",
                "row#count#(",
                "count#(#)",
                "(#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#plot",
                "(#plot#.",
                "plot#.#row",
                ".#row#rendering",
                "row#rendering#order",
                "rendering#order#(",
                "order#(#)",
                "(#)#.",
                ")#.#equals",
                ".#equals#(",
                "equals#(#sort",
                "(#sort#order",
                "sort#order#.",
                "order#.#a",
                ".#a#s",
                "a#s#c",
                "s#c#e",
                "c#e#n",
                "e#n#d",
                "n#d#i",
                "d#i#n",
                "i#n#g",
                "n#g#)",
                "g#)#)",
                ")#)#{",
                ")#{#for",
                "{#for#(",
                "for#(#int",
                "(#int#i",
                "int#i#=",
                "i#=#0",
                "=#0#;",
                "0#;#i",
                ";#i#<",
                "i#<#series",
                "<#series#count",
                "series#count#;",
                "count#;#i",
                ";#i#++",
                "i#++#)",
                "++#)#{",
                ")#{#if",
                "{#if#(",
                "if#(#series",
                "(#series#visible",
                "series#visible#in",
                "visible#in#legend",
                "in#legend#(",
                "legend#(#i",
                "(#i#)",
                "i#)#)",
                ")#)#{",
                ")#{#legend",
                "{#legend#item",
                "legend#item#item",
                "item#item#=",
                "item#=#legend",
                "=#legend#item",
                "legend#item#(",
                "item#(#index",
                "(#index#,",
                "index#,#i",
                ",#i#)",
                "i#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#item",
                "(#item#!=",
                "item#!=#null",
                "!=#null#)",
                "null#)#{",
                ")#{#result",
                "{#result#.",
                "result#.#add",
                ".#add#(",
                "add#(#item",
                "(#item#)",
                "item#)#;",
                ")#;#}",
                ";#}#}",
                "}#}#}",
                "}#}#}",
                "}#}#else",
                "}#else#{",
                "else#{#for",
                "{#for#(",
                "for#(#int",
                "(#int#i",
                "int#i#=",
                "i#=#series",
                "=#series#count",
                "series#count#-",
                "count#-#1",
                "-#1#;",
                "1#;#i",
                ";#i#>=",
                "i#>=#0",
                ">=#0#;",
                "0#;#i",
                ";#i#--",
                "i#--#)",
                "--#)#{",
                ")#{#if",
                "{#if#(",
                "if#(#series",
                "(#series#visible",
                "series#visible#in",
                "visible#in#legend",
                "in#legend#(",
                "legend#(#i",
                "(#i#)",
                "i#)#)",
                ")#)#{",
                ")#{#legend",
                "{#legend#item",
                "legend#item#item",
                "item#item#=",
                "item#=#legend",
                "=#legend#item",
                "legend#item#(",
                "item#(#index",
                "(#index#,",
                "index#,#i",
                ",#i#)",
                "i#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#item",
                "(#item#!=",
                "item#!=#null",
                "!=#null#)",
                "null#)#{",
                ")#{#result",
                "{#result#.",
                "result#.#add",
                ".#add#(",
                "add#(#item",
                "(#item#)",
                "item#)#;",
                ")#;#}",
                ";#}#}",
                "}#}#}",
                "}#}#}",
                "}#}#return",
                "}#return#result",
                "return#result#;",
                "result#;#}",
                ";#}#}"
            ],
            "diffs": {
                "11": {
                    "action": "DELETE",
                    "buggy_end_line": 11,
                    "buggy_size": 1,
                    "buggy_start_line": 11,
                    "fixed_end_line": 11,
                    "fixed_size": 0,
                    "fixed_start_line": 11
                },
                "9": {
                    "action": "CHANGE",
                    "buggy_end_line": 9,
                    "buggy_size": 1,
                    "buggy_start_line": 9,
                    "fixed_end_line": 9,
                    "fixed_size": 1,
                    "fixed_start_line": 9
                }
            },
            "end_line": 1822,
            "exp_ins": 0,
            "exp_other": 1,
            "file_ext": ".java",
            "file_key": "Chart_1_source_org_jfree_chart_renderer_category_AbstractCategoryItemRenderer",
            "file_name": "AbstractCategoryItemRenderer",
            "module_dir": "source/org/jfree/chart/renderer/category",
            "module_id": "Chart_1",
            "module_name": "Chart",
            "module_num": "1",
            "multi_chunk_key": "Chart_1_source_org_jfree_chart_renderer_category_AbstractCategoryItemRenderer_method1_getLegendItems",
            "ngram_score": 0.6723404255319149,
            "patch": "public LegendItemCollection getLegendItems ( ) { LegendItemCollection result = new LegendItemCollection ( ) ; if ( this . plot == null ) { return result ; } int index = this . plot . getIndexOf ( this ) ; CategoryDataset dataset = this . plot . getDataset ( index ) ; if ( dataset == null ) return result ; int seriesCount = dataset . getRowCount ( ) ; if ( plot . getRowRenderingOrder ( ) . equals ( SortOrder . ASCENDING ) ) { for ( int i = 0 ; i < seriesCount ; i ++ ) { if ( isSeriesVisibleInLegend ( i ) ) { LegendItem item = getLegendItem ( index , i ) ; if ( item != null ) { result . add ( item ) ; } } } } else { for ( int i = seriesCount - 1 ; i >= 0 ; i -- ) { if ( isSeriesVisibleInLegend ( i ) ) { LegendItem item = getLegendItem ( index , i ) ; if ( item != null ) { result . add ( item ) ; } } } } return result ; }",
            "patch_index": 290,
            "per_ins": 0,
            "per_other": 2,
            "score_total": 0.711,
            "set_index": null,
            "start_line": 1790,
            "tf_token_length": 233,
            "tf_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#public",
                "{#public#legend",
                "public#legend#item",
                "legend#item#collection",
                "item#collection#legend",
                "collection#legend#items",
                "legend#items#(",
                "items#(#)",
                "(#)#{",
                ")#{#legend",
                "{#legend#item",
                "legend#item#collection",
                "item#collection#result",
                "collection#result#=",
                "result#=#new",
                "=#new#legend",
                "new#legend#item",
                "legend#item#collection",
                "item#collection#(",
                "collection#(#)",
                "(#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#this",
                "(#this#.",
                "this#.#plot",
                ".#plot#==",
                "plot#==#null",
                "==#null#)",
                "null#)#{",
                ")#{#return",
                "{#return#result",
                "return#result#;",
                "result#;#}",
                ";#}#int",
                "}#int#index",
                "int#index#=",
                "index#=#this",
                "=#this#.",
                "this#.#plot",
                ".#plot#.",
                "plot#.#index",
                ".#index#of",
                "index#of#(",
                "of#(#this",
                "(#this#)",
                "this#)#;",
                ")#;#category",
                ";#category#dataset",
                "category#dataset#dataset",
                "dataset#dataset#=",
                "dataset#=#this",
                "=#this#.",
                "this#.#plot",
                ".#plot#.",
                "plot#.#get",
                ".#get#dataset",
                "get#dataset#(",
                "dataset#(#index",
                "(#index#)",
                "index#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#dataset",
                "(#dataset#==",
                "dataset#==#null",
                "==#null#)",
                "null#)#return",
                ")#return#result",
                "return#result#;",
                "result#;#int",
                ";#int#series",
                "int#series#count",
                "series#count#=",
                "count#=#dataset",
                "=#dataset#.",
                "dataset#.#row",
                ".#row#count",
                "row#count#(",
                "count#(#)",
                "(#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#plot",
                "(#plot#.",
                "plot#.#row",
                ".#row#rendering",
                "row#rendering#order",
                "rendering#order#(",
                "order#(#)",
                "(#)#.",
                ")#.#equals",
                ".#equals#(",
                "equals#(#sort",
                "(#sort#order",
                "sort#order#.",
                "order#.#a",
                ".#a#s",
                "a#s#c",
                "s#c#e",
                "c#e#n",
                "e#n#d",
                "n#d#i",
                "d#i#n",
                "i#n#g",
                "n#g#)",
                "g#)#)",
                ")#)#{",
                ")#{#for",
                "{#for#(",
                "for#(#int",
                "(#int#i",
                "int#i#=",
                "i#=#0",
                "=#0#;",
                "0#;#i",
                ";#i#<",
                "i#<#series",
                "<#series#count",
                "series#count#;",
                "count#;#i",
                ";#i#++",
                "i#++#)",
                "++#)#{",
                ")#{#if",
                "{#if#(",
                "if#(#series",
                "(#series#visible",
                "series#visible#in",
                "visible#in#legend",
                "in#legend#(",
                "legend#(#i",
                "(#i#)",
                "i#)#)",
                ")#)#{",
                ")#{#legend",
                "{#legend#item",
                "legend#item#item",
                "item#item#=",
                "item#=#legend",
                "=#legend#item",
                "legend#item#(",
                "item#(#index",
                "(#index#,",
                "index#,#i",
                ",#i#)",
                "i#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#item",
                "(#item#!=",
                "item#!=#null",
                "!=#null#)",
                "null#)#{",
                ")#{#result",
                "{#result#.",
                "result#.#add",
                ".#add#(",
                "add#(#item",
                "(#item#)",
                "item#)#;",
                ")#;#}",
                ";#}#}",
                "}#}#}",
                "}#}#}",
                "}#}#else",
                "}#else#{",
                "else#{#for",
                "{#for#(",
                "for#(#int",
                "(#int#i",
                "int#i#=",
                "i#=#series",
                "=#series#count",
                "series#count#-",
                "count#-#1",
                "-#1#;",
                "1#;#i",
                ";#i#>=",
                "i#>=#0",
                ">=#0#;",
                "0#;#i",
                ";#i#--",
                "i#--#)",
                "--#)#{",
                ")#{#if",
                "{#if#(",
                "if#(#series",
                "(#series#visible",
                "series#visible#in",
                "visible#in#legend",
                "in#legend#(",
                "legend#(#i",
                "(#i#)",
                "i#)#)",
                ")#)#{",
                ")#{#legend",
                "{#legend#item",
                "legend#item#item",
                "item#item#=",
                "item#=#legend",
                "=#legend#item",
                "legend#item#(",
                "item#(#index",
                "(#index#,",
                "index#,#i",
                ",#i#)",
                "i#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#item",
                "(#item#!=",
                "item#!=#null",
                "!=#null#)",
                "null#)#{",
                ")#{#result",
                "{#result#.",
                "result#.#add",
                ".#add#(",
                "add#(#item",
                "(#item#)",
                "item#)#;",
                ")#;#}",
                ";#}#}",
                "}#}#}",
                "}#}#}",
                "}#}#return",
                "}#return#result",
                "return#result#;",
                "result#;#}",
                ";#}#}"
            ]
        }
    }
}