{
    "DateTimeZone": {
        "0": {
            "action_judgements": null,
            "action_score": 1.0,
            "buggy_code": "public int getOffsetFromLocal ( long instantLocal ) { final int offsetLocal = getOffset ( instantLocal ) ; final long instantAdjusted = instantLocal - offsetLocal ; final int offsetAdjusted = getOffset ( instantAdjusted ) ; if ( offsetLocal != offsetAdjusted ) { if ( ( offsetLocal - offsetAdjusted ) < 0 ) { long nextLocal = nextTransition ( instantAdjusted ) ; long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ; if ( nextLocal != nextAdjusted ) { return offsetLocal ; } }  } else if ( offsetLocal > 0 ) {  long prev = previousTransition ( instantAdjusted ) ; if ( prev < instantAdjusted ) { int offsetPrev = getOffset ( prev ) ; int diff = offsetPrev - offsetLocal ; if ( instantAdjusted - prev <= diff ) { return offsetPrev ; } } } return offsetAdjusted ; }",
            "buggy_dir": "",
            "criteria_token_length": 180,
            "criteria_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#public",
                "{#public#int",
                "public#int#offset",
                "int#offset#from",
                "offset#from#local",
                "from#local#(",
                "local#(#long",
                "(#long#instant",
                "long#instant#local",
                "instant#local#)",
                "local#)#{",
                ")#{#final",
                "{#final#int",
                "final#int#offset",
                "int#offset#local",
                "offset#local#=",
                "local#=#get",
                "=#get#offset",
                "get#offset#(",
                "offset#(#instant",
                "(#instant#local",
                "instant#local#)",
                "local#)#;",
                ")#;#final",
                ";#final#long",
                "final#long#instant",
                "long#instant#adjusted",
                "instant#adjusted#=",
                "adjusted#=#instant",
                "=#instant#local",
                "instant#local#-",
                "local#-#offset",
                "-#offset#local",
                "offset#local#;",
                "local#;#final",
                ";#final#int",
                "final#int#offset",
                "int#offset#adjusted",
                "offset#adjusted#=",
                "adjusted#=#get",
                "=#get#offset",
                "get#offset#(",
                "offset#(#instant",
                "(#instant#adjusted",
                "instant#adjusted#)",
                "adjusted#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#offset",
                "(#offset#local",
                "offset#local#!=",
                "local#!=#offset",
                "!=#offset#adjusted",
                "offset#adjusted#)",
                "adjusted#)#{",
                ")#{#if",
                "{#if#(",
                "if#(#(",
                "(#(#offset",
                "(#offset#local",
                "offset#local#-",
                "local#-#offset",
                "-#offset#adjusted",
                "offset#adjusted#)",
                "adjusted#)#<",
                ")#<#0",
                "<#0#)",
                "0#)#{",
                ")#{#long",
                "{#long#next",
                "long#next#local",
                "next#local#=",
                "local#=#next",
                "=#next#transition",
                "next#transition#(",
                "transition#(#instant",
                "(#instant#adjusted",
                "instant#adjusted#)",
                "adjusted#)#;",
                ")#;#long",
                ";#long#next",
                "long#next#adjusted",
                "next#adjusted#=",
                "adjusted#=#next",
                "=#next#transition",
                "next#transition#(",
                "transition#(#instant",
                "(#instant#local",
                "instant#local#-",
                "local#-#offset",
                "-#offset#adjusted",
                "offset#adjusted#)",
                "adjusted#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#next",
                "(#next#local",
                "next#local#!=",
                "local#!=#next",
                "!=#next#adjusted",
                "next#adjusted#)",
                "adjusted#)#{",
                ")#{#return",
                "{#return#offset",
                "return#offset#local",
                "offset#local#;",
                "local#;#}",
                ";#}#}",
                "}#}#}",
                "}#}#else",
                "}#else#if",
                "else#if#(",
                "if#(#offset",
                "(#offset#local",
                "offset#local#>",
                "local#>#0",
                ">#0#)",
                "0#)#{",
                ")#{#long",
                "{#long#prev",
                "long#prev#=",
                "prev#=#previous",
                "=#previous#transition",
                "previous#transition#(",
                "transition#(#instant",
                "(#instant#adjusted",
                "instant#adjusted#)",
                "adjusted#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#prev",
                "(#prev#<",
                "prev#<#instant",
                "<#instant#adjusted",
                "instant#adjusted#)",
                "adjusted#)#{",
                ")#{#int",
                "{#int#offset",
                "int#offset#prev",
                "offset#prev#=",
                "prev#=#get",
                "=#get#offset",
                "get#offset#(",
                "offset#(#prev",
                "(#prev#)",
                "prev#)#;",
                ")#;#int",
                ";#int#diff",
                "int#diff#=",
                "diff#=#offset",
                "=#offset#prev",
                "offset#prev#-",
                "prev#-#offset",
                "-#offset#local",
                "offset#local#;",
                "local#;#if",
                ";#if#(",
                "if#(#instant",
                "(#instant#adjusted",
                "instant#adjusted#-",
                "adjusted#-#prev",
                "-#prev#<=",
                "prev#<=#diff",
                "<=#diff#)",
                "diff#)#{",
                ")#{#return",
                "{#return#offset",
                "return#offset#prev",
                "offset#prev#;",
                "prev#;#}",
                ";#}#}",
                "}#}#}",
                "}#}#return",
                "}#return#offset",
                "return#offset#adjusted",
                "offset#adjusted#;",
                "adjusted#;#}",
                ";#}#}"
            ],
            "diffs": {
                "14": {
                    "action": "CHANGE",
                    "buggy_end_line": 14,
                    "buggy_size": 1,
                    "buggy_start_line": 14,
                    "fixed_end_line": 14,
                    "fixed_size": 1,
                    "fixed_start_line": 14
                }
            },
            "end_line": 911,
            "exp_ins": 0,
            "exp_other": 1,
            "file_ext": ".java",
            "file_key": "Time_19_src_main_java_org_joda_time_DateTimeZone",
            "file_name": "DateTimeZone",
            "module_dir": "src/main/java/org/joda/time",
            "module_id": "Time_19",
            "module_name": "Time",
            "module_num": "19",
            "multi_chunk_key": "Time_19_src_main_java_org_joda_time_DateTimeZone_method1_getOffsetFromLocal_long",
            "ngram_score": 0.7252747252747253,
            "patch": "public int getOffsetFromLocal ( long instantLocal ) { final int offsetLocal = getOffset ( instantLocal ) ; final long instantAdjusted = instantLocal - offsetLocal ; final int offsetAdjusted = getOffset ( instantAdjusted ) ; if ( offsetLocal != offsetAdjusted ) { if ( ( offsetLocal - offsetAdjusted ) < 0 ) { long nextLocal = nextTransition ( instantAdjusted ) ; long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ; if ( nextLocal != nextAdjusted ) { return offsetLocal ; } } } else if ( offsetLocal > 0 - 1 ) { long prev = previousTransition ( instantAdjusted ) ; if ( prev < instantAdjusted ) { int offsetPrev = getOffset ( prev ) ; int diff = offsetPrev - offsetLocal ; if ( instantAdjusted - prev <= diff ) { return offsetPrev ; } } } return offsetAdjusted ; }",
            "patch_index": 584,
            "per_ins": 0,
            "per_other": 1,
            "score_total": 0.863,
            "set_index": null,
            "start_line": 880,
            "tf_token_length": 182,
            "tf_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#public",
                "{#public#int",
                "public#int#offset",
                "int#offset#from",
                "offset#from#local",
                "from#local#(",
                "local#(#long",
                "(#long#instant",
                "long#instant#local",
                "instant#local#)",
                "local#)#{",
                ")#{#final",
                "{#final#int",
                "final#int#offset",
                "int#offset#local",
                "offset#local#=",
                "local#=#get",
                "=#get#offset",
                "get#offset#(",
                "offset#(#instant",
                "(#instant#local",
                "instant#local#)",
                "local#)#;",
                ")#;#final",
                ";#final#long",
                "final#long#instant",
                "long#instant#adjusted",
                "instant#adjusted#=",
                "adjusted#=#instant",
                "=#instant#local",
                "instant#local#-",
                "local#-#offset",
                "-#offset#local",
                "offset#local#;",
                "local#;#final",
                ";#final#int",
                "final#int#offset",
                "int#offset#adjusted",
                "offset#adjusted#=",
                "adjusted#=#get",
                "=#get#offset",
                "get#offset#(",
                "offset#(#instant",
                "(#instant#adjusted",
                "instant#adjusted#)",
                "adjusted#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#offset",
                "(#offset#local",
                "offset#local#!=",
                "local#!=#offset",
                "!=#offset#adjusted",
                "offset#adjusted#)",
                "adjusted#)#{",
                ")#{#if",
                "{#if#(",
                "if#(#(",
                "(#(#offset",
                "(#offset#local",
                "offset#local#-",
                "local#-#offset",
                "-#offset#adjusted",
                "offset#adjusted#)",
                "adjusted#)#<",
                ")#<#0",
                "<#0#)",
                "0#)#{",
                ")#{#long",
                "{#long#next",
                "long#next#local",
                "next#local#=",
                "local#=#next",
                "=#next#transition",
                "next#transition#(",
                "transition#(#instant",
                "(#instant#adjusted",
                "instant#adjusted#)",
                "adjusted#)#;",
                ")#;#long",
                ";#long#next",
                "long#next#adjusted",
                "next#adjusted#=",
                "adjusted#=#next",
                "=#next#transition",
                "next#transition#(",
                "transition#(#instant",
                "(#instant#local",
                "instant#local#-",
                "local#-#offset",
                "-#offset#adjusted",
                "offset#adjusted#)",
                "adjusted#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#next",
                "(#next#local",
                "next#local#!=",
                "local#!=#next",
                "!=#next#adjusted",
                "next#adjusted#)",
                "adjusted#)#{",
                ")#{#return",
                "{#return#offset",
                "return#offset#local",
                "offset#local#;",
                "local#;#}",
                ";#}#}",
                "}#}#}",
                "}#}#else",
                "}#else#if",
                "else#if#(",
                "if#(#offset",
                "(#offset#local",
                "offset#local#>",
                "local#>#0",
                ">#0#-",
                "0#-#1",
                "-#1#)",
                "1#)#{",
                ")#{#long",
                "{#long#prev",
                "long#prev#=",
                "prev#=#previous",
                "=#previous#transition",
                "previous#transition#(",
                "transition#(#instant",
                "(#instant#adjusted",
                "instant#adjusted#)",
                "adjusted#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#prev",
                "(#prev#<",
                "prev#<#instant",
                "<#instant#adjusted",
                "instant#adjusted#)",
                "adjusted#)#{",
                ")#{#int",
                "{#int#offset",
                "int#offset#prev",
                "offset#prev#=",
                "prev#=#get",
                "=#get#offset",
                "get#offset#(",
                "offset#(#prev",
                "(#prev#)",
                "prev#)#;",
                ")#;#int",
                ";#int#diff",
                "int#diff#=",
                "diff#=#offset",
                "=#offset#prev",
                "offset#prev#-",
                "prev#-#offset",
                "-#offset#local",
                "offset#local#;",
                "local#;#if",
                ";#if#(",
                "if#(#instant",
                "(#instant#adjusted",
                "instant#adjusted#-",
                "adjusted#-#prev",
                "-#prev#<=",
                "prev#<=#diff",
                "<=#diff#)",
                "diff#)#{",
                ")#{#return",
                "{#return#offset",
                "return#offset#prev",
                "offset#prev#;",
                "prev#;#}",
                ";#}#}",
                "}#}#}",
                "}#}#return",
                "}#return#offset",
                "return#offset#adjusted",
                "offset#adjusted#;",
                "adjusted#;#}",
                ";#}#}"
            ]
        }
    }
}