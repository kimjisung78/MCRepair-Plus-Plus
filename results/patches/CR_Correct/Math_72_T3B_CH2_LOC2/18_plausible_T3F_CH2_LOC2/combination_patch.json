{
    "BrentSolver": {
        "0": {
            "action_judgements": null,
            "action_score": 1.0,
            "buggy_code": "public double solve ( final UnivariateRealFunction f , final double min , final double max , final double initial ) throws MaxIterationsExceededException , FunctionEvaluationException { clearResult ( ) ; verifySequence ( min , initial , max ) ; double yInitial = f . value ( initial ) ; if ( Math . abs ( yInitial ) <= functionValueAccuracy ) { setResult ( initial , 0 ) ; return result ; } double yMin = f . value ( min ) ; if ( Math . abs ( yMin ) <= functionValueAccuracy ) {  setResult ( yMin , 0 ) ;  return result ; } if ( yInitial * yMin < 0 ) { return solve ( f , min , yMin , initial , yInitial , min , yMin ) ; } double yMax = f . value ( max ) ; if ( Math . abs ( yMax ) <= functionValueAccuracy ) {  setResult ( yMax , 0 ) ;  return result ; } if ( yInitial * yMax < 0 ) { return solve ( f , initial , yInitial , max , yMax , initial , yInitial ) ; } if ( yMin * yMax > 0 ) { throw MathRuntimeException . createIllegalArgumentException ( NON_BRACKETING_MESSAGE , min , max , yMin , yMax ) ; } return solve ( f , min , yMin , max , yMax , initial , yInitial ) ; }",
            "buggy_dir": "",
            "criteria_token_length": 304,
            "criteria_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#public",
                "{#public#double",
                "public#double#solve",
                "double#solve#(",
                "solve#(#final",
                "(#final#univariate",
                "final#univariate#real",
                "univariate#real#function",
                "real#function#f",
                "function#f#,",
                "f#,#final",
                ",#final#double",
                "final#double#min",
                "double#min#,",
                "min#,#final",
                ",#final#double",
                "final#double#max",
                "double#max#,",
                "max#,#final",
                ",#final#double",
                "final#double#initial",
                "double#initial#)",
                "initial#)#throws",
                ")#throws#max",
                "throws#max#iterations",
                "max#iterations#exceeded",
                "iterations#exceeded#exception",
                "exceeded#exception#,",
                "exception#,#function",
                ",#function#evaluation",
                "function#evaluation#exception",
                "evaluation#exception#{",
                "exception#{#clear",
                "{#clear#result",
                "clear#result#(",
                "result#(#)",
                "(#)#;",
                ")#;#verify",
                ";#verify#sequence",
                "verify#sequence#(",
                "sequence#(#min",
                "(#min#,",
                "min#,#initial",
                ",#initial#,",
                "initial#,#max",
                ",#max#)",
                "max#)#;",
                ")#;#double",
                ";#double#y",
                "double#y#initial",
                "y#initial#=",
                "initial#=#f",
                "=#f#.",
                "f#.#value",
                ".#value#(",
                "value#(#initial",
                "(#initial#)",
                "initial#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#Math",
                "(#Math#.",
                "Math#.#abs",
                ".#abs#(",
                "abs#(#y",
                "(#y#initial",
                "y#initial#)",
                "initial#)#<=",
                ")#<=#value",
                "<=#value#accuracy",
                "value#accuracy#)",
                "accuracy#)#{",
                ")#{#set",
                "{#set#result",
                "set#result#(",
                "result#(#initial",
                "(#initial#,",
                "initial#,#0",
                ",#0#)",
                "0#)#;",
                ")#;#return",
                ";#return#result",
                "return#result#;",
                "result#;#}",
                ";#}#double",
                "}#double#y",
                "double#y#min",
                "y#min#=",
                "min#=#f",
                "=#f#.",
                "f#.#value",
                ".#value#(",
                "value#(#min",
                "(#min#)",
                "min#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#Math",
                "(#Math#.",
                "Math#.#abs",
                ".#abs#(",
                "abs#(#y",
                "(#y#min",
                "y#min#)",
                "min#)#<=",
                ")#<=#value",
                "<=#value#accuracy",
                "value#accuracy#)",
                "accuracy#)#{",
                ")#{#set",
                "{#set#result",
                "set#result#(",
                "result#(#y",
                "(#y#min",
                "y#min#,",
                "min#,#0",
                ",#0#)",
                "0#)#;",
                ")#;#return",
                ";#return#result",
                "return#result#;",
                "result#;#}",
                ";#}#if",
                "}#if#(",
                "if#(#y",
                "(#y#initial",
                "y#initial#*",
                "initial#*#y",
                "*#y#min",
                "y#min#<",
                "min#<#0",
                "<#0#)",
                "0#)#{",
                ")#{#return",
                "{#return#solve",
                "return#solve#(",
                "solve#(#f",
                "(#f#,",
                "f#,#min",
                ",#min#,",
                "min#,#y",
                ",#y#min",
                "y#min#,",
                "min#,#initial",
                ",#initial#,",
                "initial#,#y",
                ",#y#initial",
                "y#initial#,",
                "initial#,#min",
                ",#min#,",
                "min#,#y",
                ",#y#min",
                "y#min#)",
                "min#)#;",
                ")#;#}",
                ";#}#double",
                "}#double#y",
                "double#y#max",
                "y#max#=",
                "max#=#f",
                "=#f#.",
                "f#.#value",
                ".#value#(",
                "value#(#max",
                "(#max#)",
                "max#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#Math",
                "(#Math#.",
                "Math#.#abs",
                ".#abs#(",
                "abs#(#y",
                "(#y#max",
                "y#max#)",
                "max#)#<=",
                ")#<=#value",
                "<=#value#accuracy",
                "value#accuracy#)",
                "accuracy#)#{",
                ")#{#set",
                "{#set#result",
                "set#result#(",
                "result#(#y",
                "(#y#max",
                "y#max#,",
                "max#,#0",
                ",#0#)",
                "0#)#;",
                ")#;#return",
                ";#return#result",
                "return#result#;",
                "result#;#}",
                ";#}#if",
                "}#if#(",
                "if#(#y",
                "(#y#initial",
                "y#initial#*",
                "initial#*#y",
                "*#y#max",
                "y#max#<",
                "max#<#0",
                "<#0#)",
                "0#)#{",
                ")#{#return",
                "{#return#solve",
                "return#solve#(",
                "solve#(#f",
                "(#f#,",
                "f#,#initial",
                ",#initial#,",
                "initial#,#y",
                ",#y#initial",
                "y#initial#,",
                "initial#,#max",
                ",#max#,",
                "max#,#y",
                ",#y#max",
                "y#max#,",
                "max#,#initial",
                ",#initial#,",
                "initial#,#y",
                ",#y#initial",
                "y#initial#)",
                "initial#)#;",
                ")#;#}",
                ";#}#if",
                "}#if#(",
                "if#(#y",
                "(#y#min",
                "y#min#*",
                "min#*#y",
                "*#y#max",
                "y#max#>",
                "max#>#0",
                ">#0#)",
                "0#)#{",
                ")#{#throw",
                "{#throw#math",
                "throw#math#runtime",
                "math#runtime#exception",
                "runtime#exception#.",
                "exception#.#illegal",
                ".#illegal#argument",
                "illegal#argument#exception",
                "argument#exception#(",
                "exception#(#n",
                "(#n#o",
                "n#o#n",
                "o#n#b",
                "n#b#r",
                "b#r#a",
                "r#a#c",
                "a#c#k",
                "c#k#e",
                "k#e#t",
                "e#t#i",
                "t#i#n",
                "i#n#g",
                "n#g#m",
                "g#m#e",
                "m#e#s",
                "e#s#s",
                "s#s#a",
                "s#a#g",
                "a#g#e",
                "g#e#,",
                "e#,#min",
                ",#min#,",
                "min#,#max",
                ",#max#,",
                "max#,#y",
                ",#y#min",
                "y#min#,",
                "min#,#y",
                ",#y#max",
                "y#max#)",
                "max#)#;",
                ")#;#}",
                ";#}#return",
                "}#return#solve",
                "return#solve#(",
                "solve#(#f",
                "(#f#,",
                "f#,#min",
                ",#min#,",
                "min#,#y",
                ",#y#min",
                "y#min#,",
                "min#,#max",
                ",#max#,",
                "max#,#y",
                ",#y#max",
                "y#max#,",
                "max#,#initial",
                ",#initial#,",
                "initial#,#y",
                ",#y#initial",
                "y#initial#)",
                "initial#)#;",
                ")#;#}",
                ";#}#}"
            ],
            "diffs": {
                "12": {
                    "action": "CHANGE",
                    "buggy_end_line": 12,
                    "buggy_size": 1,
                    "buggy_start_line": 12,
                    "fixed_end_line": 12,
                    "fixed_size": 1,
                    "fixed_start_line": 12
                },
                "20": {
                    "action": "CHANGE",
                    "buggy_end_line": 20,
                    "buggy_size": 1,
                    "buggy_start_line": 20,
                    "fixed_end_line": 20,
                    "fixed_size": 1,
                    "fixed_start_line": 20
                }
            },
            "end_line": 144,
            "exp_ins": 0,
            "exp_other": 2,
            "file_ext": ".java",
            "file_key": "Math_72_src_main_java_org_apache_commons_math_analysis_solvers_BrentSolver",
            "file_name": "BrentSolver",
            "module_dir": "src/main/java/org/apache/commons/math/analysis/solvers",
            "module_id": "Math_72",
            "module_name": "Math",
            "module_num": "72",
            "multi_chunk_key": "Math_72_src_main_java_org_apache_commons_math_analysis_solvers_BrentSolver_method1_solve_UnivariateRealFunction_double_double_double",
            "ngram_score": 0.5888157894736842,
            "patch": "public double solve ( final UnivariateRealFunction f , final double min , final double max , final double initial ) throws MaxIterationsExceededException , FunctionEvaluationException { clearResult ( ) ; verifySequence ( min , initial , max ) ; double yInitial = f . value ( initial ) ; if ( Math . abs ( yInitial ) <= functionValueAccuracy ) { setResult ( initial , 0 ) ; return result ; } double yMin = f . value ( min ) ; if ( Math . abs ( yMin ) <= functionValueAccuracy ) { setResult ( min , 0 ) ; return result ; } if ( yInitial * yMin < 0 ) { return solve ( f , min , yMin , initial , yInitial , min , yMin ) ; } double yMax = f . value ( max ) ; if ( Math . abs ( yMax ) <= functionValueAccuracy ) { setResult ( max , 0 ) ; return result ; } if ( yInitial * yMax < 0 ) { return solve ( f , initial , yInitial , max , yMax , initial , yInitial ) ; } if ( yMin * yMax > 0 ) { throw MathRuntimeException . createIllegalArgumentException ( NON_BRACKETING_MESSAGE , min , max , yMin , yMax ) ; } return solve ( f , min , yMin , max , yMax , initial , yInitial ) ; }",
            "patch_index": 500,
            "per_ins": 0,
            "per_other": 2,
            "score_total": 0.794,
            "set_index": null,
            "start_line": 98,
            "tf_token_length": 302,
            "tf_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#public",
                "{#public#double",
                "public#double#solve",
                "double#solve#(",
                "solve#(#final",
                "(#final#univariate",
                "final#univariate#real",
                "univariate#real#function",
                "real#function#f",
                "function#f#,",
                "f#,#final",
                ",#final#double",
                "final#double#min",
                "double#min#,",
                "min#,#final",
                ",#final#double",
                "final#double#max",
                "double#max#,",
                "max#,#final",
                ",#final#double",
                "final#double#initial",
                "double#initial#)",
                "initial#)#throws",
                ")#throws#max",
                "throws#max#iterations",
                "max#iterations#exceeded",
                "iterations#exceeded#exception",
                "exceeded#exception#,",
                "exception#,#function",
                ",#function#evaluation",
                "function#evaluation#exception",
                "evaluation#exception#{",
                "exception#{#clear",
                "{#clear#result",
                "clear#result#(",
                "result#(#)",
                "(#)#;",
                ")#;#verify",
                ";#verify#sequence",
                "verify#sequence#(",
                "sequence#(#min",
                "(#min#,",
                "min#,#initial",
                ",#initial#,",
                "initial#,#max",
                ",#max#)",
                "max#)#;",
                ")#;#double",
                ";#double#y",
                "double#y#initial",
                "y#initial#=",
                "initial#=#f",
                "=#f#.",
                "f#.#value",
                ".#value#(",
                "value#(#initial",
                "(#initial#)",
                "initial#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#Math",
                "(#Math#.",
                "Math#.#abs",
                ".#abs#(",
                "abs#(#y",
                "(#y#initial",
                "y#initial#)",
                "initial#)#<=",
                ")#<=#value",
                "<=#value#accuracy",
                "value#accuracy#)",
                "accuracy#)#{",
                ")#{#set",
                "{#set#result",
                "set#result#(",
                "result#(#initial",
                "(#initial#,",
                "initial#,#0",
                ",#0#)",
                "0#)#;",
                ")#;#return",
                ";#return#result",
                "return#result#;",
                "result#;#}",
                ";#}#double",
                "}#double#y",
                "double#y#min",
                "y#min#=",
                "min#=#f",
                "=#f#.",
                "f#.#value",
                ".#value#(",
                "value#(#min",
                "(#min#)",
                "min#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#Math",
                "(#Math#.",
                "Math#.#abs",
                ".#abs#(",
                "abs#(#y",
                "(#y#min",
                "y#min#)",
                "min#)#<=",
                ")#<=#value",
                "<=#value#accuracy",
                "value#accuracy#)",
                "accuracy#)#{",
                ")#{#set",
                "{#set#result",
                "set#result#(",
                "result#(#min",
                "(#min#,",
                "min#,#0",
                ",#0#)",
                "0#)#;",
                ")#;#return",
                ";#return#result",
                "return#result#;",
                "result#;#}",
                ";#}#if",
                "}#if#(",
                "if#(#y",
                "(#y#initial",
                "y#initial#*",
                "initial#*#y",
                "*#y#min",
                "y#min#<",
                "min#<#0",
                "<#0#)",
                "0#)#{",
                ")#{#return",
                "{#return#solve",
                "return#solve#(",
                "solve#(#f",
                "(#f#,",
                "f#,#min",
                ",#min#,",
                "min#,#y",
                ",#y#min",
                "y#min#,",
                "min#,#initial",
                ",#initial#,",
                "initial#,#y",
                ",#y#initial",
                "y#initial#,",
                "initial#,#min",
                ",#min#,",
                "min#,#y",
                ",#y#min",
                "y#min#)",
                "min#)#;",
                ")#;#}",
                ";#}#double",
                "}#double#y",
                "double#y#max",
                "y#max#=",
                "max#=#f",
                "=#f#.",
                "f#.#value",
                ".#value#(",
                "value#(#max",
                "(#max#)",
                "max#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#Math",
                "(#Math#.",
                "Math#.#abs",
                ".#abs#(",
                "abs#(#y",
                "(#y#max",
                "y#max#)",
                "max#)#<=",
                ")#<=#value",
                "<=#value#accuracy",
                "value#accuracy#)",
                "accuracy#)#{",
                ")#{#set",
                "{#set#result",
                "set#result#(",
                "result#(#max",
                "(#max#,",
                "max#,#0",
                ",#0#)",
                "0#)#;",
                ")#;#return",
                ";#return#result",
                "return#result#;",
                "result#;#}",
                ";#}#if",
                "}#if#(",
                "if#(#y",
                "(#y#initial",
                "y#initial#*",
                "initial#*#y",
                "*#y#max",
                "y#max#<",
                "max#<#0",
                "<#0#)",
                "0#)#{",
                ")#{#return",
                "{#return#solve",
                "return#solve#(",
                "solve#(#f",
                "(#f#,",
                "f#,#initial",
                ",#initial#,",
                "initial#,#y",
                ",#y#initial",
                "y#initial#,",
                "initial#,#max",
                ",#max#,",
                "max#,#y",
                ",#y#max",
                "y#max#,",
                "max#,#initial",
                ",#initial#,",
                "initial#,#y",
                ",#y#initial",
                "y#initial#)",
                "initial#)#;",
                ")#;#}",
                ";#}#if",
                "}#if#(",
                "if#(#y",
                "(#y#min",
                "y#min#*",
                "min#*#y",
                "*#y#max",
                "y#max#>",
                "max#>#0",
                ">#0#)",
                "0#)#{",
                ")#{#throw",
                "{#throw#math",
                "throw#math#runtime",
                "math#runtime#exception",
                "runtime#exception#.",
                "exception#.#illegal",
                ".#illegal#argument",
                "illegal#argument#exception",
                "argument#exception#(",
                "exception#(#n",
                "(#n#o",
                "n#o#n",
                "o#n#b",
                "n#b#r",
                "b#r#a",
                "r#a#c",
                "a#c#k",
                "c#k#e",
                "k#e#t",
                "e#t#i",
                "t#i#n",
                "i#n#g",
                "n#g#m",
                "g#m#e",
                "m#e#s",
                "e#s#s",
                "s#s#a",
                "s#a#g",
                "a#g#e",
                "g#e#,",
                "e#,#min",
                ",#min#,",
                "min#,#max",
                ",#max#,",
                "max#,#y",
                ",#y#min",
                "y#min#,",
                "min#,#y",
                ",#y#max",
                "y#max#)",
                "max#)#;",
                ")#;#}",
                ";#}#return",
                "}#return#solve",
                "return#solve#(",
                "solve#(#f",
                "(#f#,",
                "f#,#min",
                ",#min#,",
                "min#,#y",
                ",#y#min",
                "y#min#,",
                "min#,#max",
                ",#max#,",
                "max#,#y",
                ",#y#max",
                "y#max#,",
                "max#,#initial",
                ",#initial#,",
                "initial#,#y",
                ",#y#initial",
                "y#initial#)",
                "initial#)#;",
                ")#;#}",
                ";#}#}"
            ]
        }
    }
}