{
    "StopWatch": {
        "0": {
            "action_judgements": null,
            "action_score": 1.0,
            "buggy_code": "public void stop ( ) { if ( this . runningState != STATE_RUNNING && this . runningState != STATE_SUSPENDED ) { throw new IllegalStateException ( \"Stopwatch is not running. \" ) ; }  stopTime = System . currentTimeMillis ( ) ;   this . runningState = STATE_STOPPED ;  }",
            "buggy_dir": "",
            "criteria_token_length": 90,
            "criteria_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#public",
                "{#public#void",
                "public#void#stop",
                "void#stop#(",
                "stop#(#)",
                "(#)#{",
                ")#{#if",
                "{#if#(",
                "if#(#this",
                "(#this#.",
                "this#.#running",
                ".#running#state",
                "running#state#!=",
                "state#!=#s",
                "!=#s#t",
                "s#t#a",
                "t#a#t",
                "a#t#e",
                "t#e#r",
                "e#r#u",
                "r#u#n",
                "u#n#n",
                "n#n#i",
                "n#i#n",
                "i#n#g",
                "n#g#&&",
                "g#&&#this",
                "&&#this#.",
                "this#.#running",
                ".#running#state",
                "running#state#!=",
                "state#!=#s",
                "!=#s#t",
                "s#t#a",
                "t#a#t",
                "a#t#e",
                "t#e#s",
                "e#s#u",
                "s#u#s",
                "u#s#p",
                "s#p#e",
                "p#e#n",
                "e#n#d",
                "n#d#e",
                "d#e#d",
                "e#d#)",
                "d#)#{",
                ")#{#throw",
                "{#throw#new",
                "throw#new#illegal",
                "new#illegal#state",
                "illegal#state#exception",
                "state#exception#(",
                "exception#(#\"",
                "(#\"#stopwatch is not running. \"",
                "\"#stopwatch is not running. \"#)",
                "stopwatch is not running. \"#)#;",
                ")#;#}",
                ";#}#stop",
                "}#stop#time",
                "stop#time#=",
                "time#=#System",
                "=#System#.",
                "System#.#time",
                ".#time#millis",
                "time#millis#(",
                "millis#(#)",
                "(#)#;",
                ")#;#this",
                ";#this#.",
                "this#.#running",
                ".#running#state",
                "running#state#=",
                "state#=#s",
                "=#s#t",
                "s#t#a",
                "t#a#t",
                "a#t#e",
                "t#e#s",
                "e#s#t",
                "s#t#o",
                "t#o#p",
                "o#p#p",
                "p#p#e",
                "p#e#d",
                "e#d#;",
                "d#;#}",
                ";#}#}"
            ],
            "diffs": {
                "6": {
                    "action": "INSERT",
                    "buggy_end_line": 6,
                    "buggy_size": 0,
                    "buggy_start_line": 6,
                    "fixed_end_line": 6,
                    "fixed_size": 1,
                    "fixed_start_line": 6
                },
                "7": {
                    "action": "INSERT",
                    "buggy_end_line": 7,
                    "buggy_size": 0,
                    "buggy_start_line": 7,
                    "fixed_end_line": 8,
                    "fixed_size": 1,
                    "fixed_start_line": 8
                }
            },
            "end_line": 120,
            "exp_ins": 2,
            "exp_other": 0,
            "file_ext": ".java",
            "file_key": "Lang_55_src_java_org_apache_commons_lang_time_StopWatch",
            "file_name": "StopWatch",
            "module_dir": "src/java/org/apache/commons/lang/time",
            "module_id": "Lang_55",
            "module_name": "Lang",
            "module_num": "55",
            "multi_chunk_key": "Lang_55_src_java_org_apache_commons_lang_time_StopWatch_method1_stop",
            "ngram_score": 0.631578947368421,
            "patch": "public void stop ( ) { if ( this . runningState != STATE_RUNNING && this . runningState != STATE_SUSPENDED ) { throw new IllegalStateException ( \"Stopwatch is not running. \" ) ; } if ( this . runningState != STATE_SUSPENDED ) { stopTime = System . currentTimeMillis ( ) ; } this . runningState = STATE_STOPPED ; }",
            "patch_index": 291,
            "per_ins": 2,
            "per_other": 0,
            "score_total": 0.816,
            "set_index": null,
            "start_line": 114,
            "tf_token_length": 114,
            "tf_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#public",
                "{#public#void",
                "public#void#stop",
                "void#stop#(",
                "stop#(#)",
                "(#)#{",
                ")#{#if",
                "{#if#(",
                "if#(#this",
                "(#this#.",
                "this#.#running",
                ".#running#state",
                "running#state#!=",
                "state#!=#s",
                "!=#s#t",
                "s#t#a",
                "t#a#t",
                "a#t#e",
                "t#e#r",
                "e#r#u",
                "r#u#n",
                "u#n#n",
                "n#n#i",
                "n#i#n",
                "i#n#g",
                "n#g#&&",
                "g#&&#this",
                "&&#this#.",
                "this#.#running",
                ".#running#state",
                "running#state#!=",
                "state#!=#s",
                "!=#s#t",
                "s#t#a",
                "t#a#t",
                "a#t#e",
                "t#e#s",
                "e#s#u",
                "s#u#s",
                "u#s#p",
                "s#p#e",
                "p#e#n",
                "e#n#d",
                "n#d#e",
                "d#e#d",
                "e#d#)",
                "d#)#{",
                ")#{#throw",
                "{#throw#new",
                "throw#new#illegal",
                "new#illegal#state",
                "illegal#state#exception",
                "state#exception#(",
                "exception#(#\"",
                "(#\"#stopwatch is not running. \"",
                "\"#stopwatch is not running. \"#)",
                "stopwatch is not running. \"#)#;",
                ")#;#}",
                ";#}#if",
                "}#if#(",
                "if#(#this",
                "(#this#.",
                "this#.#running",
                ".#running#state",
                "running#state#!=",
                "state#!=#s",
                "!=#s#t",
                "s#t#a",
                "t#a#t",
                "a#t#e",
                "t#e#s",
                "e#s#u",
                "s#u#s",
                "u#s#p",
                "s#p#e",
                "p#e#n",
                "e#n#d",
                "n#d#e",
                "d#e#d",
                "e#d#)",
                "d#)#{",
                ")#{#stop",
                "{#stop#time",
                "stop#time#=",
                "time#=#System",
                "=#System#.",
                "System#.#time",
                ".#time#millis",
                "time#millis#(",
                "millis#(#)",
                "(#)#;",
                ")#;#}",
                ";#}#this",
                "}#this#.",
                "this#.#running",
                ".#running#state",
                "running#state#=",
                "state#=#s",
                "=#s#t",
                "s#t#a",
                "t#a#t",
                "a#t#e",
                "t#e#s",
                "e#s#t",
                "s#t#o",
                "t#o#p",
                "o#p#p",
                "p#p#e",
                "p#e#d",
                "e#d#;",
                "d#;#}",
                ";#}#}"
            ]
        }
    }
}