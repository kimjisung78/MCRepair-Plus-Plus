{
    "DateTimeZone": {
        "0": {
            "action_judgements": null,
            "action_score": 0.7,
            "buggy_code": "public long adjustOffset ( long instant , boolean earlierOrLater ) {  long instantBefore = convertUTCToLocal ( instant - 3 * DateTimeConstants . MILLIS_PER_HOUR ) ;   long instantAfter = convertUTCToLocal ( instant + 3 * DateTimeConstants . MILLIS_PER_HOUR ) ;   if ( instantBefore == instantAfter ) {  return instant ; }  long local = convertUTCToLocal ( instant ) ;   return convertLocalToUTC ( local , false , earlierOrLater ? instantAfter : instantBefore ) ;  }",
            "buggy_dir": "",
            "criteria_token_length": 129,
            "criteria_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#public",
                "{#public#long",
                "public#long#adjust",
                "long#adjust#offset",
                "adjust#offset#(",
                "offset#(#long",
                "(#long#instant",
                "long#instant#,",
                "instant#,#boolean",
                ",#boolean#or",
                "boolean#or#later",
                "or#later#)",
                "later#)#{",
                ")#{#long",
                "{#long#instant",
                "long#instant#before",
                "instant#before#=",
                "before#=#u",
                "=#u#t",
                "u#t#c",
                "t#c#to",
                "c#to#local",
                "to#local#(",
                "local#(#instant",
                "(#instant#-",
                "instant#-#3",
                "-#3#*",
                "3#*#date",
                "*#date#time",
                "date#time#constants",
                "time#constants#.",
                "constants#.#m",
                ".#m#i",
                "m#i#l",
                "i#l#l",
                "l#l#i",
                "l#i#s",
                "i#s#p",
                "s#p#e",
                "p#e#r",
                "e#r#h",
                "r#h#o",
                "h#o#u",
                "o#u#r",
                "u#r#)",
                "r#)#;",
                ")#;#long",
                ";#long#instant",
                "long#instant#after",
                "instant#after#=",
                "after#=#u",
                "=#u#t",
                "u#t#c",
                "t#c#to",
                "c#to#local",
                "to#local#(",
                "local#(#instant",
                "(#instant#+",
                "instant#+#3",
                "+#3#*",
                "3#*#date",
                "*#date#time",
                "date#time#constants",
                "time#constants#.",
                "constants#.#m",
                ".#m#i",
                "m#i#l",
                "i#l#l",
                "l#l#i",
                "l#i#s",
                "i#s#p",
                "s#p#e",
                "p#e#r",
                "e#r#h",
                "r#h#o",
                "h#o#u",
                "o#u#r",
                "u#r#)",
                "r#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#instant",
                "(#instant#before",
                "instant#before#==",
                "before#==#instant",
                "==#instant#after",
                "instant#after#)",
                "after#)#{",
                ")#{#return",
                "{#return#instant",
                "return#instant#;",
                "instant#;#}",
                ";#}#long",
                "}#long#local",
                "long#local#=",
                "local#=#u",
                "=#u#t",
                "u#t#c",
                "t#c#to",
                "c#to#local",
                "to#local#(",
                "local#(#instant",
                "(#instant#)",
                "instant#)#;",
                ")#;#return",
                ";#return#local",
                "return#local#to",
                "local#to#u",
                "to#u#t",
                "u#t#c",
                "t#c#(",
                "c#(#local",
                "(#local#,",
                "local#,#false",
                ",#false#,",
                "false#,#or",
                ",#or#later",
                "or#later#?",
                "later#?#instant",
                "?#instant#after",
                "instant#after#:",
                "after#:#instant",
                ":#instant#before",
                "instant#before#)",
                "before#)#;",
                ")#;#}",
                ";#}#}"
            ],
            "diffs": {
                "3": {
                    "action": "CHANGE",
                    "buggy_end_line": 4,
                    "buggy_size": 2,
                    "buggy_start_line": 3,
                    "fixed_end_line": 4,
                    "fixed_size": 2,
                    "fixed_start_line": 3
                }
            },
            "end_line": 1180,
            "exp_ins": 0,
            "exp_other": 5,
            "file_ext": ".java",
            "file_key": "Time_17_src_main_java_org_joda_time_DateTimeZone",
            "file_name": "DateTimeZone",
            "module_dir": "src/main/java/org/joda/time",
            "module_id": "Time_17",
            "module_name": "Time",
            "module_num": "17",
            "multi_chunk_key": "Time_17_src_main_java_org_joda_time_DateTimeZone_method1_adjustOffset_long_boolean",
            "ngram_score": 0.689922480620155,
            "patch": "public long adjustOffset ( long instant , boolean earlierOrLater ) { long instantBefore = instant - 3 * DateTimeConstants . MILLIS_PER_HOUR ; long instantAfter = instant + 3 * DateTimeConstants . MILLIS_PER_HOUR ; if ( instantBefore == instantAfter ) { return instant ; } long local = convertUTCToLocal ( instant ) ; return convertLocalToUTC ( local , false , earlierOrLater ? instantAfter : instantBefore ) ; }",
            "patch_index": 648,
            "per_ins": 0,
            "per_other": 2,
            "score_total": 0.695,
            "set_index": null,
            "start_line": 1163,
            "tf_token_length": 115,
            "tf_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#public",
                "{#public#long",
                "public#long#adjust",
                "long#adjust#offset",
                "adjust#offset#(",
                "offset#(#long",
                "(#long#instant",
                "long#instant#,",
                "instant#,#boolean",
                ",#boolean#or",
                "boolean#or#later",
                "or#later#)",
                "later#)#{",
                ")#{#long",
                "{#long#instant",
                "long#instant#before",
                "instant#before#=",
                "before#=#instant",
                "=#instant#-",
                "instant#-#3",
                "-#3#*",
                "3#*#date",
                "*#date#time",
                "date#time#constants",
                "time#constants#.",
                "constants#.#m",
                ".#m#i",
                "m#i#l",
                "i#l#l",
                "l#l#i",
                "l#i#s",
                "i#s#p",
                "s#p#e",
                "p#e#r",
                "e#r#h",
                "r#h#o",
                "h#o#u",
                "o#u#r",
                "u#r#;",
                "r#;#long",
                ";#long#instant",
                "long#instant#after",
                "instant#after#=",
                "after#=#instant",
                "=#instant#+",
                "instant#+#3",
                "+#3#*",
                "3#*#date",
                "*#date#time",
                "date#time#constants",
                "time#constants#.",
                "constants#.#m",
                ".#m#i",
                "m#i#l",
                "i#l#l",
                "l#l#i",
                "l#i#s",
                "i#s#p",
                "s#p#e",
                "p#e#r",
                "e#r#h",
                "r#h#o",
                "h#o#u",
                "o#u#r",
                "u#r#;",
                "r#;#if",
                ";#if#(",
                "if#(#instant",
                "(#instant#before",
                "instant#before#==",
                "before#==#instant",
                "==#instant#after",
                "instant#after#)",
                "after#)#{",
                ")#{#return",
                "{#return#instant",
                "return#instant#;",
                "instant#;#}",
                ";#}#long",
                "}#long#local",
                "long#local#=",
                "local#=#u",
                "=#u#t",
                "u#t#c",
                "t#c#to",
                "c#to#local",
                "to#local#(",
                "local#(#instant",
                "(#instant#)",
                "instant#)#;",
                ")#;#return",
                ";#return#local",
                "return#local#to",
                "local#to#u",
                "to#u#t",
                "u#t#c",
                "t#c#(",
                "c#(#local",
                "(#local#,",
                "local#,#false",
                ",#false#,",
                "false#,#or",
                ",#or#later",
                "or#later#?",
                "later#?#instant",
                "?#instant#after",
                "instant#after#:",
                "after#:#instant",
                ":#instant#before",
                "instant#before#)",
                "before#)#;",
                ")#;#}",
                ";#}#}"
            ]
        }
    }
}