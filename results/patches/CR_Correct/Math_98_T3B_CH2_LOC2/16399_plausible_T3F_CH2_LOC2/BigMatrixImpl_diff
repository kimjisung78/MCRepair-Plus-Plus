--- "/home/selab/\353\260\224\355\203\225\355\231\224\353\251\264/MCRepair2/APR_Resources/repair/combination_patches/Math_98/16399/BigMatrixImpl_Origin.java"	2023-02-22 19:28:57.857561221 +0900
+++ "/home/selab/\353\260\224\355\203\225\355\231\224\353\251\264/MCRepair2/APR_Resources/repair/combination_patches/Math_98/16399/BigMatrixImpl.java"	2023-02-22 19:28:57.857561221 +0900
@@ -982,23 +982,7 @@
      * @return this*v
      * @throws IllegalArgumentException if columnDimension != v.size()
      */
-    public BigDecimal[] operate(BigDecimal[] v) throws IllegalArgumentException {
-        if (v.length != this.getColumnDimension()) {
-            throw new IllegalArgumentException("vector has wrong length");
-        }
-        final int nRows = this.getRowDimension();
-        final int nCols = this.getColumnDimension();
-        final BigDecimal[] out = new BigDecimal[v.length];
-        for (int row = 0; row < nRows; row++) {
-            BigDecimal sum = ZERO;
-            for (int i = 0; i < nCols; i++) {
-                sum = sum.add(data[row][i].multiply(v[i]));
-            }
-            out[row] = sum;
-        }
-        return out;
-    }
-    
+public BigDecimal [ ] operate ( BigDecimal [ ] v ) throws IllegalArgumentException { if ( v . length != this . getColumnDimension ( ) ) { throw new IllegalArgumentException ( "vector has wrong length" ) ; } final int nRows = this . getRowDimension ( ) ; final int nCols = this . getColumnDimension ( ) ; final BigDecimal [ ] out = new BigDecimal [ data . length ] ; for ( int row = 0 ; row < nRows ; row ++ ) { BigDecimal sum = ZERO ; for ( int i = 0 ; i < nCols ; i ++ ) { sum = sum . add ( data [ row ] [ i ] . multiply ( v [ i ] ) ) ; } out [ row ] = sum ; } return out ; }    
     /**
      * Returns the result of multiplying this by the vector <code>v</code>.
      *
