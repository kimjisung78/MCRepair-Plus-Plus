{
    "StringUtils": {
        "0": {
            "action_judgements": null,
            "action_score": 1.0,
            "buggy_code": "public static String join ( Object [ ] array , char separator , int startIndex , int endIndex ) { if ( array == null ) { return null ; } int noOfItems = ( endIndex - startIndex ) ; if ( noOfItems <= 0 ) { return EMPTY ; }  StringBuilder buf = new StringBuilder ( ( array [ startIndex ] == null ? 16 : array [ startIndex ] . toString ( ) . length ( ) ) + 1 ) ;  for ( int i = startIndex ; i < endIndex ; i ++ ) { if ( i > startIndex ) { buf . append ( separator ) ; } if ( array [ i ] != null ) { buf . append ( array [ i ] ) ; } } return buf . toString ( ) ; }",
            "buggy_dir": "",
            "criteria_token_length": 166,
            "criteria_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#public",
                "{#public#static",
                "public#static#String",
                "static#String#join",
                "String#join#(",
                "join#(#Object",
                "(#Object#[",
                "Object#[#]",
                "[#]#array",
                "]#array#,",
                "array#,#char",
                ",#char#separator",
                "char#separator#,",
                "separator#,#int",
                ",#int#start",
                "int#start#index",
                "start#index#,",
                "index#,#int",
                ",#int#end",
                "int#end#index",
                "end#index#)",
                "index#)#{",
                ")#{#if",
                "{#if#(",
                "if#(#array",
                "(#array#==",
                "array#==#null",
                "==#null#)",
                "null#)#{",
                ")#{#return",
                "{#return#null",
                "return#null#;",
                "null#;#}",
                ";#}#int",
                "}#int#of",
                "int#of#items",
                "of#items#=",
                "items#=#(",
                "=#(#end",
                "(#end#index",
                "end#index#-",
                "index#-#start",
                "-#start#index",
                "start#index#)",
                "index#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#of",
                "(#of#items",
                "of#items#<=",
                "items#<=#0",
                "<=#0#)",
                "0#)#{",
                ")#{#return",
                "{#return#e",
                "return#e#m",
                "e#m#p",
                "m#p#t",
                "p#t#y",
                "t#y#;",
                "y#;#}",
                ";#}#string",
                "}#string#builder",
                "string#builder#buf",
                "builder#buf#=",
                "buf#=#new",
                "=#new#string",
                "new#string#builder",
                "string#builder#(",
                "builder#(#(",
                "(#(#array",
                "(#array#[",
                "array#[#start",
                "[#start#index",
                "start#index#]",
                "index#]#==",
                "]#==#null",
                "==#null#?",
                "null#?#16",
                "?#16#:",
                "16#:#array",
                ":#array#[",
                "array#[#start",
                "[#start#index",
                "start#index#]",
                "index#]#.",
                "]#.#to",
                ".#to#string",
                "to#string#(",
                "string#(#)",
                "(#)#.",
                ")#.#length",
                ".#length#(",
                "length#(#)",
                "(#)#)",
                ")#)#+",
                ")#+#1",
                "+#1#)",
                "1#)#;",
                ")#;#for",
                ";#for#(",
                "for#(#int",
                "(#int#i",
                "int#i#=",
                "i#=#start",
                "=#start#index",
                "start#index#;",
                "index#;#i",
                ";#i#<",
                "i#<#end",
                "<#end#index",
                "end#index#;",
                "index#;#i",
                ";#i#++",
                "i#++#)",
                "++#)#{",
                ")#{#if",
                "{#if#(",
                "if#(#i",
                "(#i#>",
                "i#>#start",
                ">#start#index",
                "start#index#)",
                "index#)#{",
                ")#{#buf",
                "{#buf#.",
                "buf#.#append",
                ".#append#(",
                "append#(#separator",
                "(#separator#)",
                "separator#)#;",
                ")#;#}",
                ";#}#if",
                "}#if#(",
                "if#(#array",
                "(#array#[",
                "array#[#i",
                "[#i#]",
                "i#]#!=",
                "]#!=#null",
                "!=#null#)",
                "null#)#{",
                ")#{#buf",
                "{#buf#.",
                "buf#.#append",
                ".#append#(",
                "append#(#array",
                "(#array#[",
                "array#[#i",
                "[#i#]",
                "i#]#)",
                "]#)#;",
                ")#;#}",
                ";#}#}",
                "}#}#return",
                "}#return#buf",
                "return#buf#.",
                "buf#.#to",
                ".#to#string",
                "to#string#(",
                "string#(#)",
                "(#)#;",
                ")#;#}",
                ";#}#}"
            ],
            "diffs": {
                "10": {
                    "action": "CHANGE",
                    "buggy_end_line": 10,
                    "buggy_size": 1,
                    "buggy_start_line": 10,
                    "fixed_end_line": 10,
                    "fixed_size": 1,
                    "fixed_start_line": 10
                }
            },
            "end_line": 3309,
            "exp_ins": 0,
            "exp_other": 1,
            "file_ext": ".java",
            "file_key": "Lang_20_src_main_java_org_apache_commons_lang3_StringUtils",
            "file_name": "StringUtils",
            "module_dir": "src/main/java/org/apache/commons/lang3",
            "module_id": "Lang_20",
            "module_name": "Lang",
            "module_num": "20",
            "multi_chunk_key": "Lang_20_src_main_java_org_apache_commons_lang3_StringUtils_method1_join_Object[]_char_int_int",
            "ngram_score": 0.7951807228915663,
            "patch": "public static String join ( Object [ ] array , char separator , int startIndex , int endIndex ) { if ( array == null ) { return null ; } int noOfItems = ( endIndex - startIndex ) ; if ( noOfItems <= 0 ) { return EMPTY ; } StringBuilder buf = new StringBuilder ( array [ startIndex ] == null ? 16 : array . toString ( ) . length ( ) ) ; for ( int i = startIndex ; i < endIndex ; i ++ ) { if ( i > startIndex ) { buf . append ( separator ) ; } if ( array [ i ] != null ) { buf . append ( array [ i ] ) ; } } return buf . toString ( ) ; }",
            "patch_index": 377,
            "per_ins": 0,
            "per_other": 1,
            "score_total": 0.898,
            "set_index": null,
            "start_line": 3289,
            "tf_token_length": 158,
            "tf_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#public",
                "{#public#static",
                "public#static#String",
                "static#String#join",
                "String#join#(",
                "join#(#Object",
                "(#Object#[",
                "Object#[#]",
                "[#]#array",
                "]#array#,",
                "array#,#char",
                ",#char#separator",
                "char#separator#,",
                "separator#,#int",
                ",#int#start",
                "int#start#index",
                "start#index#,",
                "index#,#int",
                ",#int#end",
                "int#end#index",
                "end#index#)",
                "index#)#{",
                ")#{#if",
                "{#if#(",
                "if#(#array",
                "(#array#==",
                "array#==#null",
                "==#null#)",
                "null#)#{",
                ")#{#return",
                "{#return#null",
                "return#null#;",
                "null#;#}",
                ";#}#int",
                "}#int#of",
                "int#of#items",
                "of#items#=",
                "items#=#(",
                "=#(#end",
                "(#end#index",
                "end#index#-",
                "index#-#start",
                "-#start#index",
                "start#index#)",
                "index#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#of",
                "(#of#items",
                "of#items#<=",
                "items#<=#0",
                "<=#0#)",
                "0#)#{",
                ")#{#return",
                "{#return#e",
                "return#e#m",
                "e#m#p",
                "m#p#t",
                "p#t#y",
                "t#y#;",
                "y#;#}",
                ";#}#string",
                "}#string#builder",
                "string#builder#buf",
                "builder#buf#=",
                "buf#=#new",
                "=#new#string",
                "new#string#builder",
                "string#builder#(",
                "builder#(#array",
                "(#array#[",
                "array#[#start",
                "[#start#index",
                "start#index#]",
                "index#]#==",
                "]#==#null",
                "==#null#?",
                "null#?#16",
                "?#16#:",
                "16#:#array",
                ":#array#.",
                "array#.#to",
                ".#to#string",
                "to#string#(",
                "string#(#)",
                "(#)#.",
                ")#.#length",
                ".#length#(",
                "length#(#)",
                "(#)#)",
                ")#)#;",
                ")#;#for",
                ";#for#(",
                "for#(#int",
                "(#int#i",
                "int#i#=",
                "i#=#start",
                "=#start#index",
                "start#index#;",
                "index#;#i",
                ";#i#<",
                "i#<#end",
                "<#end#index",
                "end#index#;",
                "index#;#i",
                ";#i#++",
                "i#++#)",
                "++#)#{",
                ")#{#if",
                "{#if#(",
                "if#(#i",
                "(#i#>",
                "i#>#start",
                ">#start#index",
                "start#index#)",
                "index#)#{",
                ")#{#buf",
                "{#buf#.",
                "buf#.#append",
                ".#append#(",
                "append#(#separator",
                "(#separator#)",
                "separator#)#;",
                ")#;#}",
                ";#}#if",
                "}#if#(",
                "if#(#array",
                "(#array#[",
                "array#[#i",
                "[#i#]",
                "i#]#!=",
                "]#!=#null",
                "!=#null#)",
                "null#)#{",
                ")#{#buf",
                "{#buf#.",
                "buf#.#append",
                ".#append#(",
                "append#(#array",
                "(#array#[",
                "array#[#i",
                "[#i#]",
                "i#]#)",
                "]#)#;",
                ")#;#}",
                ";#}#}",
                "}#}#return",
                "}#return#buf",
                "return#buf#.",
                "buf#.#to",
                ".#to#string",
                "to#string#(",
                "string#(#)",
                "(#)#;",
                ")#;#}",
                ";#}#}"
            ]
        },
        "1": {
            "action_judgements": null,
            "action_score": 1.0,
            "buggy_code": "public static String join ( Object [ ] array , String separator , int startIndex , int endIndex ) { if ( array == null ) { return null ; } if ( separator == null ) { separator = EMPTY ; } int noOfItems = ( endIndex - startIndex ) ; if ( noOfItems <= 0 ) { return EMPTY ; }  StringBuilder buf = new StringBuilder ( ( array [ startIndex ] == null ? 16 : array [ startIndex ] . toString ( ) . length ( ) ) + separator . length ( ) ) ;  for ( int i = startIndex ; i < endIndex ; i ++ ) { if ( i > startIndex ) { buf . append ( separator ) ; } if ( array [ i ] != null ) { buf . append ( array [ i ] ) ; } } return buf . toString ( ) ; }",
            "buggy_dir": "",
            "criteria_token_length": 186,
            "criteria_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#public",
                "{#public#static",
                "public#static#String",
                "static#String#join",
                "String#join#(",
                "join#(#Object",
                "(#Object#[",
                "Object#[#]",
                "[#]#array",
                "]#array#,",
                "array#,#String",
                ",#String#separator",
                "String#separator#,",
                "separator#,#int",
                ",#int#start",
                "int#start#index",
                "start#index#,",
                "index#,#int",
                ",#int#end",
                "int#end#index",
                "end#index#)",
                "index#)#{",
                ")#{#if",
                "{#if#(",
                "if#(#array",
                "(#array#==",
                "array#==#null",
                "==#null#)",
                "null#)#{",
                ")#{#return",
                "{#return#null",
                "return#null#;",
                "null#;#}",
                ";#}#if",
                "}#if#(",
                "if#(#separator",
                "(#separator#==",
                "separator#==#null",
                "==#null#)",
                "null#)#{",
                ")#{#separator",
                "{#separator#=",
                "separator#=#e",
                "=#e#m",
                "e#m#p",
                "m#p#t",
                "p#t#y",
                "t#y#;",
                "y#;#}",
                ";#}#int",
                "}#int#of",
                "int#of#items",
                "of#items#=",
                "items#=#(",
                "=#(#end",
                "(#end#index",
                "end#index#-",
                "index#-#start",
                "-#start#index",
                "start#index#)",
                "index#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#of",
                "(#of#items",
                "of#items#<=",
                "items#<=#0",
                "<=#0#)",
                "0#)#{",
                ")#{#return",
                "{#return#e",
                "return#e#m",
                "e#m#p",
                "m#p#t",
                "p#t#y",
                "t#y#;",
                "y#;#}",
                ";#}#string",
                "}#string#builder",
                "string#builder#buf",
                "builder#buf#=",
                "buf#=#new",
                "=#new#string",
                "new#string#builder",
                "string#builder#(",
                "builder#(#(",
                "(#(#array",
                "(#array#[",
                "array#[#start",
                "[#start#index",
                "start#index#]",
                "index#]#==",
                "]#==#null",
                "==#null#?",
                "null#?#16",
                "?#16#:",
                "16#:#array",
                ":#array#[",
                "array#[#start",
                "[#start#index",
                "start#index#]",
                "index#]#.",
                "]#.#to",
                ".#to#string",
                "to#string#(",
                "string#(#)",
                "(#)#.",
                ")#.#length",
                ".#length#(",
                "length#(#)",
                "(#)#)",
                ")#)#+",
                ")#+#separator",
                "+#separator#.",
                "separator#.#length",
                ".#length#(",
                "length#(#)",
                "(#)#)",
                ")#)#;",
                ")#;#for",
                ";#for#(",
                "for#(#int",
                "(#int#i",
                "int#i#=",
                "i#=#start",
                "=#start#index",
                "start#index#;",
                "index#;#i",
                ";#i#<",
                "i#<#end",
                "<#end#index",
                "end#index#;",
                "index#;#i",
                ";#i#++",
                "i#++#)",
                "++#)#{",
                ")#{#if",
                "{#if#(",
                "if#(#i",
                "(#i#>",
                "i#>#start",
                ">#start#index",
                "start#index#)",
                "index#)#{",
                ")#{#buf",
                "{#buf#.",
                "buf#.#append",
                ".#append#(",
                "append#(#separator",
                "(#separator#)",
                "separator#)#;",
                ")#;#}",
                ";#}#if",
                "}#if#(",
                "if#(#array",
                "(#array#[",
                "array#[#i",
                "[#i#]",
                "i#]#!=",
                "]#!=#null",
                "!=#null#)",
                "null#)#{",
                ")#{#buf",
                "{#buf#.",
                "buf#.#append",
                ".#append#(",
                "append#(#array",
                "(#array#[",
                "array#[#i",
                "[#i#]",
                "i#]#)",
                "]#)#;",
                ")#;#}",
                ";#}#}",
                "}#}#return",
                "}#return#buf",
                "return#buf#.",
                "buf#.#to",
                ".#to#string",
                "to#string#(",
                "string#(#)",
                "(#)#;",
                ")#;#}",
                ";#}#}"
            ],
            "diffs": {
                "13": {
                    "action": "CHANGE",
                    "buggy_end_line": 13,
                    "buggy_size": 1,
                    "buggy_start_line": 13,
                    "fixed_end_line": 13,
                    "fixed_size": 1,
                    "fixed_start_line": 13
                }
            },
            "end_line": 3394,
            "exp_ins": 0,
            "exp_other": 1,
            "file_ext": ".java",
            "file_key": "Lang_20_src_main_java_org_apache_commons_lang3_StringUtils",
            "file_name": "StringUtils",
            "module_dir": "src/main/java/org/apache/commons/lang3",
            "module_id": "Lang_20",
            "module_name": "Lang",
            "module_num": "20",
            "multi_chunk_key": "Lang_20_src_main_java_org_apache_commons_lang3_StringUtils_method1_join_Object[]_String_int_int",
            "ngram_score": 0.7526881720430108,
            "patch": "public static String join ( Object [ ] array , String separator , int startIndex , int endIndex ) { if ( array == null ) { return null ; } if ( separator == null ) { separator = EMPTY ; } int noOfItems = ( endIndex - startIndex ) ; if ( noOfItems <= 0 ) { return EMPTY ; } StringBuilder buf = new StringBuilder ( array [ startIndex ] == null ? 16 : array . toString ( ) . length ( ) ) ; for ( int i = startIndex ; i < endIndex ; i ++ ) { if ( i > startIndex ) { buf . append ( separator ) ; } if ( array [ i ] != null ) { buf . append ( array [ i ] ) ; } } return buf . toString ( ) ; }",
            "patch_index": 394,
            "per_ins": 0,
            "per_other": 1,
            "score_total": 0.876,
            "set_index": null,
            "start_line": 3368,
            "tf_token_length": 174,
            "tf_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#public",
                "{#public#static",
                "public#static#String",
                "static#String#join",
                "String#join#(",
                "join#(#Object",
                "(#Object#[",
                "Object#[#]",
                "[#]#array",
                "]#array#,",
                "array#,#String",
                ",#String#separator",
                "String#separator#,",
                "separator#,#int",
                ",#int#start",
                "int#start#index",
                "start#index#,",
                "index#,#int",
                ",#int#end",
                "int#end#index",
                "end#index#)",
                "index#)#{",
                ")#{#if",
                "{#if#(",
                "if#(#array",
                "(#array#==",
                "array#==#null",
                "==#null#)",
                "null#)#{",
                ")#{#return",
                "{#return#null",
                "return#null#;",
                "null#;#}",
                ";#}#if",
                "}#if#(",
                "if#(#separator",
                "(#separator#==",
                "separator#==#null",
                "==#null#)",
                "null#)#{",
                ")#{#separator",
                "{#separator#=",
                "separator#=#e",
                "=#e#m",
                "e#m#p",
                "m#p#t",
                "p#t#y",
                "t#y#;",
                "y#;#}",
                ";#}#int",
                "}#int#of",
                "int#of#items",
                "of#items#=",
                "items#=#(",
                "=#(#end",
                "(#end#index",
                "end#index#-",
                "index#-#start",
                "-#start#index",
                "start#index#)",
                "index#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#of",
                "(#of#items",
                "of#items#<=",
                "items#<=#0",
                "<=#0#)",
                "0#)#{",
                ")#{#return",
                "{#return#e",
                "return#e#m",
                "e#m#p",
                "m#p#t",
                "p#t#y",
                "t#y#;",
                "y#;#}",
                ";#}#string",
                "}#string#builder",
                "string#builder#buf",
                "builder#buf#=",
                "buf#=#new",
                "=#new#string",
                "new#string#builder",
                "string#builder#(",
                "builder#(#array",
                "(#array#[",
                "array#[#start",
                "[#start#index",
                "start#index#]",
                "index#]#==",
                "]#==#null",
                "==#null#?",
                "null#?#16",
                "?#16#:",
                "16#:#array",
                ":#array#.",
                "array#.#to",
                ".#to#string",
                "to#string#(",
                "string#(#)",
                "(#)#.",
                ")#.#length",
                ".#length#(",
                "length#(#)",
                "(#)#)",
                ")#)#;",
                ")#;#for",
                ";#for#(",
                "for#(#int",
                "(#int#i",
                "int#i#=",
                "i#=#start",
                "=#start#index",
                "start#index#;",
                "index#;#i",
                ";#i#<",
                "i#<#end",
                "<#end#index",
                "end#index#;",
                "index#;#i",
                ";#i#++",
                "i#++#)",
                "++#)#{",
                ")#{#if",
                "{#if#(",
                "if#(#i",
                "(#i#>",
                "i#>#start",
                ">#start#index",
                "start#index#)",
                "index#)#{",
                ")#{#buf",
                "{#buf#.",
                "buf#.#append",
                ".#append#(",
                "append#(#separator",
                "(#separator#)",
                "separator#)#;",
                ")#;#}",
                ";#}#if",
                "}#if#(",
                "if#(#array",
                "(#array#[",
                "array#[#i",
                "[#i#]",
                "i#]#!=",
                "]#!=#null",
                "!=#null#)",
                "null#)#{",
                ")#{#buf",
                "{#buf#.",
                "buf#.#append",
                ".#append#(",
                "append#(#array",
                "(#array#[",
                "array#[#i",
                "[#i#]",
                "i#]#)",
                "]#)#;",
                ")#;#}",
                ";#}#}",
                "}#}#return",
                "}#return#buf",
                "return#buf#.",
                "buf#.#to",
                ".#to#string",
                "to#string#(",
                "string#(#)",
                "(#)#;",
                ")#;#}",
                ";#}#}"
            ]
        }
    }
}