--- "/home/selab/\353\260\224\355\203\225\355\231\224\353\251\264/MCRepair2/APR_Resources/repair/combination_patches/Lang_20/11616/StringUtils_Origin.java"	2023-02-22 15:47:24.183757814 +0900
+++ "/home/selab/\353\260\224\355\203\225\355\231\224\353\251\264/MCRepair2/APR_Resources/repair/combination_patches/Lang_20/11616/StringUtils.java"	2023-02-22 15:47:24.191757886 +0900
@@ -3286,28 +3286,7 @@
      * @return the joined String, {@code null} if null array input
      * @since 2.0
      */
-    public static String join(Object[] array, char separator, int startIndex, int endIndex) {
-        if (array == null) {
-            return null;
-        }
-        int noOfItems = (endIndex - startIndex);
-        if (noOfItems <= 0) {
-            return EMPTY;
-        }
-        
-        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);
-
-        for (int i = startIndex; i < endIndex; i++) {
-            if (i > startIndex) {
-                buf.append(separator);
-            }
-            if (array[i] != null) {
-                buf.append(array[i]);
-            }
-        }
-        return buf.toString();
-    }
-
+public static String join ( Object [ ] array , char separator , int startIndex , int endIndex ) { if ( array == null ) { return null ; } int noOfItems = ( endIndex - startIndex ) ; if ( noOfItems <= 0 ) { return EMPTY ; } StringBuilder buf = new StringBuilder ( array [ startIndex ] == null ? 16 : array . toString ( ) . length ( ) ) ; for ( int i = startIndex ; i < endIndex ; i ++ ) { if ( i > startIndex ) { buf . append ( separator ) ; } if ( array [ i ] != null ) { buf . append ( array [ i ] ) ; } } return buf . toString ( ) ; }
     /**
      * <p>Joins the elements of the provided array into a single String
      * containing the provided list of elements.</p>
@@ -3365,34 +3344,7 @@
      * an error to pass in an end index past the end of the array
      * @return the joined String, {@code null} if null array input
      */
-    public static String join(Object[] array, String separator, int startIndex, int endIndex) {
-        if (array == null) {
-            return null;
-        }
-        if (separator == null) {
-            separator = EMPTY;
-        }
-
-        // endIndex - startIndex > 0:   Len = NofStrings *(len(firstString) + len(separator))
-        //           (Assuming that all Strings are roughly equally long)
-        int noOfItems = (endIndex - startIndex);
-        if (noOfItems <= 0) {
-            return EMPTY;
-        }
-
-        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + separator.length());
-
-        for (int i = startIndex; i < endIndex; i++) {
-            if (i > startIndex) {
-                buf.append(separator);
-            }
-            if (array[i] != null) {
-                buf.append(array[i]);
-            }
-        }
-        return buf.toString();
-    }
-
+public static String join ( Object [ ] array , String separator , int startIndex , int endIndex ) { if ( array == null ) { return null ; } if ( separator == null ) { separator = EMPTY ; } int noOfItems = ( endIndex - startIndex ) ; if ( noOfItems <= 0 ) { return EMPTY ; } StringBuilder buf = new StringBuilder ( array [ startIndex ] == null ? 16 : array . toString ( ) . length ( ) ) ; for ( int i = startIndex ; i < endIndex ; i ++ ) { if ( i > startIndex ) { buf . append ( separator ) ; } if ( array [ i ] != null ) { buf . append ( array [ i ] ) ; } } return buf . toString ( ) ; }
     /**
      * <p>Joins the elements of the provided {@code Iterator} into
      * a single String containing the provided elements.</p>
