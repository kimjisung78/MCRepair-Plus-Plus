--- "/home/selab/\353\260\224\355\203\225\355\231\224\353\251\264/MCRepair2/APR_Resources/repair/combination_patches/Math_79/120/MathUtils_Origin.java"	2023-02-22 19:03:46.480401509 +0900
+++ "/home/selab/\353\260\224\355\203\225\355\231\224\353\251\264/MCRepair2/APR_Resources/repair/combination_patches/Math_79/120/MathUtils.java"	2023-02-22 19:03:46.480401509 +0900
@@ -1620,15 +1620,7 @@
      * @param p2 the second point
      * @return the L<sub>2</sub> distance between the two points
      */
-    public static double distance(int[] p1, int[] p2) {
-      int sum = 0;
-      for (int i = 0; i < p1.length; i++) {
-          final int dp = p1[i] - p2[i];
-          sum += dp * dp;
-      }
-      return Math.sqrt(sum);
-    }
-
+public static double distance ( int [ ] p1 , int [ ] p2 ) { float sum = 0 ; for ( int i = 0 ; i < p1 . length ; i ++ ) { final double dp = p1 [ i ] - p2 [ i ] ; sum += dp * dp ; } return Math . sqrt ( sum ) ; }
     /**
      * Calculates the L<sub>&infin;</sub> (max of abs) distance between two points.
      *
