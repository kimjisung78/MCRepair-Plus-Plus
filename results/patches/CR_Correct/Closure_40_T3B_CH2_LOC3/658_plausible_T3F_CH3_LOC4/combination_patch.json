{
    "NameAnalyzer": {
        "0": {
            "action_judgements": null,
            "action_score": 0.875,
            "buggy_code": "@ Override public void visit ( NodeTraversal t , Node n , Node parent ) { if ( t . inGlobalScope ( ) ) { if ( NodeUtil . isVarDeclaration ( n ) ) { NameInformation ns = createNameInformation ( t , n , parent ) ; Preconditions . checkNotNull ( ns ) ; recordSet ( ns . name , n ) ; } else if ( NodeUtil . isFunctionDeclaration ( n ) ) { Node nameNode = n . getFirstChild ( ) ; NameInformation ns = createNameInformation ( t , nameNode , n ) ; if ( ns != null ) { JsName nameInfo = getName ( nameNode . getString ( ) , true ) ; recordSet ( nameInfo . name , nameNode ) ; } } else if ( NodeUtil . isObjectLitKey ( n , parent ) ) { NameInformation ns = createNameInformation ( t , n , parent ) ; if ( ns != null ) { recordSet ( ns . name , n ) ; } } } if ( n . isAssign ( ) ) { Node nameNode = n . getFirstChild ( ) ; NameInformation ns = createNameInformation ( t , nameNode , n ) ; if ( ns != null ) { if ( ns . isPrototype ) { recordPrototypeSet ( ns . prototypeClass , ns . prototypeProperty , n ) ; } else { recordSet ( ns . name , nameNode ) ; } } } else if ( n . isCall ( ) ) { Node nameNode = n . getFirstChild ( ) ; NameInformation ns = createNameInformation ( t , nameNode , n ) ; if ( ns != null && ns . onlyAffectsClassDef ) {  JsName name = getName ( ns . name , false ) ;   if ( name != null ) {  refNodes . add ( new ClassDefiningFunctionNode ( name , n , parent , parent . getParent ( ) ) ) ;  }  } } }",
            "buggy_dir": "",
            "criteria_token_length": 389,
            "criteria_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#@",
                "{#@#Override",
                "@#Override#public",
                "Override#public#void",
                "public#void#visit",
                "void#visit#(",
                "visit#(#node",
                "(#node#traversal",
                "node#traversal#t",
                "traversal#t#,",
                "t#,#Node",
                ",#Node#n",
                "Node#n#,",
                "n#,#Node",
                ",#Node#parent",
                "Node#parent#)",
                "parent#)#{",
                ")#{#if",
                "{#if#(",
                "if#(#t",
                "(#t#.",
                "t#.#global",
                ".#global#scope",
                "global#scope#(",
                "scope#(#)",
                "(#)#)",
                ")#)#{",
                ")#{#if",
                "{#if#(",
                "if#(#node",
                "(#node#util",
                "node#util#.",
                "util#.#var",
                ".#var#declaration",
                "var#declaration#(",
                "declaration#(#n",
                "(#n#)",
                "n#)#)",
                ")#)#{",
                ")#{#name",
                "{#name#information",
                "name#information#ns",
                "information#ns#=",
                "ns#=#name",
                "=#name#information",
                "name#information#(",
                "information#(#t",
                "(#t#,",
                "t#,#n",
                ",#n#,",
                "n#,#parent",
                ",#parent#)",
                "parent#)#;",
                ")#;#Preconditions",
                ";#Preconditions#.",
                "Preconditions#.#not",
                ".#not#null",
                "not#null#(",
                "null#(#ns",
                "(#ns#)",
                "ns#)#;",
                ")#;#record",
                ";#record#set",
                "record#set#(",
                "set#(#ns",
                "(#ns#.",
                "ns#.#name",
                ".#name#,",
                "name#,#n",
                ",#n#)",
                "n#)#;",
                ")#;#}",
                ";#}#else",
                "}#else#if",
                "else#if#(",
                "if#(#node",
                "(#node#util",
                "node#util#.",
                "util#.#function",
                ".#function#declaration",
                "function#declaration#(",
                "declaration#(#n",
                "(#n#)",
                "n#)#)",
                ")#)#{",
                ")#{#Node",
                "{#Node#name",
                "Node#name#node",
                "name#node#=",
                "node#=#n",
                "=#n#.",
                "n#.#first",
                ".#first#child",
                "first#child#(",
                "child#(#)",
                "(#)#;",
                ")#;#name",
                ";#name#information",
                "name#information#ns",
                "information#ns#=",
                "ns#=#name",
                "=#name#information",
                "name#information#(",
                "information#(#t",
                "(#t#,",
                "t#,#name",
                ",#name#node",
                "name#node#,",
                "node#,#n",
                ",#n#)",
                "n#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#ns",
                "(#ns#!=",
                "ns#!=#null",
                "!=#null#)",
                "null#)#{",
                ")#{#js",
                "{#js#name",
                "js#name#name",
                "name#name#info",
                "name#info#=",
                "info#=#get",
                "=#get#name",
                "get#name#(",
                "name#(#name",
                "(#name#node",
                "name#node#.",
                "node#.#get",
                ".#get#string",
                "get#string#(",
                "string#(#)",
                "(#)#,",
                ")#,#true",
                ",#true#)",
                "true#)#;",
                ")#;#record",
                ";#record#set",
                "record#set#(",
                "set#(#name",
                "(#name#info",
                "name#info#.",
                "info#.#name",
                ".#name#,",
                "name#,#name",
                ",#name#node",
                "name#node#)",
                "node#)#;",
                ")#;#}",
                ";#}#}",
                "}#}#else",
                "}#else#if",
                "else#if#(",
                "if#(#node",
                "(#node#util",
                "node#util#.",
                "util#.#object",
                ".#object#lit",
                "object#lit#key",
                "lit#key#(",
                "key#(#n",
                "(#n#,",
                "n#,#parent",
                ",#parent#)",
                "parent#)#)",
                ")#)#{",
                ")#{#name",
                "{#name#information",
                "name#information#ns",
                "information#ns#=",
                "ns#=#name",
                "=#name#information",
                "name#information#(",
                "information#(#t",
                "(#t#,",
                "t#,#n",
                ",#n#,",
                "n#,#parent",
                ",#parent#)",
                "parent#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#ns",
                "(#ns#!=",
                "ns#!=#null",
                "!=#null#)",
                "null#)#{",
                ")#{#record",
                "{#record#set",
                "record#set#(",
                "set#(#ns",
                "(#ns#.",
                "ns#.#name",
                ".#name#,",
                "name#,#n",
                ",#n#)",
                "n#)#;",
                ")#;#}",
                ";#}#}",
                "}#}#}",
                "}#}#if",
                "}#if#(",
                "if#(#n",
                "(#n#.",
                "n#.#is",
                ".#is#assign",
                "is#assign#(",
                "assign#(#)",
                "(#)#)",
                ")#)#{",
                ")#{#Node",
                "{#Node#name",
                "Node#name#node",
                "name#node#=",
                "node#=#n",
                "=#n#.",
                "n#.#first",
                ".#first#child",
                "first#child#(",
                "child#(#)",
                "(#)#;",
                ")#;#name",
                ";#name#information",
                "name#information#ns",
                "information#ns#=",
                "ns#=#name",
                "=#name#information",
                "name#information#(",
                "information#(#t",
                "(#t#,",
                "t#,#name",
                ",#name#node",
                "name#node#,",
                "node#,#n",
                ",#n#)",
                "n#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#ns",
                "(#ns#!=",
                "ns#!=#null",
                "!=#null#)",
                "null#)#{",
                ")#{#if",
                "{#if#(",
                "if#(#ns",
                "(#ns#.",
                "ns#.#is",
                ".#is#prototype",
                "is#prototype#)",
                "prototype#)#{",
                ")#{#prototype",
                "{#prototype#set",
                "prototype#set#(",
                "set#(#ns",
                "(#ns#.",
                "ns#.#prototype",
                ".#prototype#class",
                "prototype#class#,",
                "class#,#ns",
                ",#ns#.",
                "ns#.#prototype",
                ".#prototype#property",
                "prototype#property#,",
                "property#,#n",
                ",#n#)",
                "n#)#;",
                ")#;#}",
                ";#}#else",
                "}#else#{",
                "else#{#record",
                "{#record#set",
                "record#set#(",
                "set#(#ns",
                "(#ns#.",
                "ns#.#name",
                ".#name#,",
                "name#,#name",
                ",#name#node",
                "name#node#)",
                "node#)#;",
                ")#;#}",
                ";#}#}",
                "}#}#}",
                "}#}#else",
                "}#else#if",
                "else#if#(",
                "if#(#n",
                "(#n#.",
                "n#.#is",
                ".#is#call",
                "is#call#(",
                "call#(#)",
                "(#)#)",
                ")#)#{",
                ")#{#Node",
                "{#Node#name",
                "Node#name#node",
                "name#node#=",
                "node#=#n",
                "=#n#.",
                "n#.#first",
                ".#first#child",
                "first#child#(",
                "child#(#)",
                "(#)#;",
                ")#;#name",
                ";#name#information",
                "name#information#ns",
                "information#ns#=",
                "ns#=#name",
                "=#name#information",
                "name#information#(",
                "information#(#t",
                "(#t#,",
                "t#,#name",
                ",#name#node",
                "name#node#,",
                "node#,#n",
                ",#n#)",
                "n#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#ns",
                "(#ns#!=",
                "ns#!=#null",
                "!=#null#&&",
                "null#&&#ns",
                "&&#ns#.",
                "ns#.#affects",
                ".#affects#class",
                "affects#class#def",
                "class#def#)",
                "def#)#{",
                ")#{#js",
                "{#js#name",
                "js#name#name",
                "name#name#=",
                "name#=#get",
                "=#get#name",
                "get#name#(",
                "name#(#ns",
                "(#ns#.",
                "ns#.#name",
                ".#name#,",
                "name#,#false",
                ",#false#)",
                "false#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#name",
                "(#name#!=",
                "name#!=#null",
                "!=#null#)",
                "null#)#{",
                ")#{#ref",
                "{#ref#nodes",
                "ref#nodes#.",
                "nodes#.#add",
                ".#add#(",
                "add#(#new",
                "(#new#class",
                "new#class#defining",
                "class#defining#function",
                "defining#function#node",
                "function#node#(",
                "node#(#name",
                "(#name#,",
                "name#,#n",
                ",#n#,",
                "n#,#parent",
                ",#parent#,",
                "parent#,#parent",
                ",#parent#.",
                "parent#.#get",
                ".#get#parent",
                "get#parent#(",
                "parent#(#)",
                "(#)#)",
                ")#)#)",
                ")#)#;",
                ")#;#}",
                ";#}#}",
                "}#}#}",
                "}#}#}",
                "}#}#}"
            ],
            "diffs": {
                "2": {
                    "action": "DELETE",
                    "buggy_end_line": 2,
                    "buggy_size": 1,
                    "buggy_start_line": 2,
                    "fixed_end_line": 2,
                    "fixed_size": 0,
                    "fixed_start_line": 2
                },
                "37": {
                    "action": "CHANGE",
                    "buggy_end_line": 38,
                    "buggy_size": 2,
                    "buggy_start_line": 37,
                    "fixed_end_line": 37,
                    "fixed_size": 2,
                    "fixed_start_line": 36
                },
                "40": {
                    "action": "DELETE",
                    "buggy_end_line": 40,
                    "buggy_size": 1,
                    "buggy_start_line": 40,
                    "fixed_end_line": 39,
                    "fixed_size": 0,
                    "fixed_start_line": 39
                }
            },
            "end_line": 642,
            "exp_ins": 0,
            "exp_other": 3,
            "file_ext": ".java",
            "file_key": "Closure_40_src_com_google_javascript_jscomp_NameAnalyzer",
            "file_name": "NameAnalyzer",
            "module_dir": "src/com/google/javascript/jscomp",
            "module_id": "Closure_40",
            "module_name": "Closure",
            "module_num": "40",
            "multi_chunk_key": "Closure_40_src_com_google_javascript_jscomp_NameAnalyzer_method15_visit_NodeTraversal_Node_Node",
            "ngram_score": 0.506426735218509,
            "patch": "public void visit ( NodeTraversal t , Node n , Node parent ) { if ( t . inGlobalScope ( ) ) { if ( NodeUtil . isVarDeclaration ( n ) ) { NameInformation ns = createNameInformation ( t , n , parent ) ; Preconditions . checkNotNull ( ns ) ; recordSet ( ns . name , n ) ; } else if ( NodeUtil . isFunctionDeclaration ( n ) ) { Node nameNode = n . getFirstChild ( ) ; NameInformation ns = createNameInformation ( t , nameNode , n ) ; if ( ns != null ) { JsName nameInfo = getName ( nameNode . getString ( ) , true ) ; recordSet ( nameInfo . name , nameNode ) ; } } else if ( NodeUtil . isObjectLitKey ( n , parent ) ) { NameInformation ns = createNameInformation ( t , n , parent ) ; if ( ns != null ) { recordSet ( ns . name , n ) ; } } } if ( n . isAssign ( ) ) { Node nameNode = n . getFirstChild ( ) ; NameInformation ns = createNameInformation ( t , nameNode , n ) ; if ( ns != null ) { if ( ns . isPrototype ) { recordPrototypeSet ( ns . prototypeClass , ns . prototypeProperty , n ) ; } else { recordSet ( ns . name , nameNode ) ; } } } else if ( n . isCall ( ) ) { Node nameNode = n . getFirstChild ( ) ; NameInformation ns = createNameInformation ( t , nameNode , n ) ; if ( ns != null && ns . onlyAffectsClassDef ) { JsName name = getName ( ns . name , true ) ; if ( name != null ) refNodes . add ( new ClassDefiningFunctionNode ( name , n , parent , parent . getParent ( ) ) ) ; } } }",
            "patch_index": 527,
            "per_ins": 0,
            "per_other": 4,
            "score_total": 0.691,
            "set_index": null,
            "start_line": 595,
            "tf_token_length": 385,
            "tf_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#public",
                "{#public#void",
                "public#void#visit",
                "void#visit#(",
                "visit#(#node",
                "(#node#traversal",
                "node#traversal#t",
                "traversal#t#,",
                "t#,#Node",
                ",#Node#n",
                "Node#n#,",
                "n#,#Node",
                ",#Node#parent",
                "Node#parent#)",
                "parent#)#{",
                ")#{#if",
                "{#if#(",
                "if#(#t",
                "(#t#.",
                "t#.#global",
                ".#global#scope",
                "global#scope#(",
                "scope#(#)",
                "(#)#)",
                ")#)#{",
                ")#{#if",
                "{#if#(",
                "if#(#node",
                "(#node#util",
                "node#util#.",
                "util#.#var",
                ".#var#declaration",
                "var#declaration#(",
                "declaration#(#n",
                "(#n#)",
                "n#)#)",
                ")#)#{",
                ")#{#name",
                "{#name#information",
                "name#information#ns",
                "information#ns#=",
                "ns#=#name",
                "=#name#information",
                "name#information#(",
                "information#(#t",
                "(#t#,",
                "t#,#n",
                ",#n#,",
                "n#,#parent",
                ",#parent#)",
                "parent#)#;",
                ")#;#Preconditions",
                ";#Preconditions#.",
                "Preconditions#.#not",
                ".#not#null",
                "not#null#(",
                "null#(#ns",
                "(#ns#)",
                "ns#)#;",
                ")#;#record",
                ";#record#set",
                "record#set#(",
                "set#(#ns",
                "(#ns#.",
                "ns#.#name",
                ".#name#,",
                "name#,#n",
                ",#n#)",
                "n#)#;",
                ")#;#}",
                ";#}#else",
                "}#else#if",
                "else#if#(",
                "if#(#node",
                "(#node#util",
                "node#util#.",
                "util#.#function",
                ".#function#declaration",
                "function#declaration#(",
                "declaration#(#n",
                "(#n#)",
                "n#)#)",
                ")#)#{",
                ")#{#Node",
                "{#Node#name",
                "Node#name#node",
                "name#node#=",
                "node#=#n",
                "=#n#.",
                "n#.#first",
                ".#first#child",
                "first#child#(",
                "child#(#)",
                "(#)#;",
                ")#;#name",
                ";#name#information",
                "name#information#ns",
                "information#ns#=",
                "ns#=#name",
                "=#name#information",
                "name#information#(",
                "information#(#t",
                "(#t#,",
                "t#,#name",
                ",#name#node",
                "name#node#,",
                "node#,#n",
                ",#n#)",
                "n#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#ns",
                "(#ns#!=",
                "ns#!=#null",
                "!=#null#)",
                "null#)#{",
                ")#{#js",
                "{#js#name",
                "js#name#name",
                "name#name#info",
                "name#info#=",
                "info#=#get",
                "=#get#name",
                "get#name#(",
                "name#(#name",
                "(#name#node",
                "name#node#.",
                "node#.#get",
                ".#get#string",
                "get#string#(",
                "string#(#)",
                "(#)#,",
                ")#,#true",
                ",#true#)",
                "true#)#;",
                ")#;#record",
                ";#record#set",
                "record#set#(",
                "set#(#name",
                "(#name#info",
                "name#info#.",
                "info#.#name",
                ".#name#,",
                "name#,#name",
                ",#name#node",
                "name#node#)",
                "node#)#;",
                ")#;#}",
                ";#}#}",
                "}#}#else",
                "}#else#if",
                "else#if#(",
                "if#(#node",
                "(#node#util",
                "node#util#.",
                "util#.#object",
                ".#object#lit",
                "object#lit#key",
                "lit#key#(",
                "key#(#n",
                "(#n#,",
                "n#,#parent",
                ",#parent#)",
                "parent#)#)",
                ")#)#{",
                ")#{#name",
                "{#name#information",
                "name#information#ns",
                "information#ns#=",
                "ns#=#name",
                "=#name#information",
                "name#information#(",
                "information#(#t",
                "(#t#,",
                "t#,#n",
                ",#n#,",
                "n#,#parent",
                ",#parent#)",
                "parent#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#ns",
                "(#ns#!=",
                "ns#!=#null",
                "!=#null#)",
                "null#)#{",
                ")#{#record",
                "{#record#set",
                "record#set#(",
                "set#(#ns",
                "(#ns#.",
                "ns#.#name",
                ".#name#,",
                "name#,#n",
                ",#n#)",
                "n#)#;",
                ")#;#}",
                ";#}#}",
                "}#}#}",
                "}#}#if",
                "}#if#(",
                "if#(#n",
                "(#n#.",
                "n#.#is",
                ".#is#assign",
                "is#assign#(",
                "assign#(#)",
                "(#)#)",
                ")#)#{",
                ")#{#Node",
                "{#Node#name",
                "Node#name#node",
                "name#node#=",
                "node#=#n",
                "=#n#.",
                "n#.#first",
                ".#first#child",
                "first#child#(",
                "child#(#)",
                "(#)#;",
                ")#;#name",
                ";#name#information",
                "name#information#ns",
                "information#ns#=",
                "ns#=#name",
                "=#name#information",
                "name#information#(",
                "information#(#t",
                "(#t#,",
                "t#,#name",
                ",#name#node",
                "name#node#,",
                "node#,#n",
                ",#n#)",
                "n#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#ns",
                "(#ns#!=",
                "ns#!=#null",
                "!=#null#)",
                "null#)#{",
                ")#{#if",
                "{#if#(",
                "if#(#ns",
                "(#ns#.",
                "ns#.#is",
                ".#is#prototype",
                "is#prototype#)",
                "prototype#)#{",
                ")#{#prototype",
                "{#prototype#set",
                "prototype#set#(",
                "set#(#ns",
                "(#ns#.",
                "ns#.#prototype",
                ".#prototype#class",
                "prototype#class#,",
                "class#,#ns",
                ",#ns#.",
                "ns#.#prototype",
                ".#prototype#property",
                "prototype#property#,",
                "property#,#n",
                ",#n#)",
                "n#)#;",
                ")#;#}",
                ";#}#else",
                "}#else#{",
                "else#{#record",
                "{#record#set",
                "record#set#(",
                "set#(#ns",
                "(#ns#.",
                "ns#.#name",
                ".#name#,",
                "name#,#name",
                ",#name#node",
                "name#node#)",
                "node#)#;",
                ")#;#}",
                ";#}#}",
                "}#}#}",
                "}#}#else",
                "}#else#if",
                "else#if#(",
                "if#(#n",
                "(#n#.",
                "n#.#is",
                ".#is#call",
                "is#call#(",
                "call#(#)",
                "(#)#)",
                ")#)#{",
                ")#{#Node",
                "{#Node#name",
                "Node#name#node",
                "name#node#=",
                "node#=#n",
                "=#n#.",
                "n#.#first",
                ".#first#child",
                "first#child#(",
                "child#(#)",
                "(#)#;",
                ")#;#name",
                ";#name#information",
                "name#information#ns",
                "information#ns#=",
                "ns#=#name",
                "=#name#information",
                "name#information#(",
                "information#(#t",
                "(#t#,",
                "t#,#name",
                ",#name#node",
                "name#node#,",
                "node#,#n",
                ",#n#)",
                "n#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#ns",
                "(#ns#!=",
                "ns#!=#null",
                "!=#null#&&",
                "null#&&#ns",
                "&&#ns#.",
                "ns#.#affects",
                ".#affects#class",
                "affects#class#def",
                "class#def#)",
                "def#)#{",
                ")#{#js",
                "{#js#name",
                "js#name#name",
                "name#name#=",
                "name#=#get",
                "=#get#name",
                "get#name#(",
                "name#(#ns",
                "(#ns#.",
                "ns#.#name",
                ".#name#,",
                "name#,#true",
                ",#true#)",
                "true#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#name",
                "(#name#!=",
                "name#!=#null",
                "!=#null#)",
                "null#)#ref",
                ")#ref#nodes",
                "ref#nodes#.",
                "nodes#.#add",
                ".#add#(",
                "add#(#new",
                "(#new#class",
                "new#class#defining",
                "class#defining#function",
                "defining#function#node",
                "function#node#(",
                "node#(#name",
                "(#name#,",
                "name#,#n",
                ",#n#,",
                "n#,#parent",
                ",#parent#,",
                "parent#,#parent",
                ",#parent#.",
                "parent#.#get",
                ".#get#parent",
                "get#parent#(",
                "parent#(#)",
                "(#)#)",
                ")#)#)",
                ")#)#;",
                ")#;#}",
                ";#}#}",
                "}#}#}",
                "}#}#}"
            ]
        }
    }
}