--- "/home/selab/\353\260\224\355\203\225\355\231\224\353\251\264/MCRepair2/APR_Resources/repair/combination_patches/Chart_11/700/ShapeUtilities_Origin.java"	2023-02-22 11:35:02.149525355 +0900
+++ "/home/selab/\353\260\224\355\203\225\355\231\224\353\251\264/MCRepair2/APR_Resources/repair/combination_patches/Chart_11/700/ShapeUtilities.java"	2023-02-22 11:35:02.149525355 +0900
@@ -261,40 +261,7 @@
      *
      * @return A boolean.
      */
-    public static boolean equal(GeneralPath p1, GeneralPath p2) {
-        if (p1 == null) {
-            return (p2 == null);
-        }
-        if (p2 == null) {
-            return false;
-        }
-        if (p1.getWindingRule() != p2.getWindingRule()) {
-            return false;
-        }
-        PathIterator iterator1 = p1.getPathIterator(null);
-        PathIterator iterator2 = p1.getPathIterator(null);
-        double[] d1 = new double[6];
-        double[] d2 = new double[6];
-        boolean done = iterator1.isDone() && iterator2.isDone();
-        while (!done) {
-            if (iterator1.isDone() != iterator2.isDone()) {
-                return false;
-            }
-            int seg1 = iterator1.currentSegment(d1);
-            int seg2 = iterator2.currentSegment(d2);
-            if (seg1 != seg2) {
-                return false;
-            }
-            if (!Arrays.equals(d1, d2)) {
-                return false;
-            }
-            iterator1.next();
-            iterator2.next();
-            done = iterator1.isDone() && iterator2.isDone();
-        }
-        return true;
-    }
-
+public static boolean equal ( GeneralPath p1 , GeneralPath p2 ) { if ( p1 == null ) { return ( p2 == null ) ; } if ( p2 == null ) { return false ; } if ( p1 . getWindingRule ( ) != p2 . getWindingRule ( ) ) { return false ; } PathIterator iterator1 = p1 . getPathIterator ( null ) ; PathIterator iterator2 = ( PathIterator ) p2 . getPathIterator ( null ) ; double [ ] d1 = new double [ 6 ] ; double [ ] d2 = new double [ 6 ] ; boolean done = iterator1 . isDone ( ) && iterator2 . isDone ( ) ; while ( ! done ) { if ( iterator1 . isDone ( ) != iterator2 . isDone ( ) ) { return false ; } int seg1 = iterator1 . currentSegment ( d1 ) ; int seg2 = iterator2 . currentSegment ( d2 ) ; if ( seg1 != seg2 ) { return false ; } if ( ! Arrays . equals ( d1 , d2 ) ) { return false ; } iterator1 . next ( ) ; iterator2 . next ( ) ; done = iterator1 . isDone ( ) && iterator2 . isDone ( ) ; } return true ; }
     /**
      * Creates and returns a translated shape.
      *
