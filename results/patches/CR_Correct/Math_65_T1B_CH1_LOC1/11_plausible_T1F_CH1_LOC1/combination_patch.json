{
    "AbstractLeastSquaresOptimizer": {
        "0": {
            "action_judgements": null,
            "action_score": 1.0,
            "buggy_code": "public double getChiSquare ( ) { double chiSquare = 0 ; for ( int i = 0 ; i < rows ; ++ i ) { final double residual = residuals [ i ] ;  chiSquare += residual * residual / residualsWeights [ i ] ;  } return chiSquare ; }",
            "buggy_dir": "",
            "criteria_token_length": 59,
            "criteria_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#public",
                "{#public#double",
                "public#double#chi",
                "double#chi#square",
                "chi#square#(",
                "square#(#)",
                "(#)#{",
                ")#{#double",
                "{#double#chi",
                "double#chi#square",
                "chi#square#=",
                "square#=#0",
                "=#0#;",
                "0#;#for",
                ";#for#(",
                "for#(#int",
                "(#int#i",
                "int#i#=",
                "i#=#0",
                "=#0#;",
                "0#;#i",
                ";#i#<",
                "i#<#rows",
                "<#rows#;",
                "rows#;#++",
                ";#++#i",
                "++#i#)",
                "i#)#{",
                ")#{#final",
                "{#final#double",
                "final#double#residual",
                "double#residual#=",
                "residual#=#residuals",
                "=#residuals#[",
                "residuals#[#i",
                "[#i#]",
                "i#]#;",
                "]#;#chi",
                ";#chi#square",
                "chi#square#+=",
                "square#+=#residual",
                "+=#residual#*",
                "residual#*#residual",
                "*#residual#/",
                "residual#/#residuals",
                "/#residuals#weights",
                "residuals#weights#[",
                "weights#[#i",
                "[#i#]",
                "i#]#;",
                "]#;#}",
                ";#}#return",
                "}#return#chi",
                "return#chi#square",
                "chi#square#;",
                "square#;#}",
                ";#}#}"
            ],
            "diffs": {
                "6": {
                    "action": "CHANGE",
                    "buggy_end_line": 6,
                    "buggy_size": 1,
                    "buggy_start_line": 6,
                    "fixed_end_line": 6,
                    "fixed_size": 1,
                    "fixed_start_line": 6
                }
            },
            "end_line": 261,
            "exp_ins": 0,
            "exp_other": 1,
            "file_ext": ".java",
            "file_key": "Math_65_src_main_java_org_apache_commons_math_optimization_general_AbstractLeastSquaresOptimizer",
            "file_name": "AbstractLeastSquaresOptimizer",
            "module_dir": "src/main/java/org/apache/commons/math/optimization/general",
            "module_id": "Math_65",
            "module_name": "Math",
            "module_num": "65",
            "multi_chunk_key": "Math_65_src_main_java_org_apache_commons_math_optimization_general_AbstractLeastSquaresOptimizer_method1_getChiSquare",
            "ngram_score": 0.8813559322033898,
            "patch": "public double getChiSquare ( ) { double chiSquare = 0 ; for ( int i = 0 ; i < rows ; ++ i ) { final double residual = residuals [ i ] ; chiSquare += residual * residual * residualsWeights [ i ] ; } return chiSquare ; }",
            "patch_index": 241,
            "per_ins": 0,
            "per_other": 1,
            "score_total": 0.941,
            "set_index": null,
            "start_line": 254,
            "tf_token_length": 59,
            "tf_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#public",
                "{#public#double",
                "public#double#chi",
                "double#chi#square",
                "chi#square#(",
                "square#(#)",
                "(#)#{",
                ")#{#double",
                "{#double#chi",
                "double#chi#square",
                "chi#square#=",
                "square#=#0",
                "=#0#;",
                "0#;#for",
                ";#for#(",
                "for#(#int",
                "(#int#i",
                "int#i#=",
                "i#=#0",
                "=#0#;",
                "0#;#i",
                ";#i#<",
                "i#<#rows",
                "<#rows#;",
                "rows#;#++",
                ";#++#i",
                "++#i#)",
                "i#)#{",
                ")#{#final",
                "{#final#double",
                "final#double#residual",
                "double#residual#=",
                "residual#=#residuals",
                "=#residuals#[",
                "residuals#[#i",
                "[#i#]",
                "i#]#;",
                "]#;#chi",
                ";#chi#square",
                "chi#square#+=",
                "square#+=#residual",
                "+=#residual#*",
                "residual#*#residual",
                "*#residual#*",
                "residual#*#residuals",
                "*#residuals#weights",
                "residuals#weights#[",
                "weights#[#i",
                "[#i#]",
                "i#]#;",
                "]#;#}",
                ";#}#return",
                "}#return#chi",
                "return#chi#square",
                "chi#square#;",
                "square#;#}",
                ";#}#}"
            ]
        }
    }
}