{
    "PolygonsSet": {
        "0": {
            "action_judgements": null,
            "action_score": 1.0,
            "buggy_code": "@ Override protected void computeGeometricalProperties ( ) { final Vector2D [ ] [ ] v = getVertices ( ) ; if ( v . length == 0 ) { final BSPTree < Euclidean2D > tree = getTree ( false ) ;  if ( ( Boolean ) tree . getAttribute ( ) ) {  setSize ( Double . POSITIVE_INFINITY ) ; setBarycenter ( Vector2D . NaN ) ; } else { setSize ( 0 ) ; setBarycenter ( new Vector2D ( 0 , 0 ) ) ; } } else if ( v [ 0 ] [ 0 ] == null ) { setSize ( Double . POSITIVE_INFINITY ) ; setBarycenter ( Vector2D . NaN ) ; } else { double sum = 0 ; double sumX = 0 ; double sumY = 0 ; for ( Vector2D [ ] loop : v ) { double x1 = loop [ loop . length - 1 ] . getX ( ) ; double y1 = loop [ loop . length - 1 ] . getY ( ) ; for ( final Vector2D point : loop ) { final double x0 = x1 ; final double y0 = y1 ; x1 = point . getX ( ) ; y1 = point . getY ( ) ; final double factor = x0 * y1 - y0 * x1 ; sum += factor ; sumX += factor * ( x0 + x1 ) ; sumY += factor * ( y0 + y1 ) ; } } if ( sum < 0 ) { setSize ( Double . POSITIVE_INFINITY ) ; setBarycenter ( Vector2D . NaN ) ; } else { setSize ( sum / 2 ) ; setBarycenter ( new Vector2D ( sumX / ( 3 * sum ) , sumY / ( 3 * sum ) ) ) ; } } }",
            "buggy_dir": "",
            "criteria_token_length": 395,
            "criteria_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#@",
                "{#@#Override",
                "@#Override#protected",
                "Override#protected#void",
                "protected#void#geometrical",
                "void#geometrical#properties",
                "geometrical#properties#(",
                "properties#(#)",
                "(#)#{",
                ")#{#final",
                "{#final#vector2",
                "final#vector2#d",
                "vector2#d#[",
                "d#[#]",
                "[#]#[",
                "]#[#]",
                "[#]#v",
                "]#v#=",
                "v#=#get",
                "=#get#vertices",
                "get#vertices#(",
                "vertices#(#)",
                "(#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#v",
                "(#v#.",
                "v#.#length",
                ".#length#==",
                "length#==#0",
                "==#0#)",
                "0#)#{",
                ")#{#final",
                "{#final#b",
                "final#b#s",
                "b#s#p",
                "s#p#tree",
                "p#tree#<",
                "tree#<#euclidean2",
                "<#euclidean2#d",
                "euclidean2#d#>",
                "d#>#tree",
                ">#tree#=",
                "tree#=#get",
                "=#get#tree",
                "get#tree#(",
                "tree#(#false",
                "(#false#)",
                "false#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#(",
                "(#(#Boolean",
                "(#Boolean#)",
                "Boolean#)#tree",
                ")#tree#.",
                "tree#.#get",
                ".#get#attribute",
                "get#attribute#(",
                "attribute#(#)",
                "(#)#)",
                ")#)#{",
                ")#{#set",
                "{#set#size",
                "set#size#(",
                "size#(#Double",
                "(#Double#.",
                "Double#.#p",
                ".#p#o",
                "p#o#s",
                "o#s#i",
                "s#i#t",
                "i#t#i",
                "t#i#v",
                "i#v#e",
                "v#e#i",
                "e#i#n",
                "i#n#f",
                "n#f#i",
                "f#i#n",
                "i#n#i",
                "n#i#t",
                "i#t#y",
                "t#y#)",
                "y#)#;",
                ")#;#set",
                ";#set#barycenter",
                "set#barycenter#(",
                "barycenter#(#vector2",
                "(#vector2#d",
                "vector2#d#.",
                "d#.#na",
                ".#na#n",
                "na#n#)",
                "n#)#;",
                ")#;#}",
                ";#}#else",
                "}#else#{",
                "else#{#set",
                "{#set#size",
                "set#size#(",
                "size#(#0",
                "(#0#)",
                "0#)#;",
                ")#;#set",
                ";#set#barycenter",
                "set#barycenter#(",
                "barycenter#(#new",
                "(#new#vector2",
                "new#vector2#d",
                "vector2#d#(",
                "d#(#0",
                "(#0#,",
                "0#,#0",
                ",#0#)",
                "0#)#)",
                ")#)#;",
                ")#;#}",
                ";#}#}",
                "}#}#else",
                "}#else#if",
                "else#if#(",
                "if#(#v",
                "(#v#[",
                "v#[#0",
                "[#0#]",
                "0#]#[",
                "]#[#0",
                "[#0#]",
                "0#]#==",
                "]#==#null",
                "==#null#)",
                "null#)#{",
                ")#{#set",
                "{#set#size",
                "set#size#(",
                "size#(#Double",
                "(#Double#.",
                "Double#.#p",
                ".#p#o",
                "p#o#s",
                "o#s#i",
                "s#i#t",
                "i#t#i",
                "t#i#v",
                "i#v#e",
                "v#e#i",
                "e#i#n",
                "i#n#f",
                "n#f#i",
                "f#i#n",
                "i#n#i",
                "n#i#t",
                "i#t#y",
                "t#y#)",
                "y#)#;",
                ")#;#set",
                ";#set#barycenter",
                "set#barycenter#(",
                "barycenter#(#vector2",
                "(#vector2#d",
                "vector2#d#.",
                "d#.#na",
                ".#na#n",
                "na#n#)",
                "n#)#;",
                ")#;#}",
                ";#}#else",
                "}#else#{",
                "else#{#double",
                "{#double#sum",
                "double#sum#=",
                "sum#=#0",
                "=#0#;",
                "0#;#double",
                ";#double#sum",
                "double#sum#x",
                "sum#x#=",
                "x#=#0",
                "=#0#;",
                "0#;#double",
                ";#double#sum",
                "double#sum#y",
                "sum#y#=",
                "y#=#0",
                "=#0#;",
                "0#;#for",
                ";#for#(",
                "for#(#vector2",
                "(#vector2#d",
                "vector2#d#[",
                "d#[#]",
                "[#]#loop",
                "]#loop#:",
                "loop#:#v",
                ":#v#)",
                "v#)#{",
                ")#{#double",
                "{#double#x1",
                "double#x1#=",
                "x1#=#loop",
                "=#loop#[",
                "loop#[#loop",
                "[#loop#.",
                "loop#.#length",
                ".#length#-",
                "length#-#1",
                "-#1#]",
                "1#]#.",
                "]#.#get",
                ".#get#x",
                "get#x#(",
                "x#(#)",
                "(#)#;",
                ")#;#double",
                ";#double#y1",
                "double#y1#=",
                "y1#=#loop",
                "=#loop#[",
                "loop#[#loop",
                "[#loop#.",
                "loop#.#length",
                ".#length#-",
                "length#-#1",
                "-#1#]",
                "1#]#.",
                "]#.#get",
                ".#get#y",
                "get#y#(",
                "y#(#)",
                "(#)#;",
                ")#;#for",
                ";#for#(",
                "for#(#final",
                "(#final#vector2",
                "final#vector2#d",
                "vector2#d#point",
                "d#point#:",
                "point#:#loop",
                ":#loop#)",
                "loop#)#{",
                ")#{#final",
                "{#final#double",
                "final#double#x0",
                "double#x0#=",
                "x0#=#x1",
                "=#x1#;",
                "x1#;#final",
                ";#final#double",
                "final#double#y0",
                "double#y0#=",
                "y0#=#y1",
                "=#y1#;",
                "y1#;#x1",
                ";#x1#=",
                "x1#=#point",
                "=#point#.",
                "point#.#get",
                ".#get#x",
                "get#x#(",
                "x#(#)",
                "(#)#;",
                ")#;#y1",
                ";#y1#=",
                "y1#=#point",
                "=#point#.",
                "point#.#get",
                ".#get#y",
                "get#y#(",
                "y#(#)",
                "(#)#;",
                ")#;#final",
                ";#final#double",
                "final#double#factor",
                "double#factor#=",
                "factor#=#x0",
                "=#x0#*",
                "x0#*#y1",
                "*#y1#-",
                "y1#-#y0",
                "-#y0#*",
                "y0#*#x1",
                "*#x1#;",
                "x1#;#sum",
                ";#sum#+=",
                "sum#+=#factor",
                "+=#factor#;",
                "factor#;#sum",
                ";#sum#x",
                "sum#x#+=",
                "x#+=#factor",
                "+=#factor#*",
                "factor#*#(",
                "*#(#x0",
                "(#x0#+",
                "x0#+#x1",
                "+#x1#)",
                "x1#)#;",
                ")#;#sum",
                ";#sum#y",
                "sum#y#+=",
                "y#+=#factor",
                "+=#factor#*",
                "factor#*#(",
                "*#(#y0",
                "(#y0#+",
                "y0#+#y1",
                "+#y1#)",
                "y1#)#;",
                ")#;#}",
                ";#}#}",
                "}#}#if",
                "}#if#(",
                "if#(#sum",
                "(#sum#<",
                "sum#<#0",
                "<#0#)",
                "0#)#{",
                ")#{#set",
                "{#set#size",
                "set#size#(",
                "size#(#Double",
                "(#Double#.",
                "Double#.#p",
                ".#p#o",
                "p#o#s",
                "o#s#i",
                "s#i#t",
                "i#t#i",
                "t#i#v",
                "i#v#e",
                "v#e#i",
                "e#i#n",
                "i#n#f",
                "n#f#i",
                "f#i#n",
                "i#n#i",
                "n#i#t",
                "i#t#y",
                "t#y#)",
                "y#)#;",
                ")#;#set",
                ";#set#barycenter",
                "set#barycenter#(",
                "barycenter#(#vector2",
                "(#vector2#d",
                "vector2#d#.",
                "d#.#na",
                ".#na#n",
                "na#n#)",
                "n#)#;",
                ")#;#}",
                ";#}#else",
                "}#else#{",
                "else#{#set",
                "{#set#size",
                "set#size#(",
                "size#(#sum",
                "(#sum#/",
                "sum#/#2",
                "/#2#)",
                "2#)#;",
                ")#;#set",
                ";#set#barycenter",
                "set#barycenter#(",
                "barycenter#(#new",
                "(#new#vector2",
                "new#vector2#d",
                "vector2#d#(",
                "d#(#sum",
                "(#sum#x",
                "sum#x#/",
                "x#/#(",
                "/#(#3",
                "(#3#*",
                "3#*#sum",
                "*#sum#)",
                "sum#)#,",
                ")#,#sum",
                ",#sum#y",
                "sum#y#/",
                "y#/#(",
                "/#(#3",
                "(#3#*",
                "3#*#sum",
                "*#sum#)",
                "sum#)#)",
                ")#)#)",
                ")#)#;",
                ")#;#}",
                ";#}#}",
                "}#}#}",
                "}#}#}"
            ],
            "diffs": {
                "7": {
                    "action": "CHANGE",
                    "buggy_end_line": 7,
                    "buggy_size": 1,
                    "buggy_start_line": 7,
                    "fixed_end_line": 7,
                    "fixed_size": 1,
                    "fixed_start_line": 7
                }
            },
            "end_line": 181,
            "exp_ins": 0,
            "exp_other": 1,
            "file_ext": ".java",
            "file_key": "Math_32_src_main_java_org_apache_commons_math3_geometry_euclidean_twod_PolygonsSet",
            "file_name": "PolygonsSet",
            "module_dir": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod",
            "module_id": "Math_32",
            "module_name": "Math",
            "module_num": "32",
            "multi_chunk_key": "Math_32_src_main_java_org_apache_commons_math3_geometry_euclidean_twod_PolygonsSet_method1_computeGeometricalProperties",
            "ngram_score": 0.628140703517588,
            "patch": "@ Override protected void computeGeometricalProperties ( ) { final Vector2D [ ] [ ] v = getVertices ( ) ; if ( v . length == 0 ) { final BSPTree < Euclidean2D > tree = getTree ( false ) ; if ( tree != null && tree . getAttribute ( ) instanceof Boolean ) { setSize ( Double . POSITIVE_INFINITY ) ; setBarycenter ( Vector2D . NaN ) ; } else { setSize ( 0 ) ; setBarycenter ( new Vector2D ( 0 , 0 ) ) ; } } else if ( v [ 0 ] [ 0 ] == null ) { setSize ( Double . POSITIVE_INFINITY ) ; setBarycenter ( Vector2D . NaN ) ; } else { double sum = 0 ; double sumX = 0 ; double sumY = 0 ; for ( Vector2D [ ] loop : v ) { double x1 = loop [ loop . length - 1 ] . getX ( ) ; double y1 = loop [ loop . length - 1 ] . getY ( ) ; for ( final Vector2D point : loop ) { final double x0 = x1 ; final double y0 = y1 ; x1 = point . getX ( ) ; y1 = point . getY ( ) ; final double factor = x0 * y1 - y0 * x1 ; sum += factor ; sumX += factor * ( x0 + x1 ) ; sumY += factor * ( y0 + y1 ) ; } } if ( sum < 0 ) { setSize ( Double . POSITIVE_INFINITY ) ; setBarycenter ( Vector2D . NaN ) ; } else { setSize ( sum / 2 ) ; setBarycenter ( new Vector2D ( sumX / ( 3 * sum ) , sumY / ( 3 * sum ) ) ) ; } } }",
            "patch_index": 416,
            "per_ins": 0,
            "per_other": 1,
            "score_total": 0.814,
            "set_index": null,
            "start_line": 129,
            "tf_token_length": 398,
            "tf_tokens": [
                "class#source#code",
                "source#code#{",
                "code#{#@",
                "{#@#Override",
                "@#Override#protected",
                "Override#protected#void",
                "protected#void#geometrical",
                "void#geometrical#properties",
                "geometrical#properties#(",
                "properties#(#)",
                "(#)#{",
                ")#{#final",
                "{#final#vector2",
                "final#vector2#d",
                "vector2#d#[",
                "d#[#]",
                "[#]#[",
                "]#[#]",
                "[#]#v",
                "]#v#=",
                "v#=#get",
                "=#get#vertices",
                "get#vertices#(",
                "vertices#(#)",
                "(#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#v",
                "(#v#.",
                "v#.#length",
                ".#length#==",
                "length#==#0",
                "==#0#)",
                "0#)#{",
                ")#{#final",
                "{#final#b",
                "final#b#s",
                "b#s#p",
                "s#p#tree",
                "p#tree#<",
                "tree#<#euclidean2",
                "<#euclidean2#d",
                "euclidean2#d#>",
                "d#>#tree",
                ">#tree#=",
                "tree#=#get",
                "=#get#tree",
                "get#tree#(",
                "tree#(#false",
                "(#false#)",
                "false#)#;",
                ")#;#if",
                ";#if#(",
                "if#(#tree",
                "(#tree#!=",
                "tree#!=#null",
                "!=#null#&&",
                "null#&&#tree",
                "&&#tree#.",
                "tree#.#get",
                ".#get#attribute",
                "get#attribute#(",
                "attribute#(#)",
                "(#)#instanceof",
                ")#instanceof#Boolean",
                "instanceof#Boolean#)",
                "Boolean#)#{",
                ")#{#set",
                "{#set#size",
                "set#size#(",
                "size#(#Double",
                "(#Double#.",
                "Double#.#p",
                ".#p#o",
                "p#o#s",
                "o#s#i",
                "s#i#t",
                "i#t#i",
                "t#i#v",
                "i#v#e",
                "v#e#i",
                "e#i#n",
                "i#n#f",
                "n#f#i",
                "f#i#n",
                "i#n#i",
                "n#i#t",
                "i#t#y",
                "t#y#)",
                "y#)#;",
                ")#;#set",
                ";#set#barycenter",
                "set#barycenter#(",
                "barycenter#(#vector2",
                "(#vector2#d",
                "vector2#d#.",
                "d#.#na",
                ".#na#n",
                "na#n#)",
                "n#)#;",
                ")#;#}",
                ";#}#else",
                "}#else#{",
                "else#{#set",
                "{#set#size",
                "set#size#(",
                "size#(#0",
                "(#0#)",
                "0#)#;",
                ")#;#set",
                ";#set#barycenter",
                "set#barycenter#(",
                "barycenter#(#new",
                "(#new#vector2",
                "new#vector2#d",
                "vector2#d#(",
                "d#(#0",
                "(#0#,",
                "0#,#0",
                ",#0#)",
                "0#)#)",
                ")#)#;",
                ")#;#}",
                ";#}#}",
                "}#}#else",
                "}#else#if",
                "else#if#(",
                "if#(#v",
                "(#v#[",
                "v#[#0",
                "[#0#]",
                "0#]#[",
                "]#[#0",
                "[#0#]",
                "0#]#==",
                "]#==#null",
                "==#null#)",
                "null#)#{",
                ")#{#set",
                "{#set#size",
                "set#size#(",
                "size#(#Double",
                "(#Double#.",
                "Double#.#p",
                ".#p#o",
                "p#o#s",
                "o#s#i",
                "s#i#t",
                "i#t#i",
                "t#i#v",
                "i#v#e",
                "v#e#i",
                "e#i#n",
                "i#n#f",
                "n#f#i",
                "f#i#n",
                "i#n#i",
                "n#i#t",
                "i#t#y",
                "t#y#)",
                "y#)#;",
                ")#;#set",
                ";#set#barycenter",
                "set#barycenter#(",
                "barycenter#(#vector2",
                "(#vector2#d",
                "vector2#d#.",
                "d#.#na",
                ".#na#n",
                "na#n#)",
                "n#)#;",
                ")#;#}",
                ";#}#else",
                "}#else#{",
                "else#{#double",
                "{#double#sum",
                "double#sum#=",
                "sum#=#0",
                "=#0#;",
                "0#;#double",
                ";#double#sum",
                "double#sum#x",
                "sum#x#=",
                "x#=#0",
                "=#0#;",
                "0#;#double",
                ";#double#sum",
                "double#sum#y",
                "sum#y#=",
                "y#=#0",
                "=#0#;",
                "0#;#for",
                ";#for#(",
                "for#(#vector2",
                "(#vector2#d",
                "vector2#d#[",
                "d#[#]",
                "[#]#loop",
                "]#loop#:",
                "loop#:#v",
                ":#v#)",
                "v#)#{",
                ")#{#double",
                "{#double#x1",
                "double#x1#=",
                "x1#=#loop",
                "=#loop#[",
                "loop#[#loop",
                "[#loop#.",
                "loop#.#length",
                ".#length#-",
                "length#-#1",
                "-#1#]",
                "1#]#.",
                "]#.#get",
                ".#get#x",
                "get#x#(",
                "x#(#)",
                "(#)#;",
                ")#;#double",
                ";#double#y1",
                "double#y1#=",
                "y1#=#loop",
                "=#loop#[",
                "loop#[#loop",
                "[#loop#.",
                "loop#.#length",
                ".#length#-",
                "length#-#1",
                "-#1#]",
                "1#]#.",
                "]#.#get",
                ".#get#y",
                "get#y#(",
                "y#(#)",
                "(#)#;",
                ")#;#for",
                ";#for#(",
                "for#(#final",
                "(#final#vector2",
                "final#vector2#d",
                "vector2#d#point",
                "d#point#:",
                "point#:#loop",
                ":#loop#)",
                "loop#)#{",
                ")#{#final",
                "{#final#double",
                "final#double#x0",
                "double#x0#=",
                "x0#=#x1",
                "=#x1#;",
                "x1#;#final",
                ";#final#double",
                "final#double#y0",
                "double#y0#=",
                "y0#=#y1",
                "=#y1#;",
                "y1#;#x1",
                ";#x1#=",
                "x1#=#point",
                "=#point#.",
                "point#.#get",
                ".#get#x",
                "get#x#(",
                "x#(#)",
                "(#)#;",
                ")#;#y1",
                ";#y1#=",
                "y1#=#point",
                "=#point#.",
                "point#.#get",
                ".#get#y",
                "get#y#(",
                "y#(#)",
                "(#)#;",
                ")#;#final",
                ";#final#double",
                "final#double#factor",
                "double#factor#=",
                "factor#=#x0",
                "=#x0#*",
                "x0#*#y1",
                "*#y1#-",
                "y1#-#y0",
                "-#y0#*",
                "y0#*#x1",
                "*#x1#;",
                "x1#;#sum",
                ";#sum#+=",
                "sum#+=#factor",
                "+=#factor#;",
                "factor#;#sum",
                ";#sum#x",
                "sum#x#+=",
                "x#+=#factor",
                "+=#factor#*",
                "factor#*#(",
                "*#(#x0",
                "(#x0#+",
                "x0#+#x1",
                "+#x1#)",
                "x1#)#;",
                ")#;#sum",
                ";#sum#y",
                "sum#y#+=",
                "y#+=#factor",
                "+=#factor#*",
                "factor#*#(",
                "*#(#y0",
                "(#y0#+",
                "y0#+#y1",
                "+#y1#)",
                "y1#)#;",
                ")#;#}",
                ";#}#}",
                "}#}#if",
                "}#if#(",
                "if#(#sum",
                "(#sum#<",
                "sum#<#0",
                "<#0#)",
                "0#)#{",
                ")#{#set",
                "{#set#size",
                "set#size#(",
                "size#(#Double",
                "(#Double#.",
                "Double#.#p",
                ".#p#o",
                "p#o#s",
                "o#s#i",
                "s#i#t",
                "i#t#i",
                "t#i#v",
                "i#v#e",
                "v#e#i",
                "e#i#n",
                "i#n#f",
                "n#f#i",
                "f#i#n",
                "i#n#i",
                "n#i#t",
                "i#t#y",
                "t#y#)",
                "y#)#;",
                ")#;#set",
                ";#set#barycenter",
                "set#barycenter#(",
                "barycenter#(#vector2",
                "(#vector2#d",
                "vector2#d#.",
                "d#.#na",
                ".#na#n",
                "na#n#)",
                "n#)#;",
                ")#;#}",
                ";#}#else",
                "}#else#{",
                "else#{#set",
                "{#set#size",
                "set#size#(",
                "size#(#sum",
                "(#sum#/",
                "sum#/#2",
                "/#2#)",
                "2#)#;",
                ")#;#set",
                ";#set#barycenter",
                "set#barycenter#(",
                "barycenter#(#new",
                "(#new#vector2",
                "new#vector2#d",
                "vector2#d#(",
                "d#(#sum",
                "(#sum#x",
                "sum#x#/",
                "x#/#(",
                "/#(#3",
                "(#3#*",
                "3#*#sum",
                "*#sum#)",
                "sum#)#,",
                ")#,#sum",
                ",#sum#y",
                "sum#y#/",
                "y#/#(",
                "/#(#3",
                "(#3#*",
                "3#*#sum",
                "*#sum#)",
                "sum#)#)",
                ")#)#)",
                ")#)#;",
                ")#;#}",
                ";#}#}",
                "}#}#}",
                "}#}#}"
            ]
        }
    }
}